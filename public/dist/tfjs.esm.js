var LU=Object.create,rS=Object.defineProperty,MU=Object.getOwnPropertyDescriptor,zU=Object.getOwnPropertyNames,BU=Object.getPrototypeOf,VU=Object.prototype.hasOwnProperty,Lg=(e=>"undefined"!=typeof require?require:"undefined"!=typeof Proxy?new Proxy(e,{get:(e,t)=>("undefined"!=typeof require?require:e)[t]}):e)((function(e){if("undefined"!=typeof require)return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')})),yr=(e,t)=>()=>(t||e((t={exports:{}}).exports,t),t.exports),Wt=(e,t)=>{for(var n in t)rS(e,n,{get:t[n],enumerable:!0})},GU=(e,t,n,a)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let r of zU(t))!VU.call(e,r)&&r!==n&&rS(e,r,{get:()=>t[r],enumerable:!(a=MU(t,r))||a.enumerable});return e},_l=(e,t,n)=>(n=null!=e?LU(BU(e)):{},GU(!t&&e&&e.__esModule?n:rS(n,"default",{value:e,enumerable:!0}),e)),_1=yr(((e,t)=>{t.exports=a;var n=null;try{n=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function a(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}a.prototype.__isLong__,Object.defineProperty(a.prototype,"__isLong__",{value:!0}),a.isLong=r;var s={},i={};function o(e,t){var n,a,r;return t?(r=0<=(e>>>=0)&&e<256)&&(a=i[e])?a:(n=u(e,(0|e)<0?-1:0,!0),r&&(i[e]=n),n):(r=-128<=(e|=0)&&e<128)&&(a=s[e])?a:(n=u(e,e<0?-1:0,!1),r&&(s[e]=n),n)}function l(e,t){if(isNaN(e))return t?b:y;if(t){if(e<0)return b;if(e>=f)return I}else{if(e<=-m)return S;if(e+1>=m)return k}return e<0?l(-e,t).neg():u(e%c|0,e/c|0,t)}function u(e,t,n){return new a(e,t,n)}a.fromInt=o,a.fromNumber=l,a.fromBits=u;var p=Math.pow;function h(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return y;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var a;if((a=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===a)return h(e.substring(1),t,n).neg();for(var r=l(p(n,8)),s=y,i=0;i<e.length;i+=8){var o=Math.min(8,e.length-i),u=parseInt(e.substring(i,i+o),n);if(o<8){var d=l(p(n,o));s=s.mul(d).add(l(u))}else s=(s=s.mul(r)).add(l(u))}return s.unsigned=t,s}function d(e,t){return"number"==typeof e?l(e,t):"string"==typeof e?h(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}a.fromString=h,a.fromValue=d;var c=4294967296,f=c*c,m=f/2,g=o(1<<24),y=o(0);a.ZERO=y;var b=o(0,!0);a.UZERO=b;var x=o(1);a.ONE=x;var v=o(1,!0);a.UONE=v;var w=o(-1);a.NEG_ONE=w;var k=u(-1,2147483647,!1);a.MAX_VALUE=k;var I=u(-1,-1,!0);a.MAX_UNSIGNED_VALUE=I;var S=u(0,-2147483648,!1);a.MIN_VALUE=S;var N=a.prototype;N.toInt=function(){return this.unsigned?this.low>>>0:this.low},N.toNumber=function(){return this.unsigned?(this.high>>>0)*c+(this.low>>>0):this.high*c+(this.low>>>0)},N.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(S)){var t=l(e),n=this.div(t),a=n.mul(t).sub(this);return n.toString(e)+a.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=l(p(e,6),this.unsigned),s=this,i="";;){var o=s.div(r),u=(s.sub(o.mul(r)).toInt()>>>0).toString(e);if((s=o).isZero())return u+i;for(;u.length<6;)u="0"+u;i=""+u+i}},N.getHighBits=function(){return this.high},N.getHighBitsUnsigned=function(){return this.high>>>0},N.getLowBits=function(){return this.low},N.getLowBitsUnsigned=function(){return this.low>>>0},N.getNumBitsAbs=function(){if(this.isNegative())return this.eq(S)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},N.isZero=function(){return 0===this.high&&0===this.low},N.eqz=N.isZero,N.isNegative=function(){return!this.unsigned&&this.high<0},N.isPositive=function(){return this.unsigned||this.high>=0},N.isOdd=function(){return 1==(1&this.low)},N.isEven=function(){return 0==(1&this.low)},N.equals=function(e){return r(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},N.eq=N.equals,N.notEquals=function(e){return!this.eq(e)},N.neq=N.notEquals,N.ne=N.notEquals,N.lessThan=function(e){return this.comp(e)<0},N.lt=N.lessThan,N.lessThanOrEqual=function(e){return this.comp(e)<=0},N.lte=N.lessThanOrEqual,N.le=N.lessThanOrEqual,N.greaterThan=function(e){return this.comp(e)>0},N.gt=N.greaterThan,N.greaterThanOrEqual=function(e){return this.comp(e)>=0},N.gte=N.greaterThanOrEqual,N.ge=N.greaterThanOrEqual,N.compare=function(e){if(r(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},N.comp=N.compare,N.negate=function(){return!this.unsigned&&this.eq(S)?S:this.not().add(x)},N.neg=N.negate,N.add=function(e){r(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,a=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,p=0,h=0,c=0,f=0;return c+=(f+=s+(65535&e.low))>>>16,h+=(c+=a+l)>>>16,p+=(h+=n+o)>>>16,p+=t+i,u((c&=65535)<<16|(f&=65535),(p&=65535)<<16|(h&=65535),this.unsigned)},N.subtract=function(e){return r(e)||(e=d(e)),this.add(e.neg())},N.sub=N.subtract,N.multiply=function(e){if(this.isZero())return y;if(r(e)||(e=d(e)),n)return u(n.mul(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned);if(e.isZero())return y;if(this.eq(S))return e.isOdd()?S:y;if(e.eq(S))return this.isOdd()?S:y;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(g)&&e.lt(g))return l(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,a=65535&this.high,s=this.low>>>16,i=65535&this.low,o=e.high>>>16,p=65535&e.high,h=e.low>>>16,c=65535&e.low,f=0,m=0,b=0,x=0;return b+=(x+=i*c)>>>16,m+=(b+=s*c)>>>16,b&=65535,m+=(b+=i*h)>>>16,f+=(m+=a*c)>>>16,m&=65535,f+=(m+=s*h)>>>16,m&=65535,f+=(m+=i*p)>>>16,f+=t*c+a*h+s*p+i*o,u((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(m&=65535),this.unsigned)},N.mul=N.multiply,N.divide=function(e){if(r(e)||(e=d(e)),e.isZero())throw Error("division by zero");var t,a,s;if(n)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?n.div_u:n.div_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?b:y;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return b;if(e.gt(this.shru(1)))return v;s=b}else{if(this.eq(S))return e.eq(x)||e.eq(w)?S:e.eq(S)?x:(t=this.shr(1).div(e).shl(1)).eq(y)?e.isNegative()?x:w:(a=this.sub(e.mul(t)),s=t.add(a.div(e)));if(e.eq(S))return this.unsigned?b:y;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=y}for(a=this;a.gte(e);){t=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(t)/Math.LN2),o=i<=48?1:p(2,i-48),h=l(t),c=h.mul(e);c.isNegative()||c.gt(a);)c=(h=l(t-=o,this.unsigned)).mul(e);h.isZero()&&(h=x),s=s.add(h),a=a.sub(c)}return s},N.div=N.divide,N.modulo=function(e){return r(e)||(e=d(e)),n?u((this.unsigned?n.rem_u:n.rem_s)(this.low,this.high,e.low,e.high),n.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},N.mod=N.modulo,N.rem=N.modulo,N.not=function(){return u(~this.low,~this.high,this.unsigned)},N.and=function(e){return r(e)||(e=d(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},N.or=function(e){return r(e)||(e=d(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},N.xor=function(e){return r(e)||(e=d(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},N.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},N.shl=N.shiftLeft,N.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},N.shr=N.shiftRight,N.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},N.shru=N.shiftRightUnsigned,N.shr_u=N.shiftRightUnsigned,N.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},N.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},N.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},N.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},N.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},a.fromBytes=function(e,t,n){return n?a.fromBytesLE(e,t):a.fromBytesBE(e,t)},a.fromBytesLE=function(e,t){return new a(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},a.fromBytesBE=function(e,t){return new a(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}})),uE=yr((()=>{})),cE=yr((()=>{})),m_=yr(((e,t)=>{!function(e,t,n){function a(e){var t=this,n=function(){var e=4022871197;return function(t){t=String(t);for(var n=0;n<t.length;n++){var a=.02519603282416938*(e+=t.charCodeAt(n));a-=e=a>>>0,e=(a*=e)>>>0,e+=4294967296*(a-=e)}return 2.3283064365386963e-10*(e>>>0)}}();t.next=function(){var e=2091639*t.s0+2.3283064365386963e-10*t.c;return t.s0=t.s1,t.s1=t.s2,t.s2=e-(t.c=0|e)},t.c=1,t.s0=n(" "),t.s1=n(" "),t.s2=n(" "),t.s0-=n(e),t.s0<0&&(t.s0+=1),t.s1-=n(e),t.s1<0&&(t.s1+=1),t.s2-=n(e),t.s2<0&&(t.s2+=1),n=null}function r(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function s(e,t){var n=new a(e),s=t&&t.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,s&&("object"==typeof s&&r(s,n),i.state=function(){return r(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.alea=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),d_=yr(((e,t)=>{!function(e,t,n){function a(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),t.next()}function r(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function s(e,t){var n=new a(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&r(s,n),i.state=function(){return r(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor128=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),g_=yr(((e,t)=>{!function(e,t,n){function a(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var a=0;a<n.length+64;a++)t.x^=0|n.charCodeAt(a),a==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function r(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function s(e,t){var n=new a(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&r(s,n),i.state=function(){return r(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorwow=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),y_=yr(((e,t)=>{!function(e,t,n){function a(e){var t=this;t.next=function(){var e,n,a=t.x,r=t.i;return e=a[r],n=(e^=e>>>7)^e<<24,n^=(e=a[r+1&7])^e>>>10,n^=(e=a[r+3&7])^e>>>3,n^=(e=a[r+4&7])^e<<7,e=a[r+7&7],n^=(e^=e<<13)^e<<9,a[r]=n,t.i=r+1&7,n},function(e,t){var n,a=[];if(t===(0|t))a[0]=t;else for(t=""+t,n=0;n<t.length;++n)a[7&n]=a[7&n]<<15^t.charCodeAt(n)+a[n+1&7]<<13;for(;a.length<8;)a.push(0);for(n=0;n<8&&0===a[n];++n);for(8==n?a[7]=-1:a[n],e.x=a,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function r(e,t){return t.x=e.x.slice(),t.i=e.i,t}function s(e,t){null==e&&(e=+new Date);var n=new a(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.x&&r(s,n),i.state=function(){return r(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xorshift7=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),w_=yr(((e,t)=>{!function(e,t,n){function a(e){var t=this;t.next=function(){var e,n,a=t.w,r=t.X,s=t.i;return t.w=a=a+1640531527|0,n=r[s+34&127],e=r[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[s]=n^e,t.i=s,n+(a^a>>>16)|0},function(e,t){var n,a,r,s,i,o=[],l=128;for(t===(0|t)?(a=t,t=null):(t+="\0",a=0,l=Math.max(l,t.length)),r=0,s=-32;s<l;++s)t&&(a^=t.charCodeAt((s+32)%t.length)),0===s&&(i=a),a^=a<<10,a^=a>>>15,a^=a<<4,a^=a>>>13,s>=0&&(i=i+1640531527|0,r=0==(n=o[127&s]^=a+i)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,s=512;s>0;--s)a=o[r+34&127],n=o[r=r+1&127],a^=a<<13,n^=n<<17,a^=a>>>15,n^=n>>>12,o[r]=a^n;e.w=i,e.X=o,e.i=r}(t,e)}function r(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function s(e,t){null==e&&(e=+new Date);var n=new a(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&(s.X&&r(s,n),i.state=function(){return r(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.xor4096=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),I_=yr(((e,t)=>{!function(e,t,n){function a(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,a=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-a|0,a=a<<24^a>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-a|0,t.d=a<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var a=0;a<n.length+20;a++)t.b^=0|n.charCodeAt(a),t.next()}function r(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function s(e,t){var n=new a(e),s=t&&t.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},i.int32=n.next,i.quick=i,s&&("object"==typeof s&&r(s,n),i.state=function(){return r(n,{})}),i}t&&t.exports?t.exports=s:n&&n.amd?n((function(){return s})):this.tychei=s}(0,"object"==typeof t&&t,"function"==typeof define&&define)})),v_=yr((()=>{})),N_=yr(((e,t)=>{!function(e,n,a){var r,s=256,i="random",o=a.pow(s,6),l=a.pow(2,52),u=2*l,p=255;function h(t,p,h){var y=[],b=m(f((p=1==p?{entropy:!0}:p||{}).entropy?[t,g(n)]:null==t?function(){try{var t;return r&&(t=r.randomBytes)?t=t(s):(t=new Uint8Array(s),(e.crypto||e.msCrypto).getRandomValues(t)),g(t)}catch(t){var a=e.navigator,i=a&&a.plugins;return[+new Date,e,i,e.screen,g(n)]}}():t,3),y),x=new d(y),v=function(){for(var e=x.g(6),t=o,n=0;e<l;)e=(e+n)*s,t*=s,n=x.g(1);for(;e>=u;)e/=2,t/=2,n>>>=1;return(e+n)/t};return v.int32=function(){return 0|x.g(4)},v.quick=function(){return x.g(4)/4294967296},v.double=v,m(g(x.S),n),(p.pass||h||function(e,t,n,r){return r&&(r.S&&c(r,x),e.state=function(){return c(x,{})}),n?(a[i]=e,t):e})(v,b,"global"in p?p.global:this==a,p.state)}function d(e){var t,n=e.length,a=this,r=0,i=a.i=a.j=0,o=a.S=[];for(n||(e=[n++]);r<s;)o[r]=r++;for(r=0;r<s;r++)o[r]=o[i=p&i+e[r%n]+(t=o[r])],o[i]=t;(a.g=function(e){for(var t,n=0,r=a.i,i=a.j,o=a.S;e--;)t=o[r=p&r+1],n=n*s+o[p&(o[r]=o[i=p&i+t])+(o[i]=t)];return a.i=r,a.j=i,n})(s)}function c(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function f(e,t){var n,a=[],r=typeof e;if(t&&"object"==r)for(n in e)try{a.push(f(e[n],t-1))}catch(e){}return a.length?a:"string"==r?e:e+"\0"}function m(e,t){for(var n,a=e+"",r=0;r<a.length;)t[p&r]=p&(n^=19*t[p&r])+a.charCodeAt(r++);return g(t)}function g(e){return String.fromCharCode.apply(0,e)}if(m(a.random(),n),"object"==typeof t&&t.exports){t.exports=h;try{r=v_()}catch(e){}}else"function"==typeof define&&define.amd?define((function(){return h})):a["seed"+i]=h}("undefined"!=typeof self?self:e,[],Math)})),dh=yr(((e,t)=>{var n=m_(),a=d_(),r=g_(),s=y_(),i=w_(),o=I_(),l=N_();l.alea=n,l.xor128=a,l.xorwow=r,l.xorshift7=s,l.xor4096=i,l.tychei=o,t.exports=l})),bN=yr((()=>{})),Jb=yr((()=>{})),ag=yr((()=>{})),HW=yr((()=>{})),qW=yr((()=>{})),KW=yr((()=>{})),jW=yr(((e,t)=>{var n,a=(n="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(n=n||__filename),function(e){function t(){return $.buffer!=F&&V($.buffer),M}function a(){return $.buffer!=F&&V($.buffer),O}function r(){return $.buffer!=F&&V($.buffer),z}function s(){return $.buffer!=F&&V($.buffer),L}var i,o,l,u=void 0!==(e=e||{})?e:{};u.ready=new Promise((function(e,t){i=e,o=t})),"undefined"!=typeof process&&process.listeners&&(l={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var p,h,d,c=Object.assign({},u),f=[],m=(e,t)=>{throw t},g="object"==typeof window,y="function"==typeof importScripts,b="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,x=u.ENVIRONMENT_IS_PTHREAD||!1,v="";function w(e){return u.locateFile?u.locateFile(e,v):v+e}if(b){var k,I;let e;v=y?ag().dirname(v)+"/":__dirname+"/","function"==typeof Lg&&(k=Jb(),I=ag()),p=(e,t)=>(e=I.normalize(e),k.readFileSync(e,t?void 0:"utf8")),d=e=>{var t=p(e,!0);return t.buffer||(t=new Uint8Array(t)),t},h=(e,t,n)=>{e=I.normalize(e),k.readFile(e,(function(e,a){e?n(e):t(a.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),f=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof se))throw e})),process.on("unhandledRejection",(function(e){throw e})),m=(e,t)=>{if(K())throw process.exitCode=e,t;(function(e){e instanceof se||E("exiting due to exception: "+e)})(t),process.exit(e)},u.inspect=function(){return"[Emscripten Module object]"};try{e=HW()}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=e.Worker}else(g||y)&&(y?v=self.location.href:"undefined"!=typeof document&&document.currentScript&&(v=document.currentScript.src),void 0!==n&&n&&(v=n),v=0!==v.indexOf("blob:")?v.substr(0,v.replace(/[?#].*/,"").lastIndexOf("/")+1):"",b||(p=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},y&&(d=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),h=(e,t,n)=>{var a=new XMLHttpRequest;a.open("GET",e,!0),a.responseType="arraybuffer",a.onload=()=>{200==a.status||0==a.status&&a.response?t(a.response):n()},a.onerror=n,a.send(null)}));b&&"undefined"==typeof performance&&(global.performance=qW().performance);var S=console.log.bind(console),N=console.warn.bind(console);b&&(S=e=>k.writeSync(1,e+"\n"),N=e=>k.writeSync(2,e+"\n"));var T,C=u.print||S,E=u.printErr||N;Object.assign(u,c),c=null,u.arguments&&(f=u.arguments),u.thisProgram&&u.thisProgram,u.quit&&(m=u.quit),Atomics.load,Atomics.store,Atomics.compareExchange,u.wasmBinary&&(T=u.wasmBinary);var _=u.noExitRuntime||!0;"object"!=typeof WebAssembly&&ee("no native wasm support detected");var $,A,R,F,D,M,O,z,L,P=!1,B="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function W(e,t,n){for(var a=t+n,r=t;e[r]&&!(r>=a);)++r;if(r-t>16&&e.buffer&&B)return B.decode(e.buffer instanceof SharedArrayBuffer?e.slice(t,r):e.subarray(t,r));for(var s="";t<r;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function V(e){F=e,u.HEAP8=D=new Int8Array(e),u.HEAP16=new Int16Array(e),u.HEAP32=O=new Int32Array(e),u.HEAPU8=M=new Uint8Array(e),u.HEAPU16=new Uint16Array(e),u.HEAPU32=z=new Uint32Array(e),u.HEAPF32=new Float32Array(e),u.HEAPF64=L=new Float64Array(e)}x&&(F=u.buffer);var U=u.INITIAL_MEMORY||16777216;if(x)$=u.wasmMemory,F=u.buffer;else if(u.wasmMemory)$=u.wasmMemory;else if(!(($=new WebAssembly.Memory({initial:U/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw E("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),b&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");$&&(F=$.buffer),U=F.byteLength,V(F);var G,H=[],q=[],j=[];function K(){return _}function X(){!x&&he(q)}var Q,J=0,Y=null,Z=null;function ee(e){x?postMessage({cmd:"onAbort",arg:e}):u.onAbort&&u.onAbort(e),E(e="Aborted("+e+")"),P=!0,R=1,e+=". Build with -sASSERTIONS for more info.";var t=new WebAssembly.RuntimeError(e);throw o(t),t}function te(e){return e.startsWith("data:application/octet-stream;base64,")}function ne(e){return e.startsWith("file://")}function ae(e){try{if(e==Q&&T)return new Uint8Array(T);if(d)return d(e);throw"both async and sync fetching of the wasm failed"}catch(e){ee(e)}}te(Q="tfjs-backend-wasm-threaded-simd.wasm")||(Q=w(Q));var re={};function se(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function ie(e){var t=pe.pthreads[e];(function(e,t){e||ee(void 0)})(t),pe.returnWorkerToPool(t)}function oe(e){var t=pe.getNewWorker();if(!t)return 6;pe.runningWorkers.push(t),pe.pthreads[e.pthread_ptr]=t,t.pthread_ptr=e.pthread_ptr;var n={cmd:"run",start_routine:e.startRoutine,arg:e.arg,pthread_ptr:e.pthread_ptr};return t.runPthread=()=>{n.time=performance.now(),t.postMessage(n,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread),0}function le(e){if(x)return ve(1,1,e);R=e,K()||(pe.terminateAllThreads(),u.onExit&&u.onExit(e),P=!0),m(e,new se(e))}var ue=function(e,t){if(R=e,!t&&x)throw ce(e),"unwind";le(e)},pe={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){x?pe.initWorker():pe.initMainThread()},initMainThread:function(){for(var e=8;e--;)pe.allocateUnusedWorker()},initWorker:function(){_=!1},setExitStatus:function(e){R=e},terminateAllThreads:function(){for(var e of Object.values(pe.pthreads))pe.returnWorkerToPool(e);for(var e of pe.unusedWorkers)e.terminate();pe.unusedWorkers=[]},returnWorkerToPool:function(e){var t=e.pthread_ptr;delete pe.pthreads[t],pe.unusedWorkers.push(e),pe.runningWorkers.splice(pe.runningWorkers.indexOf(e),1),e.pthread_ptr=0,Pe(t)},receiveObjectTransfer:function(e){},threadInitTLS:function(){pe.tlsInitFunctions.forEach((e=>e()))},loadWasmModuleToWorker:function(e,t){e.onmessage=n=>{var a=n.data,r=a.cmd;if(e.pthread_ptr&&(pe.currentProxiedOperationCallerThread=e.pthread_ptr),a.targetThread&&a.targetThread!=Me()){var s=pe.pthreads[a.targetThread];return s?s.postMessage(a,a.transferList):E('Internal error! Worker sent a message "'+r+'" to target pthread '+a.targetThread+", but that thread no longer exists!"),void(pe.currentProxiedOperationCallerThread=void 0)}"processProxyingQueue"===r?be(a.queue):"spawnThread"===r?oe(a):"cleanupThread"===r?ie(a.thread):"killThread"===r?function(e){var t=pe.pthreads[e];delete pe.pthreads[e],t.terminate(),Pe(e),pe.runningWorkers.splice(pe.runningWorkers.indexOf(t),1),t.pthread_ptr=0}(a.thread):"cancelThread"===r?function(e){pe.pthreads[e].postMessage({cmd:"cancel"})}(a.thread):"loaded"===r?(e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread)):"print"===r?C("Thread "+a.threadId+": "+a.text):"printErr"===r?E("Thread "+a.threadId+": "+a.text):"alert"===r?alert("Thread "+a.threadId+": "+a.text):"setimmediate"===a.target?e.postMessage(a):"onAbort"===r?u.onAbort&&u.onAbort(a.arg):r&&E("worker sent an unknown command "+r),pe.currentProxiedOperationCallerThread=void 0},e.onerror=e=>{throw E("worker sent an error! "+e.filename+":"+e.lineno+": "+e.message),e},b&&(e.on("message",(function(t){e.onmessage({data:t})})),e.on("error",(function(t){e.onerror(t)})),e.on("detachedExit",(function(){}))),e.postMessage({cmd:"load",urlOrBlob:u.mainScriptUrlOrBlob||n,wasmMemory:$,wasmModule:A})},allocateUnusedWorker:function(){var e=w("tfjs-backend-wasm-threaded-simd.worker.js");pe.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==pe.unusedWorkers.length&&(pe.allocateUnusedWorker(),pe.loadWasmModuleToWorker(pe.unusedWorkers[0])),pe.unusedWorkers.pop()}};function he(e){for(;e.length>0;)e.shift()(u)}function de(e){var t=Ve(),n=e();return Ue(t),n}function ce(e){if(x)return ve(2,0,e);try{ue(e)}catch(e){!function(e){if(e instanceof se||"unwind"==e)return R;m(1,e)}(e)}}u.PThread=pe,u.establishStackSpace=function(){var e=Me(),t=a()[e+44>>2],n=a()[e+48>>2];We(t,t-n),Ue(t)};var fe,me=[];function ge(e,t,n,a){return x?ve(3,1,e,t,n,a):ye(e,t,n,a)}function ye(e,t,n,a){if("undefined"==typeof SharedArrayBuffer)return E("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var r=[];if(x&&0===r.length)return ge(e,t,n,a);var s={startRoutine:n,pthread_ptr:e,arg:a,transferList:r};return x?(s.cmd="spawnThread",postMessage(s,r),0):oe(s)}function be(e){Atomics.store(a(),e>>2,1),Me()&&Le(e),Atomics.compareExchange(a(),e>>2,1,0)}function xe(e){xe.shown||(xe.shown={}),xe.shown[e]||(xe.shown[e]=1,b&&(e="warning: "+e),E(e))}function ve(e,t){var n=arguments.length-2,a=arguments;return de((()=>{for(var r=n,i=Ge(8*r),o=i>>3,l=0;l<n;l++){var u=a[2+l];s()[o+l]=u}return ze(e,r,i,t)}))}u.invokeEntryPoint=function(e,t){var n=function(e){var t=me[e];return t||(e>=me.length&&(me.length=e+1),me[e]=t=G.get(e)),t}(e)(t);K()?pe.setExitStatus(n):Be(n)},u.executeNotifiedProxyingQueue=be,fe=b?()=>{var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:x?()=>performance.now()-u.__performance_now_clock_drift:()=>performance.now();var we=[];function ke(e){try{return $.grow(e-F.byteLength+65535>>>16),V($.buffer),1}catch(e){}}function Ie(e){return x?ve(4,1,e):52}function Se(e,t,n,a,r){return x?ve(5,1,e,t,n,a,r):70}var Ne=[null,[],[]];function Te(e,t){var n=Ne[e];0===t||10===t?((1===e?C:E)(W(n,0)),n.length=0):n.push(t)}function Ce(e,n,a,s){if(x)return ve(6,1,e,n,a,s);for(var i=0,o=0;o<a;o++){var l=r()[n>>2],u=r()[n+4>>2];n+=8;for(var p=0;p<u;p++)Te(e,t()[l+p]);i+=u}return r()[s>>2]=i,0}function Ee(e){return u["_"+e]}function _e(e,n,a,r,s){var i={string:e=>{var n=0;if(null!=e&&0!==e){var a=1+(e.length<<2);!function(e,n,a){!function(e,t,n,a){if(!(a>0))return 0;for(var r=n+a-1,s=0;s<e.length;++s){var i=e.charCodeAt(s);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),i<=127){if(n>=r)break;t[n++]=i}else if(i<=2047){if(n+1>=r)break;t[n++]=192|i>>6,t[n++]=128|63&i}else if(i<=65535){if(n+2>=r)break;t[n++]=224|i>>12,t[n++]=128|i>>6&63,t[n++]=128|63&i}else{if(n+3>=r)break;t[n++]=240|i>>18,t[n++]=128|i>>12&63,t[n++]=128|i>>6&63,t[n++]=128|63&i}}t[n]=0}(e,t(),n,a)}(e,n=Ge(a),a)}return n},array:e=>{var t=Ge(e.length);return function(e,t){($.buffer!=F&&V($.buffer),D).set(e,t)}(e,t),t}},o=Ee(e),l=[],u=0;if(r)for(var p=0;p<r.length;p++){var h=i[a[p]];h?(0===u&&(u=Ve()),l[p]=h(r[p])):l[p]=r[p]}var d,c=o.apply(null,l);return d=c,0!==u&&Ue(u),c=function(e){return"string"===n?function(e,n){return e?W(t(),e,n):""}(e):"boolean"===n?Boolean(e):e}(d),c}pe.init();var $e,Ae,Re,Fe=[null,le,ce,ge,Ie,Se,Ce],De={__emscripten_init_main_thread_js:function(e){Oe(e,!y,1,!g),pe.threadInitTLS()},__emscripten_thread_cleanup:function(e){x?postMessage({cmd:"cleanupThread",thread:e}):ie(e)},__pthread_create_js:ye,_emscripten_default_pthread_stack_size:function(){return 2097152},_emscripten_get_now_is_monotonic:function(){return!0},_emscripten_notify_task_queue:function(e,t,n,a){if(e==t)setTimeout((()=>be(a)));else if(x)postMessage({targetThread:e,cmd:"processProxyingQueue",queue:a});else{var r=pe.pthreads[e];if(!r)return;r.postMessage({cmd:"processProxyingQueue",queue:a})}return 1},_emscripten_set_offscreencanvas_size:function(e,t,n){return-1},abort:function(){ee("")},emscripten_check_blocking_allowed:function(){b||y||xe("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")},emscripten_date_now:function(){return Date.now()},emscripten_get_heap_max:function(){return 2147483648},emscripten_get_now:fe,emscripten_memcpy_big:function(e,n,a){t().copyWithin(e,n,n+a)},emscripten_num_logical_cores:function(){return b?KW().cpus().length:navigator.hardwareConcurrency},emscripten_receive_on_main_thread_js:function(e,t,n){we.length=t;for(var a=n>>3,r=0;r<t;r++)we[r]=s()[a+r];return(e<0?re[-e-1]:Fe[e]).apply(null,we)},emscripten_resize_heap:function(e){var n=t().length;if((e>>>=0)<=n)return!1;var a,r=2147483648;if(e>r)return!1;for(var s=1;s<=4;s*=2){var i=n*(1+.2/s);if(i=Math.min(i,e+100663296),ke(Math.min(r,(a=Math.max(e,i))+(65536-a%65536)%65536)))return!0}return!1},emscripten_unwind_to_js_event_loop:function(){throw"unwind"},exit:ue,fd_close:Ie,fd_seek:Se,fd_write:Ce,memory:$||u.wasmMemory},Me=(function(){var e={env:De,wasi_snapshot_preview1:De};function t(e,t){var n=e.exports;if(u.asm=n,function(e){pe.tlsInitFunctions.push(e)}(u.asm._emscripten_tls_init),G=u.asm.__indirect_function_table,function(e){q.unshift(e)}(u.asm.__wasm_call_ctors),A=t,!x){var a=pe.unusedWorkers.length;pe.unusedWorkers.forEach((function(e){pe.loadWasmModuleToWorker(e,(function(){--a||function(e){if(J--,u.monitorRunDependencies&&u.monitorRunDependencies(J),0==J&&(null!==Y&&(clearInterval(Y),Y=null),Z)){var t=Z;Z=null,t()}}()}))}))}}function n(e){t(e.instance,e.module)}function a(t){return function(){if(!T&&(g||y)){if("function"==typeof fetch&&!ne(Q))return fetch(Q,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+Q+"'";return e.arrayBuffer()})).catch((function(){return ae(Q)}));if(h)return new Promise((function(e,t){h(Q,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return ae(Q)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){E("failed to asynchronously prepare wasm: "+e),ee(e)}))}if(x||(J++,u.monitorRunDependencies&&u.monitorRunDependencies(J)),u.instantiateWasm)try{return u.instantiateWasm(e,t)}catch(e){E("Module.instantiateWasm callback failed with error: "+e),o(e)}(T||"function"!=typeof WebAssembly.instantiateStreaming||te(Q)||ne(Q)||b||"function"!=typeof fetch?a(n):fetch(Q,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return E("wasm streaming compile failed: "+e),E("falling back to ArrayBuffer instantiation"),a(n)}))}))).catch(o)}(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.__wasm_call_ctors).apply(null,arguments)},u._init=function(){return(u._init=u.asm.init).apply(null,arguments)},u._init_with_threads_count=function(){return(u._init_with_threads_count=u.asm.init_with_threads_count).apply(null,arguments)},u._get_threads_count=function(){return(u._get_threads_count=u.asm.get_threads_count).apply(null,arguments)},u._register_tensor=function(){return(u._register_tensor=u.asm.register_tensor).apply(null,arguments)},u._dispose_data=function(){return(u._dispose_data=u.asm.dispose_data).apply(null,arguments)},u._dispose=function(){return(u._dispose=u.asm.dispose).apply(null,arguments)},u._Abs=function(){return(u._Abs=u.asm.Abs).apply(null,arguments)},u._Add=function(){return(u._Add=u.asm.Add).apply(null,arguments)},u._AddN=function(){return(u._AddN=u.asm.AddN).apply(null,arguments)},u._All=function(){return(u._All=u.asm.All).apply(null,arguments)},u._Any=function(){return(u._Any=u.asm.Any).apply(null,arguments)},u._ArgMax=function(){return(u._ArgMax=u.asm.ArgMax).apply(null,arguments)},u._AvgPool=function(){return(u._AvgPool=u.asm.AvgPool).apply(null,arguments)},u._BatchMatMul=function(){return(u._BatchMatMul=u.asm.BatchMatMul).apply(null,arguments)},u._Ceil=function(){return(u._Ceil=u.asm.Ceil).apply(null,arguments)},u._ClipByValue=function(){return(u._ClipByValue=u.asm.ClipByValue).apply(null,arguments)},u._Conv2D=function(){return(u._Conv2D=u.asm.Conv2D).apply(null,arguments)},u._Conv2DBackpropInput=function(){return(u._Conv2DBackpropInput=u.asm.Conv2DBackpropInput).apply(null,arguments)},u._Cos=function(){return(u._Cos=u.asm.Cos).apply(null,arguments)},u._Cosh=function(){return(u._Cosh=u.asm.Cosh).apply(null,arguments)},u._CropAndResize=function(){return(u._CropAndResize=u.asm.CropAndResize).apply(null,arguments)},u._Cumprod=function(){return(u._Cumprod=u.asm.Cumprod).apply(null,arguments)},u._Cumsum=function(){return(u._Cumsum=u.asm.Cumsum).apply(null,arguments)},u._DepthToSpace=function(){return(u._DepthToSpace=u.asm.DepthToSpace).apply(null,arguments)},u._DepthwiseConv2dNative=function(){return(u._DepthwiseConv2dNative=u.asm.DepthwiseConv2dNative).apply(null,arguments)},u._Elu=function(){return(u._Elu=u.asm.Elu).apply(null,arguments)},u._Equal=function(){return(u._Equal=u.asm.Equal).apply(null,arguments)},u._Exp=function(){return(u._Exp=u.asm.Exp).apply(null,arguments)},u._FlipLeftRight=function(){return(u._FlipLeftRight=u.asm.FlipLeftRight).apply(null,arguments)},u._Floor=function(){return(u._Floor=u.asm.Floor).apply(null,arguments)},u._FloorDiv=function(){return(u._FloorDiv=u.asm.FloorDiv).apply(null,arguments)},u._FusedBatchNorm=function(){return(u._FusedBatchNorm=u.asm.FusedBatchNorm).apply(null,arguments)},u._FusedConv2D=function(){return(u._FusedConv2D=u.asm.FusedConv2D).apply(null,arguments)},u._FusedDepthwiseConv2D=function(){return(u._FusedDepthwiseConv2D=u.asm.FusedDepthwiseConv2D).apply(null,arguments)},u._Gather=function(){return(u._Gather=u.asm.Gather).apply(null,arguments)},u._GatherNd=function(){return(u._GatherNd=u.asm.GatherNd).apply(null,arguments)},u._Greater=function(){return(u._Greater=u.asm.Greater).apply(null,arguments)},u._GreaterEqual=function(){return(u._GreaterEqual=u.asm.GreaterEqual).apply(null,arguments)},u._IsNan=function(){return(u._IsNan=u.asm.IsNan).apply(null,arguments)},u._LeakyRelu=function(){return(u._LeakyRelu=u.asm.LeakyRelu).apply(null,arguments)},u._Less=function(){return(u._Less=u.asm.Less).apply(null,arguments)},u._LessEqual=function(){return(u._LessEqual=u.asm.LessEqual).apply(null,arguments)},u._Log=function(){return(u._Log=u.asm.Log).apply(null,arguments)},u._LogicalAnd=function(){return(u._LogicalAnd=u.asm.LogicalAnd).apply(null,arguments)},u._LogicalNot=function(){return(u._LogicalNot=u.asm.LogicalNot).apply(null,arguments)},u._LogicalOr=function(){return(u._LogicalOr=u.asm.LogicalOr).apply(null,arguments)},u._LogicalXor=function(){return(u._LogicalXor=u.asm.LogicalXor).apply(null,arguments)},u._Max=function(){return(u._Max=u.asm.Max).apply(null,arguments)},u._MaxPool=function(){return(u._MaxPool=u.asm.MaxPool).apply(null,arguments)},u._Maximum=function(){return(u._Maximum=u.asm.Maximum).apply(null,arguments)},u._Mean=function(){return(u._Mean=u.asm.Mean).apply(null,arguments)},u._Min=function(){return(u._Min=u.asm.Min).apply(null,arguments)},u._Minimum=function(){return(u._Minimum=u.asm.Minimum).apply(null,arguments)},u._MirrorPad=function(){return(u._MirrorPad=u.asm.MirrorPad).apply(null,arguments)},u._Multiply=function(){return(u._Multiply=u.asm.Multiply).apply(null,arguments)},u._Neg=function(){return(u._Neg=u.asm.Neg).apply(null,arguments)},u._NonMaxSuppressionV3=function(){return(u._NonMaxSuppressionV3=u.asm.NonMaxSuppressionV3).apply(null,arguments)},u._NonMaxSuppressionV4=function(){return(u._NonMaxSuppressionV4=u.asm.NonMaxSuppressionV4).apply(null,arguments)},u._NonMaxSuppressionV5=function(){return(u._NonMaxSuppressionV5=u.asm.NonMaxSuppressionV5).apply(null,arguments)},u._NotEqual=function(){return(u._NotEqual=u.asm.NotEqual).apply(null,arguments)},u._OneHot=function(){return(u._OneHot=u.asm.OneHot).apply(null,arguments)},u._PadV2=function(){return(u._PadV2=u.asm.PadV2).apply(null,arguments)},u._Pow=function(){return(u._Pow=u.asm.Pow).apply(null,arguments)},u._Prelu=function(){return(u._Prelu=u.asm.Prelu).apply(null,arguments)},u._Prod=function(){return(u._Prod=u.asm.Prod).apply(null,arguments)},u._RealDiv=function(){return(u._RealDiv=u.asm.RealDiv).apply(null,arguments)},u._Reciprocal=function(){return(u._Reciprocal=u.asm.Reciprocal).apply(null,arguments)},u._Relu=function(){return(u._Relu=u.asm.Relu).apply(null,arguments)},u._Relu6=function(){return(u._Relu6=u.asm.Relu6).apply(null,arguments)},u._ResizeBilinear=function(){return(u._ResizeBilinear=u.asm.ResizeBilinear).apply(null,arguments)},u._ResizeNearestNeighbor=function(){return(u._ResizeNearestNeighbor=u.asm.ResizeNearestNeighbor).apply(null,arguments)},u._Reverse=function(){return(u._Reverse=u.asm.Reverse).apply(null,arguments)},u._RotateWithOffset=function(){return(u._RotateWithOffset=u.asm.RotateWithOffset).apply(null,arguments)},u._Round=function(){return(u._Round=u.asm.Round).apply(null,arguments)},u._Rsqrt=function(){return(u._Rsqrt=u.asm.Rsqrt).apply(null,arguments)},u._ScatterNd=function(){return(u._ScatterNd=u.asm.ScatterNd).apply(null,arguments)},u._SelectV2=function(){return(u._SelectV2=u.asm.SelectV2).apply(null,arguments)},u._Sigmoid=function(){return(u._Sigmoid=u.asm.Sigmoid).apply(null,arguments)},u._Sin=function(){return(u._Sin=u.asm.Sin).apply(null,arguments)},u._Softmax=function(){return(u._Softmax=u.asm.Softmax).apply(null,arguments)},u._SparseFillEmptyRows=function(){return(u._SparseFillEmptyRows=u.asm.SparseFillEmptyRows).apply(null,arguments)},u._SparseReshape=function(){return(u._SparseReshape=u.asm.SparseReshape).apply(null,arguments)},u._SparseSegmentReduction=function(){return(u._SparseSegmentReduction=u.asm.SparseSegmentReduction).apply(null,arguments)},u._Sqrt=function(){return(u._Sqrt=u.asm.Sqrt).apply(null,arguments)},u._Square=function(){return(u._Square=u.asm.Square).apply(null,arguments)},u._SquaredDifference=function(){return(u._SquaredDifference=u.asm.SquaredDifference).apply(null,arguments)},u._Step=function(){return(u._Step=u.asm.Step).apply(null,arguments)},u._StridedSlice=function(){return(u._StridedSlice=u.asm.StridedSlice).apply(null,arguments)},u._Sub=function(){return(u._Sub=u.asm.Sub).apply(null,arguments)},u._Sum=function(){return(u._Sum=u.asm.Sum).apply(null,arguments)},u._Tan=function(){return(u._Tan=u.asm.Tan).apply(null,arguments)},u._Tanh=function(){return(u._Tanh=u.asm.Tanh).apply(null,arguments)},u._Tile=function(){return(u._Tile=u.asm.Tile).apply(null,arguments)},u._TopK=function(){return(u._TopK=u.asm.TopK).apply(null,arguments)},u._Transform=function(){return(u._Transform=u.asm.Transform).apply(null,arguments)},u._Transpose=function(){return(u._Transpose=u.asm.Transpose).apply(null,arguments)},u.__FusedMatMul=function(){return(u.__FusedMatMul=u.asm._FusedMatMul).apply(null,arguments)},u._malloc=function(){return(u._malloc=u.asm.malloc).apply(null,arguments)},u._free=function(){return(u._free=u.asm.free).apply(null,arguments)},u.__emscripten_tls_init=function(){return(u.__emscripten_tls_init=u.asm._emscripten_tls_init).apply(null,arguments)},u._pthread_self=function(){return(Me=u._pthread_self=u.asm.pthread_self).apply(null,arguments)}),Oe=(u.___errno_location=function(){return(u.___errno_location=u.asm.__errno_location).apply(null,arguments)},u.__emscripten_thread_init=function(){return(Oe=u.__emscripten_thread_init=u.asm._emscripten_thread_init).apply(null,arguments)}),ze=(u.__emscripten_thread_crashed=function(){return(u.__emscripten_thread_crashed=u.asm._emscripten_thread_crashed).apply(null,arguments)},u._emscripten_main_thread_process_queued_calls=function(){return(u._emscripten_main_thread_process_queued_calls=u.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},u._emscripten_main_browser_thread_id=function(){return(u._emscripten_main_browser_thread_id=u.asm.emscripten_main_browser_thread_id).apply(null,arguments)},u._emscripten_run_in_main_runtime_thread_js=function(){return(ze=u._emscripten_run_in_main_runtime_thread_js=u.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)}),Le=(u._emscripten_dispatch_to_thread_=function(){return(u._emscripten_dispatch_to_thread_=u.asm.emscripten_dispatch_to_thread_).apply(null,arguments)},u.__emscripten_proxy_execute_task_queue=function(){return(Le=u.__emscripten_proxy_execute_task_queue=u.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)}),Pe=u.__emscripten_thread_free_data=function(){return(Pe=u.__emscripten_thread_free_data=u.asm._emscripten_thread_free_data).apply(null,arguments)},Be=u.__emscripten_thread_exit=function(){return(Be=u.__emscripten_thread_exit=u.asm._emscripten_thread_exit).apply(null,arguments)},We=u._emscripten_stack_set_limits=function(){return(We=u._emscripten_stack_set_limits=u.asm.emscripten_stack_set_limits).apply(null,arguments)},Ve=u.stackSave=function(){return(Ve=u.stackSave=u.asm.stackSave).apply(null,arguments)},Ue=u.stackRestore=function(){return(Ue=u.stackRestore=u.asm.stackRestore).apply(null,arguments)},Ge=u.stackAlloc=function(){return(Ge=u.stackAlloc=u.asm.stackAlloc).apply(null,arguments)};function He(e){if(e=e||f,!(J>0)){if(x)return i(u),X(),void postMessage({cmd:"loaded"});(function(){if(u.preRun)for("function"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)e=u.preRun.shift(),H.unshift(e);var e;he(H)})(),J>0||(u.setStatus?(u.setStatus("Running..."),setTimeout((function(){setTimeout((function(){u.setStatus("")}),1),t()}),1)):t())}function t(){$e||($e=!0,u.calledRun=!0,!P&&(X(),i(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),function(){if(!x){if(u.postRun)for("function"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;)e=u.postRun.shift(),j.unshift(e);he(j)}var e}()))}}if(u.dynCall_iijjiiii=function(){return(u.dynCall_iijjiiii=u.asm.dynCall_iijjiiii).apply(null,arguments)},u.dynCall_jiji=function(){return(u.dynCall_jiji=u.asm.dynCall_jiji).apply(null,arguments)},u.keepRuntimeAlive=K,u.wasmMemory=$,u.cwrap=function(e,t,n,a){var r=(n=n||[]).every((e=>"number"===e||"boolean"===e));return"string"!==t&&r&&!a?Ee(e):function(){return _e(e,t,n,arguments)}},u.ExitStatus=se,u.PThread=pe,Z=function e(){$e||He(),$e||(Z=e)},u.preInit)for("function"==typeof u.preInit&&(u.preInit=[u.preInit]);u.preInit.length>0;)u.preInit.pop()();if(He(),l&&(Ae={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!l.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!l.unhandledRejection.indexOf(e)>-1}))}),"undefined"!=typeof WasmBackendModule)Re=WasmBackendModule;else{if(void 0===e)throw new Error("Could not find wasm module in post.js");Re=e}if(Ae){var qe=Re._dispose;Re._dispose=function(){qe(),Ae.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),Ae.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});"object"==typeof e&&"object"==typeof t?t.exports=a:"function"==typeof define&&define.amd?define([],(function(){return a})):"object"==typeof e&&(e.WasmBackendModuleThreadedSimd=a)})),YW=yr(((e,t)=>{t.exports.wasmWorkerContents='"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8"))},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"\n");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};'})),ZW=yr(((e,t)=>{var n,a=(n="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,"undefined"!=typeof __filename&&(n=n||__filename),function(e){var t,a,r,s=void 0!==(e=e||{})?e:{};s.ready=new Promise((function(e,n){t=e,a=n})),"undefined"!=typeof process&&process.listeners&&(r={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var i,o,l,u,p,h=Object.assign({},s),d=[],c="object"==typeof window,f="function"==typeof importScripts,m="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,g="";m?(g=f?ag().dirname(g)+"/":__dirname+"/","function"==typeof Lg&&(u=Jb(),p=ag()),i=(e,t)=>(e=p.normalize(e),u.readFileSync(e,t?void 0:"utf8")),l=e=>{var t=i(e,!0);return t.buffer||(t=new Uint8Array(t)),t},o=(e,t,n)=>{e=p.normalize(e),u.readFile(e,(function(e,a){e?n(e):t(a.buffer)}))},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),d=process.argv.slice(2),process.on("uncaughtException",(function(e){if(!(e instanceof W))throw e})),process.on("unhandledRejection",(function(e){throw e})),s.inspect=function(){return"[Emscripten Module object]"}):(c||f)&&(f?g=self.location.href:"undefined"!=typeof document&&document.currentScript&&(g=document.currentScript.src),n&&(g=n),g=0!==g.indexOf("blob:")?g.substr(0,g.replace(/[?#].*/,"").lastIndexOf("/")+1):"",i=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},f&&(l=e=>{var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),o=(e,t,n)=>{var a=new XMLHttpRequest;a.open("GET",e,!0),a.responseType="arraybuffer",a.onload=()=>{200==a.status||0==a.status&&a.response?t(a.response):n()},a.onerror=n,a.send(null)});var y,b=s.print||console.log.bind(console),x=s.printErr||console.warn.bind(console);Object.assign(s,h),h=null,s.arguments&&(d=s.arguments),s.thisProgram&&s.thisProgram,s.quit&&s.quit,s.wasmBinary&&(y=s.wasmBinary),s.noExitRuntime,"object"!=typeof WebAssembly&&z("no native wasm support detected");var v,w,k,I,S,N=!1,T="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function C(e,t,n){for(var a=t+n,r=t;e[r]&&!(r>=a);)++r;if(r-t>16&&e.buffer&&T)return T.decode(e.subarray(t,r));for(var s="";t<r;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var l=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|l:(7&i)<<18|o<<12|l<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var u=i-65536;s+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function E(e){w=e,s.HEAP8=k=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=new Int32Array(e),s.HEAPU8=I=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=S=new Uint32Array(e),s.HEAPF32=new Float32Array(e),s.HEAPF64=new Float64Array(e)}s.INITIAL_MEMORY;var _,$,A=[],R=[],F=[],D=0,M=null,O=null;function z(e){s.onAbort&&s.onAbort(e),x(e="Aborted("+e+")"),N=!0,e+=". Build with -sASSERTIONS for more info.";var t=new WebAssembly.RuntimeError(e);throw a(t),t}function L(e){return e.startsWith("data:application/octet-stream;base64,")}function P(e){return e.startsWith("file://")}function B(e){try{if(e==_&&y)return new Uint8Array(y);if(l)return l(e);throw"both async and sync fetching of the wasm failed"}catch(e){z(e)}}function W(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function V(e){for(;e.length>0;)e.shift()(s)}function U(e){try{return v.grow(e-w.byteLength+65535>>>16),E(v.buffer),1}catch(e){}}L(_="tfjs-backend-wasm.wasm")||($=_,_=s.locateFile?s.locateFile($,g):g+$);var G=[null,[],[]];function H(e,t){var n=G[e];0===t||10===t?((1===e?b:x)(C(n,0)),n.length=0):n.push(t)}function q(e){return s["_"+e]}function j(e,t,n,a,r){var s={string:e=>{var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);!function(e,t,n){!function(e,t,n,a){if(!(a>0))return 0;for(var r=n+a-1,s=0;s<e.length;++s){var i=e.charCodeAt(s);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),i<=127){if(n>=r)break;t[n++]=i}else if(i<=2047){if(n+1>=r)break;t[n++]=192|i>>6,t[n++]=128|63&i}else if(i<=65535){if(n+2>=r)break;t[n++]=224|i>>12,t[n++]=128|i>>6&63,t[n++]=128|63&i}else{if(n+3>=r)break;t[n++]=240|i>>18,t[n++]=128|i>>12&63,t[n++]=128|i>>6&63,t[n++]=128|63&i}}t[n]=0}(e,I,t,n)}(e,t=ee(n),n)}return t},array:e=>{var t=ee(e.length);return function(e,t){k.set(e,t)}(e,t),t}},i=q(e),o=[],l=0;if(a)for(var u=0;u<a.length;u++){var p=s[n[u]];p?(0===l&&(l=Y()),o[u]=p(a[u])):o[u]=a[u]}var h,d=i.apply(null,o);return h=d,0!==l&&Z(l),d=function(e){return"string"===t?function(e,t){return e?C(I,e,t):""}(e):"boolean"===t?Boolean(e):e}(h),d}var K,X,Q,J={abort:function(){z("")},emscripten_get_heap_max:function(){return 2147483648},emscripten_memcpy_big:function(e,t,n){I.copyWithin(e,t,t+n)},emscripten_resize_heap:function(e){var t,n=I.length,a=2147483648;if((e>>>=0)>a)return!1;for(var r=1;r<=4;r*=2){var s=n*(1+.2/r);if(s=Math.min(s,e+100663296),U(Math.min(a,(t=Math.max(e,s))+(65536-t%65536)%65536)))return!0}return!1},fd_close:function(e){return 52},fd_seek:function(e,t,n,a,r){return 70},fd_write:function(e,t,n,a){for(var r=0,s=0;s<n;s++){var i=S[t>>2],o=S[t+4>>2];t+=8;for(var l=0;l<o;l++)H(e,I[i+l]);r+=o}return S[a>>2]=r,0}},Y=(function(){var e={env:J,wasi_snapshot_preview1:J};function t(e,t){var n=e.exports;s.asm=n,E((v=s.asm.memory).buffer),s.asm.__indirect_function_table,function(e){R.unshift(e)}(s.asm.__wasm_call_ctors),function(e){if(D--,s.monitorRunDependencies&&s.monitorRunDependencies(D),0==D&&(null!==M&&(clearInterval(M),M=null),O)){var t=O;O=null,t()}}()}function n(e){t(e.instance)}function r(t){return function(){if(!y&&(c||f)){if("function"==typeof fetch&&!P(_))return fetch(_,{credentials:"same-origin"}).then((function(e){if(!e.ok)throw"failed to load wasm binary file at '"+_+"'";return e.arrayBuffer()})).catch((function(){return B(_)}));if(o)return new Promise((function(e,t){o(_,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return B(_)}))}().then((function(t){return WebAssembly.instantiate(t,e)})).then((function(e){return e})).then(t,(function(e){x("failed to asynchronously prepare wasm: "+e),z(e)}))}if(D++,s.monitorRunDependencies&&s.monitorRunDependencies(D),s.instantiateWasm)try{return s.instantiateWasm(e,t)}catch(e){x("Module.instantiateWasm callback failed with error: "+e),a(e)}(y||"function"!=typeof WebAssembly.instantiateStreaming||L(_)||P(_)||m||"function"!=typeof fetch?r(n):fetch(_,{credentials:"same-origin"}).then((function(t){return WebAssembly.instantiateStreaming(t,e).then(n,(function(e){return x("wasm streaming compile failed: "+e),x("falling back to ArrayBuffer instantiation"),r(n)}))}))).catch(a)}(),s.___wasm_call_ctors=function(){return(s.___wasm_call_ctors=s.asm.__wasm_call_ctors).apply(null,arguments)},s._init=function(){return(s._init=s.asm.init).apply(null,arguments)},s._init_with_threads_count=function(){return(s._init_with_threads_count=s.asm.init_with_threads_count).apply(null,arguments)},s._get_threads_count=function(){return(s._get_threads_count=s.asm.get_threads_count).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.register_tensor).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.dispose_data).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.dispose).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.Abs).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.Add).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.AddN).apply(null,arguments)},s._All=function(){return(s._All=s.asm.All).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.Any).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.ArgMax).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.AvgPool).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.BatchMatMul).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.Ceil).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.ClipByValue).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.Conv2D).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.Conv2DBackpropInput).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.Cos).apply(null,arguments)},s._Cosh=function(){return(s._Cosh=s.asm.Cosh).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.CropAndResize).apply(null,arguments)},s._Cumprod=function(){return(s._Cumprod=s.asm.Cumprod).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.Cumsum).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.DepthToSpace).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.DepthwiseConv2dNative).apply(null,arguments)},s._Elu=function(){return(s._Elu=s.asm.Elu).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.Equal).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.Exp).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.FlipLeftRight).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.Floor).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.FloorDiv).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.FusedBatchNorm).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.FusedConv2D).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.FusedDepthwiseConv2D).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.Gather).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.GatherNd).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.Greater).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.GreaterEqual).apply(null,arguments)},s._IsNan=function(){return(s._IsNan=s.asm.IsNan).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.LeakyRelu).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.Less).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.LessEqual).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm.Log).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.LogicalAnd).apply(null,arguments)},s._LogicalNot=function(){return(s._LogicalNot=s.asm.LogicalNot).apply(null,arguments)},s._LogicalOr=function(){return(s._LogicalOr=s.asm.LogicalOr).apply(null,arguments)},s._LogicalXor=function(){return(s._LogicalXor=s.asm.LogicalXor).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.Max).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.MaxPool).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.Maximum).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.Mean).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.Min).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.Minimum).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.MirrorPad).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.Multiply).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.Neg).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.NonMaxSuppressionV3).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.NonMaxSuppressionV4).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.NonMaxSuppressionV5).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.NotEqual).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.OneHot).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.PadV2).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.Pow).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.Prelu).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.Prod).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.RealDiv).apply(null,arguments)},s._Reciprocal=function(){return(s._Reciprocal=s.asm.Reciprocal).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.Relu).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.Relu6).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.ResizeBilinear).apply(null,arguments)},s._ResizeNearestNeighbor=function(){return(s._ResizeNearestNeighbor=s.asm.ResizeNearestNeighbor).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.Reverse).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.RotateWithOffset).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.Round).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.Rsqrt).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.ScatterNd).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.SelectV2).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.Sigmoid).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.Sin).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Softmax).apply(null,arguments)},s._SparseFillEmptyRows=function(){return(s._SparseFillEmptyRows=s.asm.SparseFillEmptyRows).apply(null,arguments)},s._SparseReshape=function(){return(s._SparseReshape=s.asm.SparseReshape).apply(null,arguments)},s._SparseSegmentReduction=function(){return(s._SparseSegmentReduction=s.asm.SparseSegmentReduction).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Sqrt).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Square).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.SquaredDifference).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.Step).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.StridedSlice).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Sub).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.Sum).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Tan).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Tanh).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Tile).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.TopK).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.Transform).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Transpose).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm._FusedMatMul).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.malloc).apply(null,arguments)},s._free=function(){return(s._free=s.asm.free).apply(null,arguments)},s.___errno_location=function(){return(s.___errno_location=s.asm.__errno_location).apply(null,arguments)},s.stackSave=function(){return(Y=s.stackSave=s.asm.stackSave).apply(null,arguments)}),Z=s.stackRestore=function(){return(Z=s.stackRestore=s.asm.stackRestore).apply(null,arguments)},ee=s.stackAlloc=function(){return(ee=s.stackAlloc=s.asm.stackAlloc).apply(null,arguments)};function te(e){function n(){K||(K=!0,s.calledRun=!0,!N&&(V(R),t(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),function(){if(s.postRun)for("function"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;)e=s.postRun.shift(),F.unshift(e);var e;V(F)}()))}e=e||d,D>0||(function(){if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)e=s.preRun.shift(),A.unshift(e);var e;V(A)}(),D>0)||(s.setStatus?(s.setStatus("Running..."),setTimeout((function(){setTimeout((function(){s.setStatus("")}),1),n()}),1)):n())}if(s.dynCall_iijjiiii=function(){return(s.dynCall_iijjiiii=s.asm.dynCall_iijjiiii).apply(null,arguments)},s.dynCall_jiji=function(){return(s.dynCall_jiji=s.asm.dynCall_jiji).apply(null,arguments)},s.cwrap=function(e,t,n,a){var r=(n=n||[]).every((e=>"number"===e||"boolean"===e));return"string"!==t&&r&&!a?q(e):function(){return j(e,t,n,arguments)}},O=function e(){K||te(),K||(O=e)},s.preInit)for("function"==typeof s.preInit&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();if(te(),r&&(X={uncaughtException:process.listeners("uncaughtException").filter((function(e){return!r.uncaughtException.indexOf(e)>-1})),unhandledRejection:process.listeners("unhandledRejection").filter((function(e){return!r.unhandledRejection.indexOf(e)>-1}))}),void 0!==e)Q=e;else{if("undefined"==typeof WasmBackendModuleThreadedSimd)throw new Error("Could not find wasm module in post.js");Q=WasmBackendModuleThreadedSimd}if(X){var ne=Q._dispose;Q._dispose=function(){ne(),X.uncaughtException.forEach((function(e){process.removeListener("uncaughtException",e)})),X.unhandledRejection.forEach((function(e){process.removeListener("unhandledRejection",e)}))}}return e.ready});"object"==typeof e&&"object"==typeof t?t.exports=a:"function"==typeof define&&define.amd?define([],(function(){return a})):"object"==typeof e&&(e.WasmBackendModule=a)})),aa=class{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}},Bo=class{refCount(e){return Fn("refCount")}incRef(e){return Fn("incRef")}timerAvailable(){return!0}time(e){return Fn("time")}read(e){return Fn("read")}readSync(e){return Fn("readSync")}readToGPU(e,t){return Fn("readToGPU")}numDataIds(){return Fn("numDataIds")}disposeData(e,t){return Fn("disposeData")}write(e,t,n){return Fn("write")}move(e,t,n,a,r){return Fn("move")}createTensorFromTexture(e,t,n){return Fn("createTensorFromTexture")}memory(){return Fn("memory")}floatPrecision(){return Fn("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return Fn("dispose")}};function Fn(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function l1(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,Mg(e,t,n)}function WU(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,a=0;for(;n>0;)a=Math.random()*n|0,n--,Mg(e,n,a),Mg(t,n,a)}function op(e,t,n){return Math.max(e,Math.min(t,n))}function UU(e){return e%2==0?e:e+1}function Mg(e,t,n){let a=e[t];e[t]=e[n],e[n]=a}function HU(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function qU(e,t){let n=Math.random();return t*n+(1-n)*e}function KU(e,t){let n=0;for(let a=0;a<e.length;a++){let r=Number(e[a])-Number(t[a]);n+=r*r}return n}function _(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function De(e,t,n=""){_(On(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function Jn(e){_(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function Vo(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||br(e)&&!n)for(let a=0;a<e.length;++a)Vo(e[a],t,n);else t.push(e);return t}function Jt(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function jU(e){return 0===e.length}function On(e,t){if(e===t)return!0;if(null==e||null==t||e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function la(e){return e%1==0}function XU(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{let t=Math.exp(2*e);return(t-1)/(t+1)}}function YU(e){let t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function ZU(e){let t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return l1(t),t}function Mu(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function JU(e,t=(e=>0),n,a){return new Promise(((r,s)=>{let i=0,o=()=>{if(e())return void r();i++;let l=t(i);null!=n&&i>=n?s():null!=a?a(o,l):setTimeout(o,l)};o()}))}function QU(e,t){let n=1,a=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==a)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${a} and dim ${t}`);a=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===a){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);let r=e.slice();return r[a]=t/n,r}function cr(e,t){let n=t.length;return _((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),_(e.every((e=>la(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function nS(e,t){let n=[],a=[],r=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||r?null:cr(t,e).sort(),i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),a.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),a.push(t))}return{newShape:n,keptDims:a}}function oS(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function sS(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function iS(e,t){for(let n=0;n<e.length;n++){let a=e[n];if(isNaN(a)||!isFinite(a))throw Error(`A tensor of type ${t} being uploaded contains ${a}.`)}}function aS(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function t4(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function br(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function zg(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function lS(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function Go(e){return"string"==typeof e||e instanceof String}function u1(e){return"boolean"==typeof e}function c1(e){return"number"==typeof e}function sp(e){return Array.isArray(e)?sp(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":c1(e)?"float32":Go(e)?"string":u1(e)?"bool":"float32"}function ai(e){return!!(e&&e.constructor&&e.call&&e.apply)}function ip(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function li(e){let t=e.length;if(t<2)return[];let n=new Array(t-1);n[t-2]=e[t-1];for(let a=t-3;a>=0;--a)n[a]=n[a+1]*e[a+1];return n}function p1(e,t,n,a=!1){let r=new Array;if(1===t.length){let s=t[0]*(a?2:1);for(let t=0;t<s;t++)r[t]=n[e+t]}else{let s=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(a?2:1);for(let t=0;t<s;t++)r[t]=p1(e+t*o,i,n,a)}return r}function Lu(e,t,n=!1){if(0===e.length)return t[0];let a=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===a)return[];if(a!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return p1(0,e,t,n)}function Hd(e,t){let n=ap(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function ap(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function e4(e,t){let n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Lu(e,new Float32Array(n));if("int32"===t)return Lu(e,new Int32Array(n));if("bool"===t)return Lu(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Pe(e){e.forEach((t=>{_(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function r4(e,t,n){if(0===t)return 0;if(1===t)return e[0];let a=e[e.length-1];for(let t=0;t<e.length-1;++t)a+=n[t]*e[t];return a}function n4(e,t,n){if(0===t)return[];if(1===t)return[e];let a=new Array(t);for(let t=0;t<a.length-1;++t)a[t]=Math.floor(e/n[t]),e-=a[t]*n[t];return a[a.length-1]=e,a}function qd(e){return e&&e.then&&"function"==typeof e.then}var m1="tfjsflags",Kd=class{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=s4,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(M().getBool("IS_TEST")||M().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){let t=this.urlFlags[e];M().getBool("IS_TEST")||M().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];let t=this.evaluateFlag(e);if(qd(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;let e=this.getQueryParams(this.global.location.search);m1 in e&&e[m1].split(",").forEach((e=>{let[t,n]=e.split(":");this.urlFlags[t]=a4(t,n)}))}};function s4(e){let t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(i4(t,n[0],n[1]),n.join("=")))),t}function i4(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}function a4(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}function M(){return uS}var cS,uS=null;function f1(e){uS=e}function pS(){if(null==cS){let e;if("undefined"!=typeof window)e=window;else if("undefined"!=typeof global)e=global;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}cS=e}return cS}function l4(){let e=pS();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}function jd(e,t){let n=l4();if(n.has(e))return n.get(e);{let a=t();return n.set(e,a),n.get(e)}}var ui="Abs",ua="Acos",ca="Acosh",Qn="Add",Wo="AddN",pa="All",ma="Any",Uo="ArgMax",Al="ArgMin",fa="Asin",da="Asinh",ha="Atan",ga="Atanh",xa="Atan2",Ho="AvgPool",lp="AvgPoolGrad",$l="AvgPool3D",up="AvgPool3DGrad",qo="BatchMatMul",ci="BatchToSpaceND",cp="Bincount",d1="BroadcastTo",pp="BroadcastArgs",co="Cast",Ko="Ceil",po="ClipByValue",mp="Complex",Dl="ComplexAbs",pi="Concat",jo="Conv2D",fp="Conv2DBackpropFilter",Xo="Conv2DBackpropInput",Rl="Conv3D",dp="Conv3DBackpropFilterV2",hp="Conv3DBackpropInputV2",Yo="Cos",Zo="Cosh",ya="Cumprod",Jo="Cumsum",ba="CropAndResize",gp="DenseBincount",wa="DepthToSpace",Qo="DepthwiseConv2dNative",xp="DepthwiseConv2dNativeBackpropFilter",yp="DepthwiseConv2dNativeBackpropInput",bp="Diag",Fl="Dilation2D",Xd="Dilation2DBackpropInput",Yd="Dilation2DBackpropFilter",ts="RealDiv",wp="Einsum",es="Elu",Cp="EluGrad",Ca="Erf",Ia="Equal",rs="Exp",mi="ExpandDims",va="Expm1",Ip="FFT",Ol="Fill",Sa="FlipLeftRight",ns="Floor",os="FloorDiv",ss="FusedBatchNorm",fi="GatherV2",Na="GatherNd",Ta="Greater",is="GreaterEqual",mo="Identity",vp="IFFT",Sp="Imag",ka="IsFinite",Ea="IsInf",as="IsNan",ls="LeakyRelu",_a="Less",Aa="LessEqual",Np="LinSpace",us="Log",$a="Log1p",Da="LogicalAnd",Ra="LogicalNot",Fa="LogicalOr",h1="LogicalXor",g1="LogSoftmax",Nlt="LowerBound",Pl="LRN",Tp="LRNGrad",cs="Max",ps="Maximum",ms="MaxPool",kp="MaxPoolGrad",Ll="MaxPool3D",Ep="MaxPool3DGrad",_p="MaxPoolWithArgmax",fs="Mean",ds="Min",hs="Minimum",gs="MirrorPad",Oa="Mod",Ap="Multinomial",xs="Multiply",di="Neg",Pa="NotEqual",La="NonMaxSuppressionV3",Ma="NonMaxSuppressionV4",za="NonMaxSuppressionV5",hi="OnesLike",ys="OneHot",gi="Pack",bs="PadV2",Tlt="Pool",ws="Pow",Cs="Prelu",Is="Prod",$p="RaggedGather",Dp="RaggedRange",Rp="RaggedTensorToTensor",Ml="Range",Fp="Real",vs="Reciprocal",Ss="Relu",xi="Reshape",Ns="ResizeNearestNeighbor",Op="ResizeNearestNeighborGrad",Ts="ResizeBilinear",Pp="ResizeBilinearGrad",ks="Relu6",Es="Reverse",_s="Round",As="Rsqrt",Ba="ScatterNd",Lp="SearchSorted",yi="Select",Va="Selu",bi="Slice",$s="Sin",Ga="Sinh",Wa="Sign",Ds="Sigmoid",Ua="Softplus",Rs="Sqrt",Fs="Sum",wi="SpaceToBatchND",Ci="SplitV",Os="Softmax",zl="SparseFillEmptyRows",Ha="SparseReshape",Bl="SparseSegmentMean",Vl="SparseSegmentSum",Mp="SparseToDense",Ps="SquaredDifference",Gl="Square",qa="StridedSlice",Wl="StringNGrams",Ul="StringSplit",Hl="StringToHashBucketFast",Ls="Sub",Ms="Tan",zs="Tanh",to="Tile",Ka="TopK",ja="Transform",eo="Transpose",zp="Unique",Ii="Unpack",ql="UnsortedSegmentSum",klt="UpperBound",vi="ZerosLike",fo="Step",Zd="FromPixels",Xa="RotateWithOffset",Si="_FusedMatMul",Ni="FusedConv2D",Ti="FusedDepthwiseConv2D";function ki(...e){M().getBool("IS_TEST")||M().getBool("PROD")||console.warn(...e)}function u4(...e){M().getBool("IS_TEST")||M().getBool("PROD")||console.log(...e)}var Bp=jd("kernelRegistry",(()=>new Map)),Jd=jd("gradRegistry",(()=>new Map));function Qd(e,t){let n=fS(e,t);return Bp.get(n)}function mS(e){return Jd.get(e)}function Bg(e){let t=Bp.entries(),n=[];for(;;){let{done:a,value:r}=t.next();if(a)break;let[s,i]=r,[o]=s.split("_");o===e&&n.push(i)}return n}function zu(e){let{kernelName:t,backendName:n}=e,a=fS(t,n);Bp.has(a)&&ki(`The kernel '${t}' for backend '${n}' is already registered`),Bp.set(a,e)}function y1(e){let{kernelName:t}=e;Jd.has(t)&&M().getBool("DEBUG")&&ki(`Overriding the gradient for '${t}'`),Jd.set(t,e)}function Dlt(e,t){let n=fS(e,t);if(!Bp.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);Bp.delete(n)}function Rlt(e){if(!Jd.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);Jd.delete(e)}function Flt(e,t){Bg(e).forEach((e=>{zu(Object.assign({},e,{backendName:t}))}))}function fS(e,t){return`${t}_${e}`}var y={};Wt(y,{arraysEqual:()=>On,assert:()=>_,assertNonNegativeIntegerDimensions:()=>Pe,assertNonNull:()=>Jn,assertShapesMatch:()=>De,bytesFromStringArray:()=>lS,bytesPerElement:()=>zg,checkConversionForErrors:()=>iS,clamp:()=>op,computeStrides:()=>li,createScalarValue:()=>g4,createShuffledIndices:()=>ZU,decodeString:()=>Up,distSquared:()=>KU,encodeString:()=>jl,fetch:()=>y4,fingerPrint64:()=>h4,flatten:()=>Vo,getArrayFromDType:()=>sS,getTypedArrayFromDType:()=>oS,hasEncodingLoss:()=>t4,hexToLong:()=>th,indexToLoc:()=>n4,inferDtype:()=>sp,inferFromImplicitShape:()=>QU,isBoolean:()=>u1,isFunction:()=>ai,isInt:()=>la,isNumber:()=>c1,isPromise:()=>qd,isScalarShape:()=>jU,isString:()=>Go,isTypedArray:()=>br,isValidDtype:()=>aS,locToIndex:()=>r4,makeOnesTypedArray:()=>Hd,makeZerosNestedTypedArray:()=>e4,makeZerosTypedArray:()=>ap,nearestDivisor:()=>ip,nearestLargerEven:()=>UU,now:()=>Uu,parseAxisParam:()=>cr,randUniform:()=>qU,repeatedTry:()=>JU,rightPad:()=>Mu,shuffle:()=>l1,shuffleCombo:()=>WU,sizeFromShape:()=>Jt,sizeToSquarishShape:()=>YU,squeezeShape:()=>nS,sum:()=>HU,swap:()=>Mg,tanh:()=>XU,toNestedArray:()=>Lu,toTypedArray:()=>Wp});var xS=_l(_1()),Wu=xS.default||xS;function th(e){return Wu.fromString(e,!0,16)}var $1=th("c3a5c85c97cb3127"),Gu=th("b492b66fbe98f273"),on=th("9ae16a3b2f90404f");function gS(e){return e.xor(e.shru(47))}function D1(e,t,n){let a=e.slice(t,t+n);return Wu.fromBytes(Array.from(a),!0,!0)}function Le(e,t){return D1(e,t,8)}function A1(e,t){return D1(e,t,4)}function _r(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Kl(e,t,n=th("9ddfea08eb382d69")){let a=e.xor(t).mul(n);a=a.xor(a.shru(47));let r=t.xor(a).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function p4(e,t,n,a,r,s){r=r.add(e),s=_r(s.add(r).add(a),21);let i=r;return r=(r=r.add(t)).add(n),s=s.add(_r(r,44)),[r.add(a),s.add(i)]}function Gg(e,t,n,a){return p4(Le(e,t),Le(e,t+8),Le(e,t+16),Le(e,t+24),n,a)}function m4(e,t=e.length){if(t>=8){let n=on.add(2*t),a=Le(e,0).add(on),r=Le(e,t-8);return Kl(_r(r,37).mul(n).add(a),_r(a,25).add(r).mul(n),n)}if(t>=4){let n=on.add(2*t);return Kl(A1(e,0).shl(3).add(t),A1(e,t-4),n)}if(t>0){let n=e[0]+(e[t>>1]<<8),a=t+(e[t-1]<<2);return gS(on.mul(n).xor($1.mul(a))).mul(on)}return on}function f4(e,t=e.length){let n=on.add(2*t),a=Le(e,0).mul(Gu),r=Le(e,8),s=Le(e,t-8).mul(n),i=Le(e,t-16).mul(on);return Kl(_r(a.add(r),43).add(_r(s,30)).add(i),a.add(_r(r.add(on),18)).add(s),n)}function d4(e,t=e.length){let n=on.add(2*t),a=Le(e,0).mul(on),r=Le(e,8),s=Le(e,t-8).mul(n),i=Le(e,t-16).mul(on),o=_r(a.add(r),43).add(_r(s,30)).add(i),l=Kl(o,a.add(_r(r.add(on),18)).add(s),n),u=Le(e,16).mul(n),p=Le(e,24),h=o.add(Le(e,t-32)).mul(n),d=l.add(Le(e,t-24)).mul(n);return Kl(_r(u.add(p),43).add(_r(h,30)).add(d),u.add(_r(p.add(a),18)).add(h),n)}function h4(e,t=e.length){let n=Wu.fromNumber(81,!0);if(t<=32)return t<=16?m4(e,t):f4(e,t);if(t<=64)return d4(e,t);let a=n,r=n.mul(Gu).add(113),s=gS(r.mul(on).add(113)).mul(on),i=[Wu.UZERO,Wu.UZERO],o=[Wu.UZERO,Wu.UZERO];a=a.mul(on).add(Le(e,0));let l=0,u=64*(t-1>>6),p=u+(t-1&63)-63;do{a=_r(a.add(r).add(i[0]).add(Le(e,l+8)),37).mul(Gu),r=_r(r.add(i[1]).add(Le(e,l+48)),42).mul(Gu),a=a.xor(o[1]),r=r.add(i[0]).add(Le(e,l+40)),s=_r(s.add(o[0]),33).mul(Gu),i=Gg(e,l,i[1].mul(Gu),a.add(o[0])),o=Gg(e,l+32,s.add(o[1]),r.add(Le(e,l+16))),[s,a]=[a,s],l+=64}while(l!==u);let h=Gu.add(s.and(255).shl(1));return l=p,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),a=_r(a.add(r).add(i[0]).add(Le(e,l+8)),37).mul(h),r=_r(r.add(i[1]).add(Le(e,l+48)),42).mul(h),a=a.xor(o[1].mul(9)),r=r.add(i[0].mul(9).add(Le(e,l+40))),s=_r(s.add(o[0]),33).mul(h),i=Gg(e,l,i[1].mul(h),a.add(o[0])),o=Gg(e,l+32,s.add(o[1]),r.add(Le(e,l+16))),[s,a]=[a,s],Kl(Kl(i[0],o[0],h).add(gS(r).mul($1)).add(s),Kl(i[1],o[1],h).add(a),h)}function g4(e,t){return"string"===t?jl(e):Wp([e],t)}function x4(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}function Wp(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=Vo(e)),M().getBool("DEBUG")&&iS(e,t),x4(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){let t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Uu(){return M().platform.now()}function y4(e,t){return M().platform.fetch(e,t)}function jl(e,t="utf-8"){return t=t||"utf-8",M().platform.encode(e,t)}function Up(e,t="utf-8"){return t=t||"utf-8",M().platform.decode(e,t)}var Wg=class{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new yS)}profileKernel(e,t,n){let a,r,s=()=>{a=n()},i=Uu();if(this.backendTimer.timerAvailable())r=this.backendTimer.time(s);else{s();for(let e of a)e.dataSync();r=Promise.resolve({kernelMs:Uu()-i})}if(M().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<a.length;t++){let n=a[t];n.data().then((t=>{b4(t,n.dtype,e)}))}return{kernelName:e,outputs:a,inputs:t,timeMs:r.then((e=>e.kernelMs)),extraInfo:r.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){let{kernelName:t,outputs:n,timeMs:a,inputs:r,extraInfo:s}=e;n.forEach((e=>{Promise.all([e.data(),a,s]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}};function b4(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){let a=e[t];if(isNaN(a)||!isFinite(a))return console.warn(`Found ${a} in the result of '${n}'`),!0}return!1}var yS=class{logKernelProfile(e,t,n,a,r,s){let i="number"==typeof a?Mu(`${a}ms`,9):a.error,o=Mu(e,25),l=t.rank,u=t.size,p=Mu(t.shape.toString(),14),h="";for(let e in r){let n=r[e];if(null!=n){let a=n.shape||t.shape,r=a.length;h+=`${e}: ${r}D ${r>0?a:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${p}\t%c${u}\t%c${h}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}};function R1(e,t,n){let a={},r={};for(let e=0;e<t.length;e++)a[t[e].id]=!0;for(let n=0;n<e.length;n++){let s=e[n],i=s.inputs;for(let e in i){let n=i[e],o=!1;for(let e=0;e<t.length;e++)if(a[n.id]){s.outputs.forEach((e=>a[e.id]=!0)),o=!0,r[s.id]=!0;break}if(o)break}}let s={};s[n.id]=!0;let i={};for(let t=e.length-1;t>=0;t--){let n=e[t],a=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(let e in a)s[a[e].id]=!0,i[n.id]=!0;break}}let o=[];for(let t=0;t<e.length;t++){let n=e[t];if(r[n.id]&&i[n.id]){let e={};for(let t in n.inputs){let r=n.inputs[t];a[r.id]&&(e[t]=r)}let t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}function F1(e,t,n,a){for(let r=t.length-1;r>=0;r--){let s=t[r],i=[];if(s.outputs.forEach((t=>{let n=e[t.id];null!=n?i.push(n):i.push(null)})),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);let o=s.gradient(i);for(let t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);let r=n((()=>o[t]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${r.dtype}'`);let i=s.inputs[t];if(!On(r.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${r.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=r;else{let t=e[i.id];e[i.id]=a(t,r),t.dispose()}}}}var O1=20,eh=3,bS=7;function P1(e,t,n,a){let r=li(t),s=w4(e,t,n,r),i=t.length,o=Ug(e,t,n,r,s),l=["Tensor"];return a&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function w4(e,t,n,a){let r=Jt(t),s=a[a.length-1],i=new Array(s).fill(0),o=t.length,l="complex64"===n?nh(e):e;if(o>1)for(let e=0;e<r/s;e++){let t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],rh(l[t+e],0,n).length)}return i}function rh(e,t,n){let a;return a=Array.isArray(e)?`${parseFloat(e[0].toFixed(bS))} + ${parseFloat(e[1].toFixed(bS))}j`:Go(e)?`'${e}'`:"bool"===n?L1(e):parseFloat(e.toFixed(bS)).toString(),Mu(a,t)}function L1(e){return 0===e?"false":"true"}function Ug(e,t,n,a,r,s=!0){let i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[rh(nh(e)[0],0,n)]:"bool"===n?[L1(e[0])]:[e[0].toString()];if(1===l){if(o>O1){let t=eh*i,a=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-eh)*i,o*i));return"complex64"===n&&(a=nh(a),s=nh(s)),["["+a.map(((e,t)=>rh(e,r[t],n))).join(", ")+", ..., "+s.map(((e,t)=>rh(e,r[o-eh+t],n))).join(", ")+"]"]}return["["+("complex64"===n?nh(e):Array.from(e)).map(((e,t)=>rh(e,r[t],n))).join(", ")+"]"]}let u=t.slice(1),p=a.slice(1),h=a[0]*i,d=[];if(o>O1){for(let t=0;t<eh;t++){let a=t*h,s=a+h;d.push(...Ug(e.slice(a,s),u,n,p,r,!1))}d.push("...");for(let t=o-eh;t<o;t++){let a=t*h,s=a+h;d.push(...Ug(e.slice(a,s),u,n,p,r,t===o-1))}}else for(let t=0;t<o;t++){let a=t*h,s=a+h;d.push(...Ug(e.slice(a,s),u,n,p,r,t===o-1))}let c=2===l?",":"";d[0]="["+d[0]+c;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+c;let f=",\n";for(let e=2;e<l;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(s?"":f),d}function nh(e){let t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var pe=class{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=Jt(e),null!=n){let e=n.length;_(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||sS(t,this.size),this.strides=li(e)}set(e,...t){0===t.length&&(t=[0]),_(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));let n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(let n of e){if(n<0||n>=this.shape[t]){let t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];let t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Vs().makeTensor(this.values,this.shape,this.dtype)}},Vs=null,Hp=null,C4=null;function M1(e){Vs=e}function z1(e){Hp=e}function B1(e){C4=e}var Ft=class{constructor(e,t,n,a){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=Jt(e),this.strides=li(e),this.dataId=n,this.id=a,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){let e=await this.data();return Hp.buffer(this.shape,this.dtype,e)}bufferSync(){return Hp.buffer(this.shape,this.dtype,this.dataSync())}async array(){let e=await this.data();return Lu(this.shape,e,"complex64"===this.dtype)}arraySync(){return Lu(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();let e=Vs().read(this.dataId);if("string"===this.dtype){let t=await e;try{return t.map((e=>Up(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Vs().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();let e=Vs().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Up(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();let e=await Vs().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Vs().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Hp.print(this,e)}clone(){return this.throwIfDisposed(),Hp.clone(this)}toString(e=!1){return P1(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Hp.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Vs().makeVariable(this,e,t,n)}};function O(){return jd("Tensor",(()=>Ft))}Object.defineProperty(Ft,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),O();var Ya=class extends Ft{constructor(e,t,n,a){super(e.shape,e.dtype,e.dataId,a),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!On(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Vs().disposeTensor(this),this.dataId=e.dataId,Vs().incRef(this,null)}dispose(){Vs().disposeVariable(this),this.isDisposedInternal=!0}};Object.defineProperty(Ya,Symbol.hasInstance,{value:e=>e instanceof Ft&&null!=e.assign&&e.assign instanceof Function});var wS,CS,IS,vS,SS,yo={};Wt(yo,{assertTypesMatch:()=>NS,getTensorsInContainer:()=>oh,isTensorInList:()=>v4,makeTypesMatch:()=>Ut}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(wS||(wS={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(CS||(CS={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(IS||(IS={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(vS||(vS={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(SS||(SS={}));var I4={float32:vS,int32:CS,bool:IS,complex64:SS};function ar(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return I4[e][t]}function Hu(e){return ar(e,"int32")}function Ut(e,t){if(e.dtype===t.dtype)return[e,t];let n=ar(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function NS(e,t){_(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function v4(e,t){return t.some((t=>t.id===e.id))}function oh(e){let t=[];return V1(e,t,new Set),t}function V1(e,t,n){if(null==e)return;if(e instanceof Ft)return void t.push(e);if(!S4(e))return;let a=e;for(let e in a){let r=a[e];n.has(r)||(n.add(r),V1(r,t,n))}}function S4(e){return Array.isArray(e)||"object"==typeof e}function TS(e){return null!=e.kernelName}var Hg=class{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(let e in this.registeredVariables)this.registeredVariables[e].dispose()}},Xl=class{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Hg}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){let{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{let{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(ki(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;let{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Wg(this.backendInstance),!0}setupRegisteredKernels(){Bg(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){Bg(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){let t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{let n=t.factory();if(!n||n instanceof Bo||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{let t=++this.pendingBackendInitId,a=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,ki(`Initialization of backend ${e} failed`),ki(n.stack||n.message)),!1)));return this.pendingBackendInit=a,{success:a,asyncInit:!0}}}catch(t){return ki(`Initialization of backend ${e} failed`),ki(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){let e=this.getSortedBackends();for(let t=0;t<e.length;t++){let n=e[t],{success:a,asyncInit:r}=this.initializeBackend(n);if(r||a)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){let n=this.state.tensorInfo.get(t),a=n.backend,r=this.readSync(t),s=a.refCount(t);a.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,a=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");a=e}return this.scopedRun((()=>this.startScope(a)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{let e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Xl.nextTensorId++}nextVariableId(){return Xl.nextVariableId++}clone(e){let t=k.runKernel(mo,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{let t={x:e};return k.runKernel(co,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==Qd(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){let a=this.backend.numDataIds(),r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));let s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=a-t-r-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n,a=[],r=this.isTapeOn(),s=this.state.numBytes,i=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;let o,l=TS(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(TS(e)){let{kernelName:t,inputs:s,attrs:i}=e;null==this.backendName&&this.backend;let l=Qd(t,this.backendName);_(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),n=()=>{let e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:i,backend:this.backend});let n=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,n);let u=n.map((e=>null!=e.rank?e:this.makeTensorFromTensorInfo(e)));if(r){let e=this.getTensorsForGradient(t,s,u);a=this.saveTensorsForBackwardMode(e)}return u}}else{let{forwardFunc:t}=e,s=e=>{!r||(a=e.map((e=>this.keep(this.clone(e)))))};n=()=>{let e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));let n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}let u,{inputs:p,attrs:h}=e,d=TS(e)?null:e.backwardsFunc;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(u=this.profiler.profileKernel(l,p,(()=>n())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(u),t=u.outputs):t=n()})),r&&this.addTapeNode(l,p,t,d,a,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-i,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(p).map((e=>null!=p[e]?p[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:u.timeMs,extraInfo:u.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){let a=mS(e);if(null!=a){let e,r=a.inputsToSave||[],s=a.outputsToSave||[];a.saveAllInputs?(_(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),e=Object.keys(t).map((e=>t[e]))):e=r.map((e=>t[e]));let i=n.filter(((e,t)=>s[t]));return e.concat(i)}return[]}makeTensor(e,t,n,a){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",a=a||this.backend;let r=e;"string"===n&&Go(e[0])&&(r=e.map((e=>jl(e))));let s=a.write(r,t,n),i=new Ft(t,n,s,this.nextTensorId());if(this.trackTensor(i,a),"string"===n){let e=this.state.tensorInfo.get(s),t=lS(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,a){let r={dataId:e,shape:t,dtype:n=n||"float32"};return this.makeTensorFromTensorInfo(r,a)}makeTensorFromTensorInfo(e,t){let{dataId:n,shape:a,dtype:r}=e,s=new Ft(a,r,n,this.nextTensorId());return this.trackTensor(s,t),s}makeVariable(e,t=!0,n,a){n=n||this.nextVariableId().toString(),null!=a&&a!==e.dtype&&(e=e.cast(a));let r=new Ya(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*zg(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Ya||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;let t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){let t=e.size*zg(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(let e in this.state.registeredVariables){let t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){let e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;let t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(let e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,a,r,s){let i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},o=mS(e);null!=o&&(a=o.gradFunc),null!=a&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){let e=n[t],a=ap(e.size,e.dtype);return this.makeTensor(a,e.shape,e.dtype)}return e})),a(e.length>1?e:e[0],r,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){let t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){let t=oh(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){let t=this.state.activeScope.track[e];!t.kept&&!n.has(t.id)&&t.dispose()}let a=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{!e.kept&&e.scopeId===a.id&&this.track(e)}))}gradients(e,t,n,a=!1){if(_(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);let r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));_(r instanceof Ft,(()=>"The result y returned by f() must be a tensor."));let s=R1(this.state.activeTape,t,r);if(!a&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{let e={};e[r.id]=null==n?N4(r.shape):n,F1(e,s,(e=>this.tidy(e)),T4);let a=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(let t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:a}}))}customGrad(e){return _(ai(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{_(t.every((e=>e instanceof Ft)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));let n,a={};return t.forEach(((e,t)=>{a[t]=e})),this.runKernelFunc({forwardFunc:(a,r)=>(n=e(...t,r),_(n.value instanceof Ft,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),_(ai(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,a)=>{let r=n.gradFunc(e,a),s=Array.isArray(r)?r:[r];_(s.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),_(s.every((e=>e instanceof Ft)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));let i={};return s.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:a})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){let t=Uu(),n=await this.backend.time(e);return n.wallMs=Uu()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Hg;for(let e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}};function N4(e){let t=Hd(Jt(e),"float32");return k.makeTensor(t,e,"float32")}function kS(){let e=pS();if(null==e._tfengine){let t=new Kd(e);e._tfengine=new Xl(t)}return f1(e._tfengine.ENV),M1((()=>e._tfengine)),e._tfengine}Xl.nextTensorId=0,Xl.nextVariableId=0;var k=kS();function T4(e,t){let n={a:e,b:t};return k.runKernel(Qn,n)}var ES,Yl={};function k4(){return"undefined"!=typeof navigator&&null!=navigator}function E4(e){ES=e}function _4(e){if(void 0!==ES)return ES;if(e||k4()){if(e||(e=navigator),"ReactNative"===e.product)return!0;let t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){let t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function _S(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}Wt(Yl,{isBrowser:()=>_S,isMobile:()=>_4,mockIsMobile:()=>E4});var ro=M();function Gr(e,t){let n=e;if(br(e))return"string"===t?[]:[e.length];if("object"==typeof e&&"texture"in e){let t=e.channels||"RGBA";return[e.height,e.width*t.length]}if(!Array.isArray(e))return[];let a=[];for(;Array.isArray(n)||br(n)&&"string"!==t;)a.push(n.length),n=n[0];return Array.isArray(e)&&M().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&W1(e,a,[]),a}function W1(e,t,n){if(n=n||[],!Array.isArray(e)&&!br(e))return void _(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));_(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),_(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));let a=t.slice(1);for(let t=0;t<e.length;++t)W1(e[t],a,n.concat(t))}function G1(e,t,n,a){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${a}' must be ${e} tensor, but got ${t} tensor`)}}function v(e,t,n,a="numeric"){if(e instanceof Ft)return G1(a,e.dtype,t,n),e;let r=sp(e);if("string"!==r&&["bool","int32","float32"].indexOf(a)>=0&&(r=a),G1(a,r,t,n),null==e||!br(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){let a=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${a}'`)}let s=Gr(e,r);!br(e)&&!Array.isArray(e)&&(e=[e]);let i="string"!==r?Wp(e,r):Vo(e,[],!0);return k.makeTensor(i,s,r)}function Za(e,t,n,a="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,r)=>v(e,`${t}[${r}]`,n,a)))}ro.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),ro.registerFlag("IS_BROWSER",(()=>_S())),ro.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),ro.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),ro.registerFlag("PROD",(()=>!1)),ro.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>ro.getBool("DEBUG"))),ro.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),ro.registerFlag("IS_TEST",(()=>!1)),ro.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),ro.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1)),ro.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",(()=>!1)),ro.registerFlag("USE_SETTIMEOUTCUSTOM",(()=>!1));var AS="__op";function T(e){let t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0],a=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=AS;let r=(...e)=>{k.startScope(n);try{let t=a(...e);return qd(t)&&console.error("Cannot return a Promise inside of tidy."),k.endScope(t),t}catch(e){throw k.endScope(null),e}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}function A4(e,t){let n=v(e,"real","complex"),a=v(t,"imag","complex");De(n.shape,a.shape,`real and imag shapes, ${n.shape} and ${a.shape}, must match in call to tf.complex().`);let r={real:n,imag:a};return k.runKernel(mp,r)}var In=T({complex_:A4});function sn(e,t,n,a){if(null==a&&(a=sp(e)),"complex64"===a)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if("object"==typeof e&&"texture"in e){if("float32"!==a&&"int32"!==a)throw new Error(`Creating tensor from texture only supports 'float32'|'int32' dtype, while the dtype is ${a}.`);return e.channels=e.channels||"RGBA",k.backend.createTensorFromTexture(e,t||n,a)}if(!br(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Pe(t);let e=Jt(t),a=Jt(n);_(e===a,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${a}`));for(let e=0;e<n.length;++e){let a=n[e],r=e!==n.length-1||a!==Jt(t.slice(e));_(n[e]===t[e]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return!br(e)&&!Array.isArray(e)&&(e=[e]),t=t||n,e="string"!==a?Wp(e,a):Vo(e,[],!0),k.makeTensor(e,t,a)}function nr(e,t,n){return sn(e,t,Gr(e,n),n)}var sh={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},qg=4;async function H1(e,t){let n=[],a=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let s=0;s<r.length;++s){let i=r[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);let l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){let e=new Promise((async e=>{let t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+qg*t.length,a=new Uint8Array(n),r=0;for(let e=0;e<t.length;e++){let n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);a.set(s,r),r+=qg,a.set(n,r),r+=n.length}e(a)}));a.push(e)}else a.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:$4(await Promise.all(a)),specs:n}}function Kg(e,t){let n,a={},r=0;for(let s of t){let t,i=s.name,o=s.dtype,l=s.shape,u=Jt(l);if("quantization"in s){let a=s.quantization;if("uint8"===a.dtype||"uint16"===a.dtype){if(!("min"in a)||!("scale"in a))throw new Error(`Weight ${s.name} with quantization ${a.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==a.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${a.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==o)throw new Error(`Weight ${s.name} is quantized with ${a.dtype} which only supports weights of type float32 not ${o}.`)}let l=sh[a.dtype],p=e.slice(r,r+u*l),h="uint8"===a.dtype?new Uint8Array(p):new Uint16Array(p);if("float32"===o)if("uint8"===a.dtype||"uint16"===a.dtype){t=new Float32Array(h.length);for(let e=0;e<h.length;e++){let n=h[e];t[e]=n*a.scale+a.min}}else{if("float16"!==a.dtype)throw new Error(`Unsupported quantization type ${a.dtype} for weight type float32.`);void 0===n&&(n=O4()),t=n(h)}else{if("int32"!==o)throw new Error(`Unsupported dtype in weight '${i}': ${o}`);if("uint8"!==a.dtype&&"uint16"!==a.dtype)throw new Error(`Unsupported quantization type ${a.dtype} for weight type int32.`);t=new Int32Array(h.length);for(let e=0;e<h.length;e++){let n=h[e];t[e]=Math.round(n*a.scale+a.min)}}r+=u*l}else if("string"===o){let n=Jt(s.shape);t=[];for(let a=0;a<n;a++){let n=new Uint32Array(e.slice(r,r+qg))[0];r+=qg;let a=new Uint8Array(e.slice(r,r+n));t.push(a),r+=n}}else{let n=sh[o],s=e.slice(r,r+u*n);if("float32"===o)t=new Float32Array(s);else if("int32"===o)t=new Int32Array(s);else if("bool"===o)t=new Uint8Array(s);else{if("complex64"!==o)throw new Error(`Unsupported dtype in weight '${i}': ${o}`);{t=new Float32Array(s);let e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let a=0;a<e.length;a++)e[a]=t[2*a],n[a]=t[2*a+1];let r=nr(e,l,"float32"),o=nr(n,l,"float32");a[i]=In(r,o),r.dispose(),o.dispose()}}r+=u*n}"complex64"!==o&&(a[i]=nr(t,l,o))}return a}function $4(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0,n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));let a=new Uint8Array(t),r=0;return n.forEach((e=>{a.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),a.buffer}var $S="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function U1(e){return $S?Buffer.byteLength(e):new Blob([e]).size}function q1(e){if($S)return Buffer.from(e).toString("base64");let t=new Uint8Array(e),n="";for(let e=0,a=t.length;e<a;e++)n+=String.fromCharCode(t[e]);return btoa(n)}function K1(e){if($S){let t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}let t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}function qp(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));let n=new Uint8Array(t),a=0;return e.forEach((e=>{n.set(new Uint8Array(e),a),a+=e.byteLength})),n.buffer}function DS(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);let t=e.split("/");return t[t.length-1]}function jg(e,t){let n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(n.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}function RS(e,t,n){let a={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(a.trainingConfig=e.trainingConfig),null!=e.weightsManifest){if(!t)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!n)throw new Error("modelJSON has weightsManifest but weightData is null");a.weightSpecs=t,a.weightData=n}return null!=e.signature&&(a.signature=e.signature),null!=e.userDefinedMetadata&&(a.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(a.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(a.initializerSignature=e.initializerSignature),a}async function Kp(e,t){let n,a;return null!=e.weightsManifest&&([n,a]=await t(e.weightsManifest)),RS(e,n,a)}function Ei(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:U1(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:U1(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Xg(e){let t=[];for(let n of e)t.push(...n.weights);return t}function D4(){let e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}function R4(){let e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}function F4(){let e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}function O4(){let e=D4(),t=R4(),n=F4();return a=>{let r=new ArrayBuffer(4*a.length),s=new Uint32Array(r);for(let r=0;r<a.length;r++){let i=a[r],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[r]=o}return new Float32Array(r)}}var Ce=class{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Ce.instance&&(Ce.instance=new Ce),Ce.instance}static registerSaveRouter(e){Ce.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ce.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ce.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ce.getHandlers(e,"load",t)}static getHandlers(e,t,n){let a=[];return("load"===t?Ce.getInstance().loadRouters:Ce.getInstance().saveRouters).forEach((t=>{let r=t(e,n);null!==r&&a.push(r)})),a}},j1=e=>Ce.registerSaveRouter(e),X1=e=>Ce.registerLoadRouter(e),Y1=e=>Ce.getSaveHandlers(e),Z1=(e,t)=>Ce.getLoadHandlers(e,t),FS="tensorflowjs",OS=1,qu="models_store",Zl="model_info_store";function J1(){if(!M().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");let e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function PS(e){let t=e.result;t.createObjectStore(qu,{keyPath:"modelPath"}),t.createObjectStore(Zl,{keyPath:"modelPath"})}var _i=class{constructor(e){if(this.indexedDB=J1(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{let a=this.indexedDB.open(FS,OS);a.onupgradeneeded=()=>PS(a),a.onsuccess=()=>{let r=a.result;if(null==t){let t=r.transaction(qu,"readonly"),a=t.objectStore(qu).get(this.modelPath);a.onsuccess=()=>{if(null==a.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(a.result.modelArtifacts)},a.onerror=e=>(r.close(),n(a.error)),t.oncomplete=()=>r.close()}else{let a,s=Ei(t),i=r.transaction(Zl,"readwrite"),o=i.objectStore(Zl),l=o.put({modelPath:this.modelPath,modelArtifactsInfo:s});l.onsuccess=()=>{a=r.transaction(qu,"readwrite");let l=a.objectStore(qu).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s});l.onsuccess=()=>e({modelArtifactsInfo:s}),l.onerror=e=>{o=i.objectStore(Zl);let t=o.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(l.error)),t.onerror=e=>(r.close(),n(l.error))}},l.onerror=e=>(r.close(),n(l.error)),i.oncomplete=()=>{null==a?r.close():a.oncomplete=()=>r.close()}}},a.onerror=e=>n(a.error)}))}};_i.URL_SCHEME="indexeddb://";var Q1=e=>M().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(_i.URL_SCHEME)?P4(e.slice(_i.URL_SCHEME.length)):null;function P4(e){return new _i(e)}function L4(e){return e.startsWith(_i.URL_SCHEME)?e.slice(_i.URL_SCHEME.length):e}Ce.registerSaveRouter(Q1),Ce.registerLoadRouter(Q1);var Yg=class{constructor(){this.indexedDB=J1()}async listModels(){return new Promise(((e,t)=>{let n=this.indexedDB.open(FS,OS);n.onupgradeneeded=()=>PS(n),n.onsuccess=()=>{let a=n.result,r=a.transaction(Zl,"readonly"),s=r.objectStore(Zl).getAll();s.onsuccess=()=>{let t={};for(let e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(a.close(),t(s.error)),r.oncomplete=()=>a.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){return e=L4(e),new Promise(((t,n)=>{let a=this.indexedDB.open(FS,OS);a.onupgradeneeded=()=>PS(a),a.onsuccess=()=>{let r,s=a.result,i=s.transaction(Zl,"readwrite"),o=i.objectStore(Zl),l=o.get(e);l.onsuccess=()=>{if(null==l.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{let a=o.delete(e),i=()=>{r=s.transaction(qu,"readwrite");let a=r.objectStore(qu).delete(e);a.onsuccess=()=>t(l.result.modelArtifactsInfo),a.onerror=e=>n(l.error)};a.onsuccess=i,a.onerror=e=>(i(),s.close(),n(l.error))}},l.onerror=e=>(s.close(),n(l.error)),i.oncomplete=()=>{null==r?s.close():r.oncomplete=()=>s.close()}},a.onerror=e=>n(a.error)}))}},Ja="/",jp="tensorflowjs_models",tE="info",M4="model_topology",z4="weight_specs",B4="weight_data",V4="model_metadata";function eE(e){return{info:[jp,e,tE].join(Ja),topology:[jp,e,M4].join(Ja),weightSpecs:[jp,e,z4].join(Ja),weightData:[jp,e,B4].join(Ja),modelMetadata:[jp,e,V4].join(Ja)}}function rE(e){for(let t of Object.values(e))window.localStorage.removeItem(t)}function G4(e){let t=e.split(Ja);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Ja)}function W4(e){return e.startsWith(Ai.URL_SCHEME)?e.slice(Ai.URL_SCHEME.length):e}var Ai=class{constructor(e){if(!M().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=eE(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{let t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),a=Ei(e);try{this.LS.setItem(this.keys.info,JSON.stringify(a)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,q1(e.weightData));let r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,initializerSignature:null!=e.initializerSignature?e.initializerSignature:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:a}}catch(e){throw rE(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${a.modelTopologyBytes}, weightSpecsBytes=${a.weightSpecsBytes}, weightDataBytes=${a.weightDataBytes}.`)}}}async load(){let e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");let t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;let a=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==a)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=a;let r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){let e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.initializerSignature&&(t.initializerSignature=e.initializerSignature),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}let s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=K1(s),t}};Ai.URL_SCHEME="localstorage://";var nE=e=>M().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ai.URL_SCHEME)?U4(e.slice(Ai.URL_SCHEME.length)):null;function U4(e){return new Ai(e)}Ce.registerSaveRouter(nE),Ce.registerLoadRouter(nE);var Zg=class{constructor(){_(M().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),_("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){let e={},t=jp+Ja,n=Ja+tE;for(let a=0;a<this.LS.length;++a){let r=this.LS.key(a);r.startsWith(t)&&r.endsWith(n)&&(e[G4(r)]=JSON.parse(this.LS.getItem(r)))}return e}async removeModel(e){let t=eE(e=W4(e));if(null==this.LS.getItem(t.info))throw new Error(`Cannot find model at path '${e}'`);let n=JSON.parse(this.LS.getItem(t.info));return rE(t),n}},Xp="://",Ar=class{constructor(){this.managers={}}static getInstance(){return null==Ar.instance&&(Ar.instance=new Ar),Ar.instance}static registerManager(e,t){_(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(Xp)&&(e=e.slice(0,e.indexOf(Xp))),_(e.length>0,(()=>"scheme must not be an empty string."));let n=Ar.getInstance();_(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){let t=Ar.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Ar.getInstance().managers)}};function Jg(e){if(-1===e.indexOf(Xp))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Ar.getSchemes().join(",")}`);return{scheme:e.split(Xp)[0],path:e.split(Xp)[1]}}async function oE(e,t,n=!1){_(e!==t,(()=>`Old path and new path are the same: '${e}'`));let a=Ce.getLoadHandlers(e);_(a.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),_(a.length<2,(()=>`Copying failed because more than one (${a.length}) load handlers for source URL ${e}.`));let r=a[0],s=Ce.getSaveHandlers(t);_(s.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),_(s.length<2,(()=>`Copying failed because more than one (${a.length}) save handlers for destination URL ${t}.`));let i=s[0],o=Jg(e).scheme,l=Jg(e).path,u=o===Jg(e).scheme,p=await r.load();n&&u&&await Ar.getManager(o).removeModel(l);let h=await i.save(p);return n&&!u&&await Ar.getManager(o).removeModel(l),h.modelArtifactsInfo}async function sE(){let e=Ar.getSchemes(),t={};for(let n of e){let e=await Ar.getManager(n).listModels();for(let a in e)t[n+Xp+a]=e[a]}return t}async function iE(e){let t=Jg(e);return Ar.getManager(t.scheme).removeModel(t.path)}async function aE(e,t){return oE(e,t,!1)}async function lE(e,t){return oE(e,t,!0)}var LS=class{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){"undefined"!=typeof window&&M().getBool("USE_SETTIMEOUTCUSTOM")?(this.functionRefs.push(e),setTimeout((()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")}),t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",(e=>{e.source===window&&e.data.name===this.messageName&&(e.stopPropagation(),(0,this.functionRefs[e.data.index])(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0))}),!0))):setTimeout(e,t)}};if(M().get("IS_BROWSER")){M().setPlatform("browser",new LS);try{Ar.registerManager(Ai.URL_SCHEME,new Zg)}catch(e){}try{Ar.registerManager(_i.URL_SCHEME,new Yg)}catch(e){}}var MS,H4={importFetch:()=>uE()},zS=class{constructor(){this.util=cE(),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=M().global.fetch?M().global.fetch(e,t):(null==MS&&(MS=H4.importFetch()),MS(e,t))}now(){let e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}};function wt(e,t="float32",n){return t=t||"float32",Pe(e),new pe(e,t,n)}function q4(e,t){let n=v(e,"x","cast");if(!aS(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");let a={x:n},r={dtype:t};return k.runKernel(co,a,r)}M().get("IS_NODE")&&!M().get("IS_BROWSER")&&M().setPlatform("node",new zS);var J=T({cast_:q4});function K4(e){let t={x:v(e,"x","clone","string_or_numeric")};return k.runKernel(mo,t)}var an=T({clone_:K4});function Qg(e,t=!1){console.log(e.toString(t))}kS();var j4={buffer:wt,cast:J,clone:an,print:Qg};z1(j4);var $r={};Wt($r,{browserFiles:()=>mE,browserHTTPRequest:()=>hE,concatenateArrayBuffers:()=>qp,copyModel:()=>aE,decodeWeights:()=>Kg,encodeWeights:()=>H1,fromMemory:()=>gE,fromMemorySync:()=>HS,getLoadHandlers:()=>Z1,getModelArtifactsForJSON:()=>Kp,getModelArtifactsForJSONSync:()=>RS,getModelArtifactsInfoForJSON:()=>Ei,getSaveHandlers:()=>Y1,getWeightSpecs:()=>Xg,http:()=>ex,isHTTPScheme:()=>tx,listModels:()=>sE,loadWeights:()=>fE,moveModel:()=>lE,registerLoadRouter:()=>X1,registerSaveRouter:()=>j1,removeModel:()=>iE,weightsLoaderFactory:()=>WS,withSaveHandler:()=>xE,withSaveHandlerSync:()=>yE});var X4="model",Y4=".json",Z4=".weights.bin";function pE(e){return new Promise((e=>setTimeout(e))).then(e)}var Qa=class{constructor(e){if(!M().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Qa.URL_SCHEME)&&(e=e.slice(Qa.URL_SCHEME.length)),(null==e||0===e.length)&&(e=X4),this.modelJsonFileName=e+Y4,this.weightDataFileName=e+Z4}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");let t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{let n=jg(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),a=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=a,await pE((()=>r.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){let e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await pE((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Ei(e)}}}};Qa.URL_SCHEME="downloads://";var BS=class{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{let n=new FileReader;n.onload=n=>{let a=JSON.parse(n.target.result),r=a.modelTopology;if(null==r)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==a.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:r});let s=Kp(a,(e=>this.loadWeights(e)));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){let t=[],n=[];for(let a of e)t.push(...a.weights),n.push(...a.paths);let a=this.checkManifestAndWeightFiles(e),r=n.map((e=>this.loadWeightsFile(e,a[e])));return Promise.all(r).then((e=>[t,qp(e)]))}loadWeightsFile(e,t){return new Promise(((n,a)=>{let r=new FileReader;r.onload=e=>{let t=e.target.result;n(t)},r.onerror=t=>a(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){let t=[],n=this.weightsFiles.map((e=>DS(e.name))),a={};for(let r of e)r.paths.forEach((e=>{let r=DS(e);if(-1!==t.indexOf(r))throw new Error(`Duplicate file basename found in weights manifest: '${r}'`);if(t.push(r),-1===n.indexOf(r))throw new Error(`Weight file with basename '${r}' is not provided.`);a[e]=this.weightsFiles[n.indexOf(r)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return a}},J4=e=>M().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Qa.URL_SCHEME)?Q4(e.slice(Qa.URL_SCHEME.length)):null;function Q4(e="model"){return new Qa(e)}function mE(e){return new BS(e)}function VS(e,t,n,a){var r;_(null!=(r=e)&&Array.isArray(r)&&r.length>0,(()=>"promises must be a none empty array")),function(e,t){_(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),_(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),_(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,a=null==a?1:a);let s=0;return Promise.all(e.map((r=>(r.then((r=>{let i=n+ ++s/e.length*(a-n);return t(i),r})),r))))}async function GS(e,t){null==t&&(t={});let n=null==t.fetchFunc?M().platform.fetch:t.fetchFunc,a=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(a):await VS(a,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await VS(r,t.onProgress,.5,1)}async function fE(e,t="",n,a){return WS((e=>GS(e,{requestInit:a})))(e,t,n)}function WS(e){return async(t,n="",a)=>{let r=t.map((()=>!1)),s={},i=null!=a?a.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{let l="quantization"in e?e.quantization.dtype:e.dtype,u=sh[l]*Jt(e.shape),p=()=>{r[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=a?a.forEach(((t,n)=>{t===e.name&&(p(),i[n]=!0)})):p(),o.push(e.name),n+=u}))})),!i.every((e=>e))){let e=a.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}let l=r.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{let t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));let p=await e(u),h={},d=0;return l.forEach((e=>{let n=t[e].paths.length,a=0;for(let e=0;e<n;e++)a+=p[d+e].byteLength;let r=new ArrayBuffer(a),i=new Uint8Array(r),o=0;for(let e=0;e<n;e++){let t=new Uint8Array(p[d+e]);i.set(t,o),o+=t.byteLength}s[e].forEach((e=>{let t=Kg(r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(let e in t)h[e]=t[e]})),d+=n})),h}}Ce.registerSaveRouter(J4);var tH="application/octet-stream",eH="application/json",ih=class{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(_("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=M().platform.fetch,_(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&_(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");let t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;let n=jg(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:eH}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:tH}),"model.weights.bin");let a=await this.fetch(this.path,t);if(a.ok)return{modelArtifactsInfo:Ei(e),responses:[a]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${a.status}.`)}async load(){let e,t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);try{e=await t.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}let n=e.modelTopology,a=e.weightsManifest;if(null==n&&null==a)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Kp(e,(e=>this.loadWeights(e)))}async loadWeights(e){let t=Array.isArray(this.path)?this.path[1]:this.path,[n,a]=rH(t),r=this.weightPathPrefix||n,s=Xg(e),i=[],o=[];for(let t of e)for(let e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(r+e+a);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,qp(await GS(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}};function rH(e){let t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}function tx(e){return null!=e.match(ih.URL_SCHEME_REGEX)}ih.URL_SCHEME_REGEX=/^https?:\/\//;var dE=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>tx(e))):tx(e),n)return ex(e,t)}return null};function ex(e,t){return new ih(e,t)}function hE(e,t){return ex(e,t)}Ce.registerSaveRouter(dE),Ce.registerLoadRouter(dE);var ah=class{constructor(e){this.modelArtifacts=e}load(){return this.modelArtifacts}},rx=class{constructor(e){this.saveHandler=e}save(e){return this.saveHandler(e)}},US=class{constructor(e){e.load&&(this.load=()=>Promise.resolve(e.load())),e.save&&(this.save=t=>Promise.resolve(e.save(t)))}};function gE(e,t,n,a){let r=arguments;return new US(HS(...r))}function HS(e,t,n,a){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new ah(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ah({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ah({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:a}))}function xE(e){return new rx(e)}function yE(e){return new rx(e)}var CE={};function nH(e,t,n=!1,a=!1){let r=v(e,"a","matMul"),s=v(t,"b","matMul");[r,s]=Ut(r,s);let i={a:r,b:s},o={transposeA:n,transposeB:a};return k.runKernel(qo,i,o)}Wt(CE,{confusionMatrix:()=>wE});var Lt=T({matMul_:nH});function oH(e,t,n=1,a=0,r="int32"){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);let s={indices:v(e,"indices","oneHot","int32")},i={dtype:r,depth:t,onValue:n,offValue:a};return k.runKernel(ys,s,i)}var $i=T({oneHot_:oH});function Ipt(){M().set("PROD",!0)}function vpt(){M().set("DEBUG",!0)}function Spt(){M().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function qS(e){M().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Npt(){k.disposeVariables()}function Mn(){return k}function lh(){return k.memory()}function Tpt(e){return k.profile(e)}function B(e,t){return k.tidy(e,t)}function Nt(e){oh(e).forEach((e=>e.dispose()))}function Ae(e){return k.keep(e)}function kpt(e){return k.time(e)}function sH(e){return k.setBackend(e)}function Ept(){return k.ready()}function _pt(){return k.backendName}function Apt(e){k.removeBackend(e)}function $pt(e){return k.findBackend(e)}function Dpt(e){return k.findBackendFactory(e)}function Yp(e,t,n=1){return k.registerBackend(e,t,n)}function bE(){return k.backend}function Rpt(e,t){M().setPlatform(e,t)}function iH(e){let t={input:v(e,"input","imag")};return k.runKernel(Sp,t)}B1(qS);var Jl=T({imag_:iH});function aH(e){let t={x:v(e,"x","neg")};return k.runKernel(di,t)}var Ht=T({neg_:aH});function lH(e){let t={input:v(e,"input","real")};return k.runKernel(Fp,t)}var tl=T({real_:lH});function uH(e,t,n){let a=v(e,"x","transpose");if(null==t&&(t=a.shape.map(((e,t)=>t)).reverse()),_(a.rank===t.length,(()=>`Error in transpose: rank of input ${a.rank} must match length of perm ${t}.`)),t.forEach((e=>{_(e>=0&&e<a.rank,(()=>`All entries in 'perm' must be between 0 and ${a.rank-1} but got ${t}`))})),a.rank<=1)return a.clone();let r={x:a},s={perm:t};return"complex64"===a.dtype?B((()=>{let e=tl(a),t=Jl(a);return e=k.runKernel(eo,{x:e},s),t=k.runKernel(eo,{x:t},s),n&&(t=Ht(t)),In(e,t)})):k.runKernel(eo,r,s)}var Ot=T({transpose_:uH});function cH(e,t,n){let a=v(e,"labels","confusionMatrix"),r=v(t,"predictions","confusionMatrix");_(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),_(1===a.rank,(()=>`Expected the rank of labels to be 1, but got ${a.rank}`)),_(1===r.rank,(()=>`Expected the rank of predictions to be 1, but got ${r.rank}`)),_(a.shape[0]===r.shape[0],(()=>`Mismatch in the number of examples: ${a.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`)),_(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));let s=$i(J(a,"int32"),n),i=$i(J(r,"int32"),n),o=Ot(s),l=Lt(o,i);return J(l,"int32")}var wE=T({confusionMatrix_:cH}),Wr={};function IE(e,t){let n=e.length,a=[];for(let r=0;r<n;r++){let s=n-1-r,i=e[s]||1;(t[t.length-1-r]||1)>1&&1===i&&a.unshift(s)}return a}function ge(e,t){let n=[];for(let a=0;a<t.length;a++){let r=e[e.length-a-1],s=t.length-a-1,i=t[s];(null==r||1===r&&i>1)&&n.unshift(s)}return n}function Pt(e,t){let n=[],a=Math.max(e.length,t.length);for(let r=0;r<a;r++){let a=e[e.length-r-1];null==a&&(a=1);let s=t[t.length-r-1];if(null==s&&(s=1),1===a)n.unshift(s);else if(1===s)n.unshift(a);else{if(a!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(a)}}return n}Wt(Wr,{assertAndGetBroadcastShape:()=>Pt,getBroadcastDims:()=>IE,getReductionAxes:()=>ge});var Ku,ox={};function nx(e,t,n){if(Jn(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");let a=Gr(e,n);if(3!==a.length&&1!==a.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return sn(e,t,a,n)}function vE(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,a=!1,r=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)a=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)r=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(null!=Qd(Zd,k.backendName)){let n={pixels:e},a={numChannels:t};return k.runKernel(Zd,n,a)}let l,u,[p,h]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];if(i)l=e.getContext("2d").getImageData(0,0,p,h).data;else if(a||n)l=e.data;else if(s||r||o){if(null==Ku)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Ku=new OffscreenCanvas(1,1).getContext("2d")}else Ku=document.createElement("canvas").getContext("2d",{willReadFrequently:!0});Ku.canvas.width=p,Ku.canvas.height=h,Ku.drawImage(e,0,0,p,h),l=Ku.getImageData(0,0,p,h).data}if(4===t)u=new Int32Array(l);else{let e=p*h;u=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)u[n*t+e]=l[4*n+e]}return nx(u,[h,p,t],"int32")}function pH(e){return null!=e&&e.data instanceof Uint8Array}function mH(){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")}function fH(e){return null!=e&&0!==e.width&&0!==e.height}function dH(e){return mH()&&!(e instanceof ImageBitmap)&&fH(e)&&!pH(e)}async function hH(e,t=3){let n=null;if(M().getBool("WRAP_TO_IMAGEBITMAP")&&dH(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return vE(n,t)}async function gH(e,t){let n=v(e,"img","toPixels");if(!(e instanceof Ft)){let e=n;n=J(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);let[a,r]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);let i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(r*a*4);for(let e=0;e<a*r;++e){let t=[0,0,0,255];for(let a=0;a<s;a++){let r=i[e*s+a];if("float32"===n.dtype){if(r<0||r>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===n.dtype&&(r<0||r>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===s?(t[0]=r*o,t[1]=r*o,t[2]=r*o):t[a]=r*o}let a=4*e;l[a+0]=Math.round(t[0]),l[a+1]=Math.round(t[1]),l[a+2]=Math.round(t[2]),l[a+3]=Math.round(t[3])}if(null!=t){t.width=r,t.height=a;let e=t.getContext("2d"),n=new ImageData(l,r,a);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}Wt(ox,{fromPixels:()=>xH,fromPixelsAsync:()=>hH,toPixels:()=>gH});var xH=T({fromPixels_:vE}),sx={};function SE(e,t){let n=e.shape.length,a=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(a<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${a}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[a-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[a-1]} vs. ${n}`);if(0===Jt(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);let r=t.shape,s=r[r.length-1],i=1;for(let e=0;e<r.length-1;++e)i*=r[e];let o=e.shape,l=r.slice();l.pop();let u=1;for(let e=s;e<n;++e)u*=o[e],l.push(o[e]);let p=[...li(e.shape).map((e=>e/u)),1].slice(0,s);return[l,i,u,p]}Wt(sx,{prepareAndValidate:()=>SE});var uh={};function KS(e,t,n){let a=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${a}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(s+` update.rank < ${r}. `);if(e.length<a+(n.rank-r))throw new Error(s+` Output shape length < ${a+(n.rank-r)}`);if(n.rank!==r+e.length-a)throw new Error(s+" update.rank != "+(r+e.length-a));for(let e=0;e<r;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-r;++t)if(n.shape[t+r]!==e[t+a])throw new Error(s+` updates.shape[${t+r}] (${n.shape[t+r]}) != shape[${t+r}] (${e[t+r]})`)}function ix(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}KS(n,t,e)}function NE(e,t,n){let a=t.shape.length,r=a>1?t.shape[a-1]:1,s=n.length,i=1;for(let e=r;e<s;++e)i*=n[e];let o=r<1?1:r;return{sliceRank:r,numUpdates:Jt(t.shape)/o,sliceSize:i,strides:[...li(n.slice(0,r)),1],outputSize:Jt(n)}}Wt(uh,{calculateShapes:()=>NE,validateInput:()=>ix,validateUpdateShape:()=>KS});var Me={};Wt(Me,{assertParamsValid:()=>bH,computeFlatOffset:()=>SH,computeOutShape:()=>CH,getNormalizedAxes:()=>IH,isSliceContinous:()=>vH,maskToAxes:()=>wH,parseSliceParams:()=>XS,sliceInfo:()=>NH,startForAxis:()=>RE,startIndicesWithElidedDims:()=>AE,stopForAxis:()=>FE,stopIndicesWithElidedDims:()=>$E,stridesForAxis:()=>DE,stridesWithElidedDims:()=>kE});var jS=-2,yH=-1;function bH(e,t,n){let a=e.shape.length;_(a===t.length,(()=>`Error in slice${a}D: Length of begin ${t} must match the rank of the array (${a}).`)),_(a===n.length,(()=>`Error in slice${a}D: Length of size ${n} must match the rank of the array (${a}).`));for(let r=0;r<a;++r)_(t[r]+n[r]<=e.shape[r],(()=>`Error in slice${a}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`))}function wH(e){let t=[],n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function CH(e,t,n){let a=[];for(let r=0;r<e.length;r++)a[r]=Math.ceil((t[r]-e[r])/n[r]);return a}function kE(e,t,n,a){let r=[...e];for(let e=r.length;e<a.length;e++)r.push(1);for(let e=0;e<n;e++)0===e?r[t]=1:(r.splice(t,0,1),r.pop());return r}function EE(e,t,n){return n<=e?n:n-(t-1)}function _E(e,t){let n=[];for(let a=0;a<e;a++)n.push(t+a);return n}function IH(e,t,n,a,r,s,i,o,l){let u=e.length,p=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){let l=t[0],u=n+1;p=AE(i,l,u,a,e),h=$E(o,l,u,r,e),d=kE(s,l,u,e)}else for(let t=0;t<u;t++)p[t]=RE(i,a,s,e,t,l),h[t]=FE(o,r,s,e,t,l),d[t]=DE(s,t,l);return{begin:p,end:h,strides:d}}function AE(e,t,n,a,r){let s=[...r],i=_E(n,t);for(let r=0;r<s.length;r++)if(i.indexOf(r)>-1)s[r]=0;else{let i=EE(t,n,r),o=a[i];e&1<<i&&(o=0),s[r]=o}return s}function $E(e,t,n,a,r){let s=[...r],i=_E(n,t);for(let r=0;r<s.length;r++)if(i.indexOf(r)>-1)s[r]=Number.MAX_SAFE_INTEGER;else{let i=EE(t,n,r),o=a[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),s[r]=o}for(let e=0;e<s.length;e++){let t=r[e];s[e]<0&&(s[e]+=t),s[e]=op(0,s[e],r[e])}return s}function DE(e,t,n){let a=e[t];return(n&1<<t||null==a)&&(a=1),a}function RE(e,t,n,a,r,s){let i=t[r],o=n[r]||1;(e&1<<r||s&1<<r||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);let l=a[r];return i<0&&(i+=l),i=op(0,i,l-1),i}function FE(e,t,n,a,r,s){let i=t[r],o=n[r]||1;(e&1<<r||s&1<<r||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);let l=a[r];return i<0&&(i+=l),i=o>0?op(0,i,l):op(-1,i,l-1),i}function vH(e,t,n){let a=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){a=e;break}for(let r=a+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function SH(e,t){let n=e.length>0?e[e.length-1]:1;for(let a=0;a<e.length-1;a++)n+=e[a]*t[a];return n}function XS(e,t,n){let a,r,s=e.shape.length;return a="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),a.forEach((e=>{_(-1!==e,(()=>"slice() does not support negative begin indexing."))})),r=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,r=r.map(((t,n)=>t>=0?t:(_(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-a[n]))),[a,r]}function NH(e,t,n,a,r,s,i,o,l){let u;if(null==a?(u=new Array(t.length),u.fill(1)):u=a,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let p=!1,h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:r,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<h.dims;e++)p&&0!=(1<<e&o)&&h.numAddAxisAfterEllipsis++,1<<e&i&&(p=!0);p||(h.ellipsisMask|=1<<h.dims,h.dims++);let d={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};TH(h,d);let c=!0,f=!0,m=!0,g=[],y=[];for(let t=0;t<e.length;++t){if(0===d.strides[t])throw Error(`strides[${t}] must be non-zero`);let n=!!(d.shrinkAxisMask&1<<t),a=e[t];if(-1===a){g.push(n?1:-1);continue}let r=[d.beginMask&1<<t,d.endMask&1<<t],s=[d.strides[t]>0?0:-1,d.strides[t]>0?a:a-1];if(n&&d.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===d.strides[t];let i=!!(d.beginMask&1<<t&&d.endMask&1<<t);if(d.beginValid&&d.endValid){if(n){let e=d.begin[t]<0?a+d.begin[t]:d.begin[t];if(d.begin[t]=e,d.end[t]=d.begin[t]+1,e<0||e>=a)throw Error(`slice index ${d.begin[t]} of dimension ${t} out of bounds.`)}else d.begin[t]=TE(d.begin[t],0,d.strides[t],a,r,s),d.end[t]=TE(d.end[t],1,d.strides[t],a,r,s);let e=1===d.strides[t]&&0===d.begin[t]&&d.end[t]===a;c=c&&e,f=f&&(0===t&&1===d.strides[t]||e)}else c=c&&1===d.strides[t]&&i,f=f&&(0===t&&1===d.strides[t]||i);let o,l=!1;if(d.beginValid&&d.endValid?(o=d.end[t]-d.begin[t],l=!0):n?(o=1,l=!0):i&&a>=0&&(o=d.strides[t]<0?-a:a,l=!0),l){let e;e=0===o||o<0!=d.strides[t]<0?0:Math.trunc(o/d.strides[t])+(o%d.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<d.finalShapeGatherIndices.length;++e){let t=d.finalShapeGatherIndices[e];t>=0?y.push(g[t]):t===jS&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>d.finalShapeGatherIndices[t]!==jS)),finalShape:y,isIdentity:c,sliceDim0:f,isSimpleSlice:m,begin:d.begin,end:d.end,strides:d.strides}}function TH(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let a=0;a<e.dims;a++)if(1<<a&e.ellipsisMask){let r=Math.min(t.dims-(e.dims-a)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=a}else if(1<<a&e.newAxisMask)t.finalShapeGatherIndices.push(jS),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[a]),null!=e.end&&(t.end[n]=e.end[a]),t.strides[n]=e.strides[a],e.beginMask&1<<a&&(t.beginMask|=1<<n),e.endMask&1<<a&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<a?(t.finalShapeGatherIndices.push(yH),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(a)),t.inputShapeGatherIndicesSparse[n]=a,n++}}function TE(e,t,n,a,r,s){if(r[t])return n>0?s[t]:s[t+1&1];{let t=e<0?a+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}var Q={};Wt(Q,{Serializable:()=>ch,SerializationMap:()=>Di,registerClass:()=>vn});var ch=class{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}},Di=class{constructor(){this.classNameMap={}}static getMap(){return null==Di.instance&&(Di.instance=new Di),Di.instance}static register(e){Di.getMap().classNameMap[e.className]=[e,e.fromConfig]}};function vn(e){_(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),_("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),_(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Di.register(e)}var ME={};Wt(ME,{TEST_EPSILON_FLOAT16:()=>OE,createVideoElement:()=>RH,encodeStrings:()=>LE,expectArrayBuffersEqual:()=>DH,expectArraysClose:()=>EH,expectArraysEqual:()=>AH,expectNumbersClose:()=>PE,expectPromiseToFail:()=>_H,expectValuesInRange:()=>$H,play:()=>FH,testEpsilon:()=>ax});var kH=.001,OE=.1;function EH(e,t,n){return null==n&&(n=ax()),YS(e,t,((e,t)=>ZS(e,t,n)))}function ax(){return 32===k.backend.floatPrecision()?kH:OE}function YS(e,t,n){let a=!0;if((br(e)||br(t))&&(a=!1),br(e)&&br(t)&&(a=!0),a){let n=e.constructor.name,a=t.constructor.name;if(n!==a)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${a}`)}if(Array.isArray(e)&&Array.isArray(t)){let n=Gr(e),a=Gr(t);if(!On(n,a))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${a}]`)}let r=br(e)?e:Vo(e),s=br(t)?t:Vo(t);if(r.length!==s.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${s.length}.\nActual:   ${r}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){let t=r[e],a=s[e];if(!n(t,a))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${a}.\nActual:   ${r}.\nExpected: ${s}.`)}"undefined"!=typeof expect&&expect().nothing()}function _H(e,t){e().then((()=>t.fail()),(()=>t())),"undefined"!=typeof expect&&expect().nothing()}function AH(e,t){let n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return Go(e)||Go(e[0])||Go(t)||Go(t[0])?YS(e,n,((e,t)=>e==t)):YS(e,t,((e,t)=>ZS(e,t,0)))}function PE(e,t,n){if(null==n&&(n=ax()),!ZS(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`);"undefined"!=typeof expect&&expect().nothing()}function ZS(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function $H(e,t,n){for(let a=0;a<e.length;a++)if(e[a]<t||e[a]>n)throw new Error(`Value out of range:${e[a]} low: ${t}, high: ${n}`)}function DH(e,t){let n=new Float32Array(e),a=new Float32Array(t);if(n.length!==a.length)throw new Error(`Expected ArrayBuffer to be of length ${a.length}, but it was ${n.length}`);for(let e=0;e<a.length;e++)if(n[e]!==a[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${a[e]} but got ${n[e]} instead`)}function LE(e){for(let t=0;t<e.length;t++){let n=e[t];Array.isArray(n)?LE(n):e[t]=jl(n)}return e}function RH(e){let t=document.createElement("video");return"playsInline"in t&&(t.playsInline=!0),t.muted=!0,t.loop=!0,t.style.position="fixed",t.style.left="0px",t.style.top="0px",t.preload="auto",t.appendChild(e),new Promise((e=>{t.addEventListener("loadeddata",(n=>e(t))),t.load()}))}async function FH(e){await e.play(),"requestVideoFrameCallback"in e&&await new Promise((t=>{e.requestVideoFrameCallback(t)}))}var zE="4.1.0";function OH(e,t){let n=v(e,"a","add"),a=v(t,"b","add");[n,a]=Ut(n,a);let r={a:n,b:a};return k.runKernel(Qn,r)}var X=T({add_:OH});function PH(e,t){let n=v(e,"a","floorDiv"),a=v(t,"b","floorDiv");[n,a]=Ut(n,a);let r={a:n,b:a};return k.runKernel(os,r)}var Zp=T({floorDiv_:PH});function LH(e,t){let n=v(e,"a","div"),a=v(t,"b","div");if([n,a]=Ut(n,a),"int32"===n.dtype&&"int32"===a.dtype)return Zp(n,a);let r={a:n,b:a};return k.runKernel(ts,r,{})}var pt=T({div_:LH});function MH(e,t){let n=v(e,"a","mul"),a=v(t,"b","mul");[n,a]=Ut(n,a);let r={a:n,b:a};return k.runKernel(xs,r)}var D=T({mul_:MH});function zH(e){let t=v(e,"x","abs");if("complex64"===t.dtype){let e={x:t};return k.runKernel(Dl,e)}{let e={x:t};return k.runKernel(ui,e)}}var Ee=T({abs_:zH});function BH(e){let t={x:v(e,"x","acos")};return k.runKernel(ua,t)}var lx=T({acos_:BH});function VH(e){let t={x:v(e,"x","acosh")};return k.runKernel(ca,t)}var ux=T({acosh_:VH});function GH(e){_(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),_(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));let t=e.map(((e,t)=>v(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!On(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));let a=t;return k.runKernel(Wo,a)}var BE=T({addN_:GH});function WH(e,t=null,n=!1){let a={x:v(e,"x","all","bool")},r={axis:t,keepDims:n};return k.runKernel(pa,a,r)}var Jp=T({all_:WH});function UH(e,t=null,n=!1){let a={x:v(e,"x","any","bool")},r={axis:t,keepDims:n};return k.runKernel(ma,a,r)}var ju=T({any_:UH});function HH(e,t=0){let n={x:v(e,"x","argMax")},a={axis:t};return k.runKernel(Uo,n,a)}var Ri=T({argMax_:HH});function qH(e,t=0){let n={x:v(e,"x","argMin")},a={axis:t};return k.runKernel(Al,n,a)}var cx=T({argMin_:qH});function KH(e){let t={x:v(e,"x","asin")};return k.runKernel(fa,t)}var px=T({asin_:KH});function jH(e){let t={x:v(e,"x","asinh")};return k.runKernel(da,t)}var mx=T({asinh_:jH});function XH(e){let t={x:v(e,"x","atan")};return k.runKernel(ha,t)}var fx=T({atan_:XH});function YH(e,t){let n=v(e,"a","atan2"),a=v(t,"b","atan2");[n,a]=Ut(n,a);let r={a:n,b:a};return k.runKernel(xa,r)}var dx=T({atan2_:YH});function ZH(e){let t={x:v(e,"x","atanh")};return k.runKernel(ga,t)}var hx=T({atanh_:ZH});function JH(e,t,n,a,r="NHWC",s){return Yu(e,[...t,e[3]],n,s,a,null,null,GE(r))}function QS(e,t,n,a,r,s,i="channelsLast"){let o,[l,u]=gx(t);if("channelsLast"===i)o=[l,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);o=[l,u,e[1],e[1]]}return Yu(e,o,n,a,r,s,!1,i)}function QH(e,t,n,a,r,s,i="NDHWC"){let o,l,[u,p,h]=JS(t);if("NDHWC"===i)l="channelsLast",o=[u,p,h,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);l="channelsFirst",o=[u,p,h,e[1],e[1]]}return VE(e,o,n,a,r,!1,l,s)}function Yu(e,t,n,a,r,s,i=!1,o="channelsLast"){let[l,u,p,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,p,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,p]=e}let d,[c,f,,m]=t,[g,y]=gx(n),[b,x]=gx(a),v=Qp(c,b),w=Qp(f,x),{padInfo:k,outHeight:I,outWidth:S}=rq(r,u,p,g,y,v,w,s,o),N=i?m*h:m;return"channelsFirst"===o?d=[l,N,I,S]:"channelsLast"===o&&(d=[l,I,S,N]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:p,inChannels:h,outHeight:I,outWidth:S,outChannels:N,padInfo:k,strideHeight:g,strideWidth:y,filterHeight:c,filterWidth:f,effectiveFilterHeight:v,effectiveFilterWidth:w,dilationHeight:b,dilationWidth:x,inShape:e,outShape:d,filterShape:t}}function VE(e,t,n,a,r,s=!1,i="channelsLast",o){let[l,u,p,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,p,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,p,h]=e}let c,[f,m,g,,y]=t,[b,x,v]=JS(n),[w,k,I]=JS(a),S=Qp(f,w),N=Qp(m,k),T=Qp(g,I),{padInfo:C,outDepth:E,outHeight:_,outWidth:$}=nq(r,u,p,h,b,x,v,S,N,T,o),A=s?y*d:y;return"channelsFirst"===i?c=[l,A,E,_,$]:"channelsLast"===i&&(c=[l,E,_,$,A]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:p,inWidth:h,inChannels:d,outDepth:E,outHeight:_,outWidth:$,outChannels:A,padInfo:C,strideDepth:b,strideHeight:x,strideWidth:v,filterDepth:f,filterHeight:m,filterWidth:g,effectiveFilterDepth:S,effectiveFilterHeight:N,effectiveFilterWidth:T,dilationDepth:w,dilationHeight:k,dilationWidth:I,inShape:e,outShape:c,filterShape:t}}function tq(e,t,n,a,r){null==a&&(a=t0(e,t,n));let s=e[0],i=e[1];return[Xu((s-t+2*a)/n+1,r),Xu((i-t+2*a)/n+1,r)]}function eq(e,t,n,a,r,s){null==r&&(r=t0(e,t,a));let i=e[0],o=e[1],l=e[2];return[Xu((i-t+2*r)/a+1,s),Xu((o-t+2*r)/a+1,s),Xu((l-t+2*r)/a+1,s),n]}function t0(e,t,n,a=1){let r=Qp(t,a);return Math.floor((e[0]*(n-1)-n+r)/2)}function gx(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function JS(e){return"number"==typeof e?[e,e,e]:e}function Qp(e,t){return t<=1?e:e+(e-1)*(t-1)}function rq(e,t,n,a,r,s,i,o,l){let u,p,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};let r=tq([t,n],s,a,e,o);p=r[0],h=r[1]}else if("same"===e){p=Math.ceil(t/a),h=Math.ceil(n/r);let e=Math.max(0,(p-1)*a+s-t),o=Math.max(0,(h-1)*r+i-n),l=Math.floor(e/2),d=e-l,c=Math.floor(o/2);u={top:l,bottom:d,left:c,right:o-c,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((t-s+1)/a),h=Math.ceil((n-i+1)/r);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{let d="channelsLast"===l?e[1][0]:e[2][0],c="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:c,left:f,right:m,type:0===d&&0===c&&0===f&&0===m?"VALID":"EXPLICIT"},p=Xu((t-s+d+c)/a+1,o),h=Xu((n-i+f+m)/r+1,o)}}return{padInfo:u,outHeight:p,outWidth:h}}function nq(e,t,n,a,r,s,i,o,l,u,p){let h,d,c,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};let s=eq([t,n,a,1],o,1,r,e,p);d=s[0],c=s[1],f=s[2]}else if("same"===e){d=Math.ceil(t/r),c=Math.ceil(n/s),f=Math.ceil(a/i);let e=(d-1)*r+o-t,p=(c-1)*s+l-n,m=(f-1)*i+u-a,g=Math.floor(e/2),y=e-g,b=Math.floor(p/2),x=p-b,v=Math.floor(m/2);h={top:b,bottom:x,left:v,right:m-v,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/r),c=Math.ceil((n-l+1)/s),f=Math.ceil((a-u+1)/i)}return{padInfo:h,outDepth:d,outHeight:c,outWidth:f}}function Xu(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function no(e){let[t,n,a]=gx(e);return 1===t&&1===n&&1===a}function Dr(e,t){return no(e)||no(t)}function GE(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function Ie(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)_(la(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{_(la(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}function oq(e,t){let n={x:v(e,"x","reshape","string_or_numeric")},a={shape:t};return k.runKernel(xi,n,a)}var R=T({reshape_:oq});function sq(e,t,n,a,r){let s=v(e,"x","avgPool","float32");_(Dr(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=s,o=!1;3===s.rank&&(o=!0,i=R(s,[1,s.shape[0],s.shape[1],s.shape[2]])),_(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),Ie("avgPool",a,r);let l={x:i},u={filterSize:t,strides:n,pad:a,dimRoundingMode:r},p=k.runKernel(Ho,l,u);return p=J(p,s.dtype),o?R(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Ql=T({avgPool_:sq});function iq(e,t,n,a,r,s="NDHWC"){let i=v(e,"x","avgPool3d","float32"),o=i,l=!1;4===i.rank&&(l=!0,o=R(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),_(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),_("NDHWC"===s,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),Ie("avgPool3d",a,r);let u={x:o},p={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s},h=k.runKernel($l,u,p);return h=J(h,o.dtype),l?R(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var xx=T({avgPool3d_:iq});function aq(e,t=0){_(e.length>=1,(()=>"Pass at least one tensor to concat"));let n=Za(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return an(n[0]);let a=n,r={axis:t};return k.runKernel(pi,a,r)}var oe=T({concat_:aq});function lq(e){let t={x:v(e,"x","sigmoid","float32")};return k.runKernel(Ds,t)}var Jr=T({sigmoid_:lq});function uq(e,t,n){let a=v(e,"x","slice","string_or_numeric");if(0===a.rank)throw new Error("Slicing scalar is not possible");let r={x:a},s={begin:t,size:n};return k.runKernel(bi,r,s)}var Rt=T({slice_:uq});function cq(e){let t={x:v(e,"x","tanh","float32")};return k.runKernel(zs,t)}var Fi=T({tanh_:cq});function pq(e,t,n,a,r,s){let i=v(e,"forgetBias","basicLSTMCell"),o=v(t,"lstmKernel","basicLSTMCell"),l=v(n,"lstmBias","basicLSTMCell"),u=v(a,"data","basicLSTMCell"),p=v(r,"c","basicLSTMCell"),h=v(s,"h","basicLSTMCell"),d=oe([u,h],1),c=Lt(d,o),f=X(c,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=Rt(f,[0,0],y),x=Rt(f,[0,g],y),w=Rt(f,[0,2*g],y),k=Rt(f,[0,3*g],y),I=X(D(Jr(b),Fi(x)),D(p,Jr(X(i,w))));return[I,D(Fi(I),Jr(k))]}var WE=T({basicLSTMCell_:pq});function mq(e,t,n){let a=v(e,"x","batchToSpaceND"),r=t.reduce(((e,t)=>e*t));_(a.rank>=1+t.length,(()=>`input rank is ${a.rank} but should be > than blockShape.length ${t.length}`)),_(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),_(a.shape[0]%r==0,(()=>`input tensor batch is ${a.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`));let s={x:a},i={blockShape:t,crops:n};return k.runKernel(ci,s,i)}var tu=T({batchToSpaceND_:mq});function UE(e){let t;return t=0===e.rank||1===e.rank?R(e,[1,1,1,e.size]):2===e.rank?R(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?R(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}function fq(e,t,n,a,r,s){null==s&&(s=.001);let i,o,l=v(e,"x","batchNorm"),u=v(t,"mean","batchNorm"),p=v(n,"variance","batchNorm");null!=r&&(i=v(r,"scale","batchNorm")),null!=a&&(o=v(a,"offset","batchNorm")),_(u.rank===p.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),_(null==o||u.rank===o.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),_(null==i||u.rank===i.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let h={x:UE(l),scale:i,offset:o,mean:u,variance:p},d={varianceEpsilon:s},c=k.runKernel(ss,h,d);return R(c,l.shape)}var Oi=T({batchNorm_:fq});function dq(e,t,n,a,r,s){let i,o,l=v(e,"x","batchNorm"),u=v(t,"mean","batchNorm"),p=v(n,"variance","batchNorm");return null!=r&&(i=v(r,"scale","batchNorm")),null!=a&&(o=v(a,"offset","batchNorm")),_(2===l.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${l.rank}.`)),_(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${u.rank}.`)),_(2===p.rank||1===p.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${p.rank}.`)),null!=i&&_(2===i.rank||1===i.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${i.rank}.`)),null!=o&&_(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${o.rank}.`)),Oi(l,u,p,o,i,s)}var yx=T({batchNorm2d_:dq});function hq(e,t,n,a,r,s){let i,o,l=v(e,"x","batchNorm"),u=v(t,"mean","batchNorm"),p=v(n,"variance","batchNorm");return null!=r&&(i=v(r,"scale","batchNorm")),null!=a&&(o=v(a,"offset","batchNorm")),_(3===l.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${l.rank}.`)),_(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${u.rank}.`)),_(3===p.rank||1===p.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${p.rank}.`)),null!=i&&_(3===i.rank||1===i.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${i.rank}.`)),null!=o&&_(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${o.rank}.`)),Oi(l,u,p,o,i,s)}var bx=T({batchNorm3d_:hq});function gq(e,t,n,a,r,s){let i,o,l=v(e,"x","batchNorm"),u=v(t,"mean","batchNorm"),p=v(n,"variance","batchNorm");return null!=r&&(i=v(r,"scale","batchNorm")),null!=a&&(o=v(a,"offset","batchNorm")),_(4===l.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${l.rank}.`)),_(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${u.rank}.`)),_(4===p.rank||1===p.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${p.rank}.`)),null!=i&&_(4===i.rank||1===i.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${i.rank}.`)),null!=o&&_(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${o.rank}.`)),Oi(l,u,p,o,i,s)}var wx=T({batchNorm4d_:gq});function xq(e,t,n){let a=v(e,"x","bincount"),r=v(t,"weights","bincount");_("int32"===a.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${a.dtype}`)),_(n>=0,(()=>`size must be non-negative, but got ${n}.`)),_(r.size===a.size||0===r.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${a.shape}, weights shape: ${r.shape}.`));let s={x:a,weights:r},i={size:n};return k.runKernel(cp,s,i)}var Cx=T({bincount_:xq});function yq(e,t){let n=v(e,"s0","broadcastArgs","int32"),a=v(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==a.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${a.rank}`);let r={s0:n,s1:a};return k.runKernel(pp,r)}var HE=T({broadcastArgs_:yq});function bq(e,t){let n=v(e,"broadcastTo","x"),a=n.shape;if(Pe(t),t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){let e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=R(n,e)}let r=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(r[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${t}].`);if(0===s.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return an(n);let i={x:n},o={reps:s};return k.runKernel(to,i,o)}var Pi=T({broadcastTo_:bq});function wq(e){let t={x:v(e,"x","ceil","float32")};return k.runKernel(Ko,t)}var Ix=T({ceil_:wq});function bo(e,t,n){Pe(e);let a={shape:e,value:t,dtype:n};return k.runKernel(Ol,{},a)}function Cq(e,t,n){let a=v(e,"x","clipByValue");if(_(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`)),t===n)return bo(a.shape,t,a.dtype);let r={x:a},s={clipValueMin:t,clipValueMax:n};return k.runKernel(po,r,s)}var vr=T({clipByValue_:Cq});function Iq(e){return oe(e,0)}var vx=T({concat1d_:Iq});function vq(e,t){return oe(e,t)}var Sx=T({concat2d_:vq});function Sq(e,t){return oe(e,t)}var Nx=T({concat3d_:Sq});function Nq(e,t){return oe(e,t)}var Tx=T({concat4d_:Nq});function Tq(e,t,n,a,r="NHWC",s=[1,1],i){let o=v(e,"x","conv2d","float32"),l=v(t,"filter","conv2d","float32"),u=o,p=!1;3===o.rank&&(p=!0,u=R(o,[1,o.shape[0],o.shape[1],o.shape[2]])),_(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),_(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),Ie("conv2d",a,i);let h="NHWC"===r?u.shape[3]:u.shape[1];_(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),_(Dr(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));let d={x:u,filter:l},c={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i},f=k.runKernel(jo,d,c);return p?R(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Sn=T({conv2d_:Tq});function kq(e,t,n,a,r="NWC",s=1,i){let o=v(e,"x","conv1d"),l=v(t,"filter","conv1d"),u=o,p=!1;2===o.rank&&(p=!0,u=R(o,[1,o.shape[0],o.shape[1]])),_(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),_(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),Ie("conv1d",a,i),_(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),_(Dr(n,s),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`)),_("NWC"===r,(()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`));let h=R(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=R(u,[u.shape[0],1,u.shape[1],u.shape[2]]),c=Sn(d,h,[1,n],a,"NHWC",[1,s],i);return R(c,p?[c.shape[2],c.shape[3]]:[c.shape[0],c.shape[2],c.shape[3]])}var tm=T({conv1d_:kq});function Eq(e,t,n,a,r,s="NHWC",i){_(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=R(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),_(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),_(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),_(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));let p="NHWC"===s?o[3]:o[1],h="NHWC"===s?l.shape[3]:l.shape[1];_(p===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${p}) must match input depth for filter ${n.shape[2]}.`)),_(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),Ie("conv2dDerInput",r,i);let d={dy:l,filter:n},c={strides:a,pad:r,dataFormat:s,dimRoundingMode:i,inputShape:o},f=k.runKernel(Xo,d,c);return u?R(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var em=T({conv2DBackpropInput_:Eq});function _q(e,t,n,a,r,s){let i=v(e,"x","conv2dTranspose"),o=v(t,"filter","conv2dTranspose");return em(n,i,o,a,r,"NHWC",s)}var rm=T({conv2dTranspose_:_q});function Aq(e,t,n,a,r="NDHWC",s=[1,1,1]){let i=v(e,"x","conv3d"),o=v(t,"filter","conv3d"),l=i,u=!1;4===i.rank&&(u=!0,l=R(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),_(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),_(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),_(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),_(Dr(n,s),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),_("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`));let p={x:l,filter:o},h={strides:n,pad:a,dataFormat:r,dilations:s},d=k.runKernel(Rl,p,h);return u?R(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var kx=T({conv3d_:Aq});function $q(e,t,n,a,r){_(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=R(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);let l=s[4],u=i.shape[4];_(5===s.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`)),_(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),_(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),_(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),_(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));let p={dy:i,filter:n},h={pad:r,strides:a,inputShape:s},d=k.runKernel(hp,p,h);return o?R(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}var Ex=T({conv3DBackpropInput_:$q});function Dq(e,t,n,a,r){let s=v(e,"x","conv3dTranspose"),i=v(t,"filter","conv3dTranspose");return Ex(n,s,i,a,r)}var _x=T({conv3dTranspose_:Dq});function Rq(e){let t={x:v(e,"x","cos","float32")};return k.runKernel(Yo,t)}var eu=T({cos_:Rq});function Fq(e){let t={x:v(e,"x","cosh","float32")};return k.runKernel(Zo,t)}var nm=T({cosh_:Fq});function Oq(e,t=0,n=!1,a=!1){let r={x:v(e,"x","cumprod")},s={axis:t,exclusive:n,reverse:a};return k.runKernel(ya,r,s)}var Zu=T({cumprod_:Oq});function Pq(e,t=0,n=!1,a=!1){let r={x:v(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:a};return k.runKernel(Jo,r,s)}var om=T({cumsum_:Pq});function Lq(e,t,n,a=!1){let r=v(e,"x","denseBincount"),s=v(t,"weights","denseBincount");_("int32"===r.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`)),_(r.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`)),_(n>=0,(()=>`size must be non-negative, but got ${n}.`)),_(s.size===r.size||0===s.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${s.shape}.`));let i={x:r,weights:s},o={size:n,binaryOutput:a};return k.runKernel(gp,i,o)}var ph=T({denseBincount_:Lq});function Mq(e,t,n="NHWC"){let a=v(e,"x","depthToSpace","float32"),r="NHWC"===n?a.shape[1]:a.shape[2],s="NHWC"===n?a.shape[2]:a.shape[3],i="NHWC"===n?a.shape[3]:a.shape[1];_(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),_(r*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${t}  for depthToSpace with input shape\n    ${a.shape}`)),_(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${a.shape}`)),_(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${a.shape}`));let o={x:a},l={blockSize:t,dataFormat:n};return k.runKernel(wa,o,l)}var Ax=T({depthToSpace_:Mq});function zq(e,t,n,a,r="NHWC",s=[1,1],i){let o=v(e,"x","depthwiseConv2d","float32"),l=v(t,"filter","depthwiseConv2d","float32"),u=o,p=!1;3===o.rank&&(p=!0,u=R(o,[1,o.shape[0],o.shape[1],o.shape[2]])),_(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),_(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`));let h="NHWC"===r?u.shape[3]:u.shape[1];_(h===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${h}) must match the inChannels dimension in filter ${l.shape[2]}.`)),Ie("depthwiseConv2d",a,i);let d={x:u,filter:l},c={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i},f=k.runKernel(Qo,d,c);return p?R(f,[f.shape[1],f.shape[2],f.shape[3]]):f}var Li=T({depthwiseConv2d_:zq});function Bq(e){let t={x:v(e,"x","diag")};return k.runKernel(bp,t)}var qE=T({diag_:Bq});function Vq(e,t,n,a,r=[1,1],s="NHWC"){let i=v(e,"x","dilation2d"),o=v(t,"filter","dilation2d");_(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),_(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),_("NHWC"===s,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`));let l=i,u=!1;3===i.rank&&(l=R(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);let p={x:l,filter:o},h={strides:n,pad:a,dilations:r},d=k.runKernel(Fl,p,h);return u?R(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var $x=T({dilation2d_:Vq});function Gq(e,t){let n=v(e,"a","equal","string_or_numeric"),a=v(t,"b","equal","string_or_numeric");[n,a]=Ut(n,a),Pt(n.shape,a.shape);let r={a:n,b:a};return k.runKernel(Ia,r)}var Rr=T({equal_:Gq});function Wq(e,t,n){let a=v(t,"a","where"),r=v(n,"b","where"),s=v(e,"condition","where","bool"),i=Pt(Pt(s.shape,a.shape),r.shape),o={condition:Pi(s,i),t:Pi(a,i),e:Pi(r,i)};return k.runKernel(yi,o)}var _e=T({where_:Wq});function Uq(e){let t={x:v(e,"x","zerosLike")};return k.runKernel(vi,t)}var It=T({zerosLike_:Uq});function Hq(e,t){let n=v(e,"a","div"),a=v(t,"b","div");[n,a]=Ut(n,a);let r=pt(n,a),s=It(r),i=Rr(a,s);return _e(i,s,r)}var Dx=T({divNoNan_:Hq});function qq(e,t){let n=v(e,"t1","dot"),a=v(t,"t2","dot");_(!(1!==n.rank&&2!==n.rank||1!==a.rank&&2!==a.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${a.rank}.`));let r=1===n.rank?n.size:n.shape[1],s=1===a.rank?a.size:a.shape[0];if(_(r===s,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${s}.`)),1===n.rank&&1===a.rank){let e=R(n,[1,-1]),t=R(a,[-1,1]),r=Lt(e,t);return R(r,[])}if(1===n.rank&&2===a.rank){let e=R(n,[1,-1]),t=R(a,[a.shape[0],a.shape[1]]),r=Lt(e,t);return R(r,[r.size])}if(2===n.rank&&1===a.rank){let e=R(a,[-1,1]),t=Lt(n,e);return R(t,[t.size])}{let e=R(a,[a.shape[0],a.shape[1]]);return Lt(n,e)}}var Rx=T({dot_:qq});function Kq(e,...t){let n=t.map(((e,t)=>v(e,`tensors${t}`,"einsum"))),a={equation:e};return k.runKernel(wp,n,a)}var KE=T({einsum_:Kq});function jq(e){let t={x:v(e,"x","elu","float32")};return k.runKernel(es,t)}var Mi=T({elu_:jq});function Xq(e){let t=v(e,"x","erf");_("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=J(t,"float32"));let n={x:t};return k.runKernel(Ca,n)}var Fx=T({erf_:Xq});function e0(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function jE(e,t,n){let a=e.length+t.length,r=[],s=0,i=0;for(let o=0;o<a;o++)-1===n.indexOf(o)?r.push(e[s++]):r.push(t[i++]);return r}function r0(e,t){let n=[],a=e.length;for(let r=0;r<a;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function wo(e,t){return jE(e,t.map((e=>1)),t)}function Yq(e,t,n){_(e0(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function n0(e,t){if(e0(e,t))return null;let n=[];for(let a=0;a<t;++a)-1===e.indexOf(a)&&n.push(a);return e.forEach((e=>n.push(e))),n}function mh(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Zq(e,t){let n=[];for(let a=t-e;a<t;++a)n.push(a);return n}function Jq(e,t=null,n=!1){let a={x:v(e,"x","max")},r={reductionIndices:t,keepDims:n};return k.runKernel(cs,a,r)}var Sr=T({max_:Jq});function Qq(e,t=null,n=!1){let a={x:v(e,"x","min")},r={axis:t,keepDims:n};return k.runKernel(ds,a,r)}var el=T({min_:Qq});function tK(e,t){let n=v(e,"base","pow"),a=v(t,"exp","pow");[n,a]=Ut(n,a);let r={a:n,b:a};return k.runKernel(ws,r)}var ln=T({pow_:tK});function mt(e,t){if((br(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&br(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return sn(e,[],[],t)}function eK(e){let t={x:v(e,"x","sqrt","float32")};return k.runKernel(Rs,t)}var ve=T({sqrt_:eK});function rK(e){let t=v(e,"x","square");return k.runKernel("Square",{x:t},{})}var Mt=T({square_:rK});function nK(e,t=null,n=!1){let a=v(e,"x","sum");"bool"===a.dtype&&(a=J(a,"int32"));let r={x:a},s={axis:t,keepDims:n};return k.runKernel(Fs,r,s)}var ft=T({sum_:nK});function oK(e,t="euclidean",n=null,a=!1){let r=XE(e=v(e,"x","norm"),t,n),s=r.shape;if(a){let t=cr(n,e.shape);s=wo(r.shape,t)}return R(r,s)}function XE(e,t,n=null){if(0===e.rank)return Ee(e);if(1!==e.rank&&null===n)return XE(R(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return ft(Ee(e),n);if(t===1/0)return Sr(Ee(e),n);if(t===-1/0)return el(Ee(e),n);if("euclidean"===t||2===t)return ve(ft(ln(Ee(e),mt(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Sr(ft(Ee(e),n[0]),n[1]-1);if(t===1/0)return Sr(ft(Ee(e),n[1]),n[0]);if(t===-1/0)return el(ft(Ee(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return ve(ft(Mt(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}var rl=T({norm_:oK});function sK(e,t=null,n=!1){return rl(e,"euclidean",t,n)}var Ox=T({euclideanNorm_:sK});function iK(e){let t={x:v(e,"x","exp")};return k.runKernel(rs,t)}var or=T({exp_:iK});function aK(e,t=0){let n=v(e,"x","expandDims","string_or_numeric");_(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));let a={input:n},r={dim:t};return k.runKernel(mi,a,r)}var sr=T({expandDims_:aK});function lK(e){let t={x:v(e,"x","expm1")};return k.runKernel(va,t)}var Px=T({expm1_:lK});function uK(e,t){let n=v(e,"x","tile","string_or_numeric");_(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));let a={x:n},r={reps:t};return k.runKernel(to,a,r)}var Fr=T({tile_:uK});function cK(e,t,n,a="float32"){null==t&&(t=e);let r=wt([e,t],a),s=e<=t?e:t;for(let e=0;e<s;++e)r.set(1,e,e);let i=R(r.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Fr(sr(i,0),[n[0],1,1]);if(2===n.length)return Fr(sr(sr(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Fr(sr(sr(sr(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}var Ju=T({eye_:cK});function pK(e){let t={x:v(e,"x","floor","float32")};return k.runKernel(ns,t)}var zi=T({floor_:pK});function mK(e,t,n=0,a=0){let r={x:v(e,"x","gather"),indices:v(t,"indices","gather","int32")},s={axis:n,batchDims:a};return k.runKernel(fi,r,s)}var Bi=T({gather_:mK});function fK(e,t){let n=v(e,"a","greater","string_or_numeric"),a=v(t,"b","greater","string_or_numeric");[n,a]=Ut(n,a),Pt(n.shape,a.shape);let r={a:n,b:a};return k.runKernel(Ta,r)}var Re=T({greater_:fK});function dK(e,t){let n=v(e,"a","greaterEqual","string_or_numeric"),a=v(t,"b","greaterEqual","string_or_numeric");[n,a]=Ut(n,a),Pt(n.shape,a.shape);let r={a:n,b:a};return k.runKernel(is,r)}var un=T({greaterEqual_:dK});function hK(e){let t={x:v(e,"x","isFinite")};return k.runKernel(ka,t)}var Lx=T({isFinite_:hK});function gK(e){let t={x:v(e,"x","isInf")};return k.runKernel(Ea,t)}var Mx=T({isInf_:gK});function xK(e){let t={x:v(e,"x","isNaN")};return k.runKernel(as,t)}var zx=T({isNaN_:xK});function yK(e,t=.2){let n={x:v(e,"x","leakyRelu")},a={alpha:t};return k.runKernel(ls,n,a)}var ru=T({leakyRelu_:yK});function bK(e,t){let n=v(e,"a","less","string_or_numeric"),a=v(t,"b","less","string_or_numeric");[n,a]=Ut(n,a),Pt(n.shape,a.shape);let r={a:n,b:a};return k.runKernel(_a,r)}var sm=T({less_:bK});function wK(e,t){let n=v(e,"a","lessEqual","string_or_numeric"),a=v(t,"b","lessEqual","string_or_numeric");[n,a]=Ut(n,a),Pt(n.shape,a.shape);let r={a:n,b:a};return k.runKernel(Aa,r)}var zn=T({lessEqual_:wK});function YE(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");let a={start:e,stop:t,num:n};return k.runKernel(Np,{},a)}function CK(e,t=5,n=1,a=1,r=.5){let s=v(e,"x","localResponseNormalization");_(4===s.rank||3===s.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`)),_(la(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=s,o=!1;3===s.rank&&(o=!0,i=R(s,[1,s.shape[0],s.shape[1],s.shape[2]]));let l={x:i},u={depthRadius:t,bias:n,alpha:a,beta:r},p=k.runKernel(Pl,l,u);return o?R(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var Bx=T({localResponseNormalization_:CK});function IK(e){let t={x:v(e,"x","log","float32")};return k.runKernel(us,t)}var Nr=T({log_:IK});function vK(e){let t={x:v(e,"x","log1p")};return k.runKernel($a,t)}var nu=T({log1p_:vK});function SK(e){return _(ai(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{let a=v(t,"x","tf.grad","string_or_numeric"),r=null!=n?v(n,"dy","tf.grad"):null;return k.tidy((()=>{let{value:t,grads:n}=k.gradients((()=>e(a)),[a],r);return null!=r&&De(t.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Gx(n),n[0]}))}}function NK(e){return _(ai(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{_(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));let a=Za(t,"args","tf.grads","string_or_numeric"),r=null!=n?v(n,"dy","tf.grads"):null;return k.tidy((()=>{let{value:t,grads:n}=k.gradients((()=>e(...a)),a,r);return null!=r&&De(t.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Gx(n),n}))}}function TK(e){return _(ai(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{_(t instanceof Ft,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),_(null==n||n instanceof Ft,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));let{grads:a,value:r}=k.gradients((()=>e(t)),[t],n);return Gx(a),{grad:a[0],value:r}}}function kK(e){return _(ai(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{_(Array.isArray(t)&&t.every((e=>e instanceof Ft)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),_(null==n||n instanceof Ft,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));let a=k.gradients((()=>e(...t)),t,n);return null!=n&&De(a.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Gx(a.grads),a}}function Vx(e,t){_(ai(e),(()=>"The f passed in variableGrads(f) must be a function")),_(null==t||Array.isArray(t)&&t.every((e=>e instanceof Ya)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));let n=null!=t;if(!n){t=[];for(let e in k.registeredVariables)t.push(k.registeredVariables[e])}let a=n?t.filter((e=>!e.trainable)):null,r=t.length;_((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`));let{value:s,grads:i}=k.gradients(e,t,null,!0);_(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),_(0===s.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`));let o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=a&&a.forEach((e=>o[e.name]=null)),{value:s,grads:o}}function cn(e){return k.customGrad(e)}function Gx(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}function EK(e){let t={x:v(e,"x","softplus")};return k.runKernel(Ua,t)}var Gs=T({softplus_:EK});function _K(e){let t=v(e,"x","logSigmoid");return cn((e=>({value:Ht(Gs(Ht(e))),gradFunc:t=>D(t,Jr(Ht(e)))})))(t)}var Wx=T({logSigmoid_:_K});function AK(e,t){let n=v(e,"a","sub"),a=v(t,"b","sub");[n,a]=Ut(n,a);let r={a:n,b:a};return k.runKernel(Ls,r)}var ct=T({sub_:AK});function $K(e,t=-1){let n=v(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return cn(((e,n)=>{let a=Sr(e,t,!0),r=ct(e,a),s=ct(J(r,"float32"),Nr(ft(or(r),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{let[a]=n,r=or(a);return ct(e,D(ft(e,t,!0),r))}}}))(n)}var im=T({logSoftmax_:$K});function DK(e,t=null,n=!1){let a=v(e,"x","logSumExp"),r=cr(t,a.shape),s=Sr(a,r,!0),i=ct(a,s),o=or(i),l=ft(o,r),u=Nr(l),p=X(R(s,u.shape),u);if(n){let e=wo(p.shape,r);return R(p,e)}return p}var am=T({logSumExp_:DK});function RK(e,t){let n=v(e,"a","logicalAnd","bool"),a=v(t,"b","logicalAnd","bool");Pt(n.shape,a.shape);let r={a:n,b:a};return k.runKernel(Da,r)}var Or=T({logicalAnd_:RK});function FK(e){let t={x:v(e,"x","logicalNot","bool")};return k.runKernel(Ra,t)}var ou=T({logicalNot_:FK});function OK(e,t){let n=v(e,"a","logicalOr","bool"),a=v(t,"b","logicalOr","bool");Pt(n.shape,a.shape);let r={a:n,b:a};return k.runKernel(Fa,r)}var lm=T({logicalOr_:OK});function PK(e,t){let n=v(e,"a","logicalXor","bool"),a=v(t,"b","logicalXor","bool");return Pt(n.shape,a.shape),Or(lm(e,t),ou(Or(e,t)))}var Ux=T({logicalXor_:PK}),Hx=2147483648;function LK(e,t,n="left"){let a=v(e,"sortedSequence","searchSorted"),r=v(t,"values","searchSorted"),s=a.shape[a.shape.length-1],i=r.shape[r.shape.length-1],o=R(a,[-1,s]),l=R(r,[-1,i]);if(o.rank<2)throw new Error("Sorted input argument must be at least 2-dimensional");if(o.shape[0]!==l.shape[0])throw new Error("Leading dimension of 'sortedSequence' and 'values' must match.");if(Jt(l.shape)>=Hx)throw new Error(`values tensor size must less than ${Hx}`);if(o.shape[1]>=Hx)throw new Error(`trailing dim_size must less than ${Hx} for int32 output type, was ${o.shape[1]}`);let u={sortedSequence:o,values:l},p={side:n};return k.runKernel(Lp,u,p)}var fh=T({searchSorted_:LK});function ZE(e,t){return fh(e,t,"left")}function MK(e,t,n,a,r){let s=v(e,"x","maxPool"),i=s,o=!1;3===s.rank&&(o=!0,i=R(s,[1,s.shape[0],s.shape[1],s.shape[2]])),_(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),_(Dr(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),Ie("maxPool",a,r);let l={x:i},u={filterSize:t,strides:n,pad:a,dimRoundingMode:r},p=k.runKernel(ms,l,u);return o?R(p,[p.shape[1],p.shape[2],p.shape[3]]):p}var su=T({maxPool_:MK});function zK(e,t=[1,1,1],n,a,r,s="NDHWC"){let i=v(e,"x","maxPool3d"),o=i,l=!1;4===i.rank&&(l=!0,o=R(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),_(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),_("NDHWC"===s,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`)),Ie("maxPool3d",a,r);let u={x:o},p={filterSize:t,strides:n,pad:a,dimRoundingMode:r,dataFormat:s},h=k.runKernel(Ll,u,p);return l?R(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}var qx=T({maxPool3d_:zK});function BK(e,t,n,a,r=!1){let s={x:v(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:a,includeBatchInIndex:r},o=k.runKernel(_p,s,i);return{result:o[0],indexes:o[1]}}var JE=T({maxPoolWithArgmax_:BK});function VK(e,t){let n=v(e,"a","maximum"),a=v(t,"b","maximum");[n,a]=Ut(n,a),"bool"===n.dtype&&(n=J(n,"int32"),a=J(a,"int32")),Pt(n.shape,a.shape);let r={a:n,b:a};return k.runKernel(ps,r)}var Nn=T({maximum_:VK});function GK(e,t=null,n=!1){let a={x:v(e,"x","mean")},r={axis:t,keepDims:n};return k.runKernel(fs,a,r)}var Se=T({mean_:GK});function Ne(e,t="float32"){if(Pe(e),"complex64"===t){let t=Ne(e,"float32"),n=Ne(e,"float32");return In(t,n)}let n=ap(Jt(e),t);return k.makeTensor(n,e,t)}function pr(e,t="float32"){if(Pe(e),"complex64"===t){let t=pr(e,"float32"),n=Ne(e,"float32");return In(t,n)}let n=Hd(Jt(e),t);return k.makeTensor(n,e,t)}function QE(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let a=v(e,"x","meshgrid",e instanceof Ft?e.dtype:"float32");if(void 0===t)return[a];let r=v(t,"y","meshgrid",t instanceof Ft?t.dtype:"float32"),s=Jt(a.shape),i=Jt(r.shape);return"xy"===n?(a=R(a,[1,-1]),r=R(r,[-1,1]),[Lt(pr([i,1],a.dtype),a),Lt(r,pr([1,s],r.dtype))]):(a=R(a,[-1,1]),r=R(r,[1,-1]),[Lt(a,pr([1,i],a.dtype)),Lt(pr([s,1],r.dtype),r)])}function WK(e,t){let n=v(e,"a","minimum"),a=v(t,"b","minimum");[n,a]=Ut(n,a),"bool"===n.dtype&&(n=J(n,"int32"),a=J(a,"int32")),Pt(n.shape,a.shape);let r={a:n,b:a};return k.runKernel(hs,r)}var Vi=T({minimum_:WK});function UK(e,t,n){_("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));let a=v(e,"x","mirrorPad");if(0===a.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");_(t.length===a.rank,(()=>`Padding doesn't match input. Must be ${a.rank}. Got ${t.length}.`));let r="reflect"===n?1:0;for(let e=0;e<a.rank;e++)_(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),_(t[e][0]>=0&&t[e][0]<=a.shape[e]-r&&t[e][1]>=0&&t[e][1]<=a.shape[e]-r,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${a.shape[e]-r} or less than 0 for input of shape ${a.shape}`));let s={paddings:t,mode:n},i={x:a};return k.runKernel(gs,i,s)}var Kx=T({mirrorPad_:UK});function HK(e,t){let n=v(e,"a","mod"),a=v(t,"b","mod");[n,a]=Ut(n,a);let r={a:n,b:a};return k.runKernel(Oa,r)}var jx=T({mod_:HK});function qK(e,t=null,n=!1){let a=cr(t,(e=v(e,"x","moments")).shape),r=Se(e,a,n),s=r.shape;n||(s=wo(r.shape,a));let i=Mt(ct(J(e,"float32"),R(r,s)));return{mean:r,variance:Se(i,a,n)}}var Qu=T({moments_:qK});function KK(e,t,n,a){let r=v(t,"data","multiRNNCell"),s=Za(n,"c","multiRNNCell"),i=Za(a,"h","multiRNNCell"),o=r,l=[];for(let t=0;t<e.length;t++){let n=e[t](o,s[t],i[t]);l.push(n[0]),l.push(n[1]),o=n[1]}let u=[],p=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),p.push(l[e+1]);return[u,p]}var t_=T({multiRNNCell_:KK});function jK(e,t,n,a=!1){let r=v(e,"logits","multinomial"),s=r.size,i=r.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();let o={logits:1===i?R(r,[1,-1]):r},l={numSamples:t,seed:n,normalized:a},u=k.runKernel(Ap,o,l);return 1===i?R(u,[u.size]):u}var e_=T({multinomial_:jK});function XK(e,t){let n=v(e,"a","notEqual","string_or_numeric"),a=v(t,"b","notEqual","string_or_numeric");[n,a]=Ut(n,a),Pt(n.shape,a.shape);let r={a:n,b:a};return k.runKernel(Pa,r)}var Ws=T({notEqual_:XK});function YK(e){let t={x:v(e,"x","onesLike")};return k.runKernel(hi,t)}var wr=T({onesLike_:YK});function ZK(e,t){let n=v(e,"v1","outerProduct"),a=v(t,"v2","outerProduct");_(1===n.rank&&1===a.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${a.rank}.`));let r=R(n,[-1,1]),s=R(a,[1,-1]);return Lt(r,s)}var r_=T({outerProduct_:ZK});function JK(e,t,n=0){let a=v(e,"x","pad");if(0===a.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");let r={paddings:t,constantValue:n},s={x:a};return k.runKernel(bs,s,r)}var pn=T({pad_:JK});function QK(e,t,n=0){return _(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),pn(e,[t],n)}var n_=T({pad1d_:QK});function tj(e,t,n=0){return _(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),pn(e,t,n)}var o_=T({pad2d_:tj});function ej(e,t,n=0){return _(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),pn(e,t,n)}var s_=T({pad3d_:ej});function rj(e,t,n=0){return _(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),pn(e,t,n)}var i_=T({pad4d_:rj});function nj(e,t,n){let a=v(e,"x","spaceToBatchND");_(a.rank>=1+t.length,(()=>`input rank ${a.rank} should be > than [blockShape] ${t.length}`)),_(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),_(a.shape.reduce(((e,a,r)=>r>0&&r<=t.length?e&&(a+n[r-1][0]+n[r-1][1])%t[r-1]==0:e),!0),(()=>`input spatial dimensions ${a.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));let r={x:a},s={blockShape:t,paddings:n};return k.runKernel(wi,r,s)}var iu=T({spaceToBatchND_:nj});function oj(e,t,n,a,r,s,i){null==r&&(r=[1,1]),null==s&&(s=1),0===a&&(a="valid");let o=v(e,"x","maxPool"),l=o,u=!1;3===o.rank&&(u=!0,l=R(o,[1,o.shape[0],o.shape[1],o.shape[2]])),_(Dr(s,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${r}'`));let p,h=QS(l.shape,t,s,r,a),d=[h.dilationHeight,h.dilationWidth];p="same"===a?ij([h.filterHeight,h.filterWidth],d):[[0,0],[0,0]];let c=1===d[0]&&1===d[1],[f,m]=sj([h.inHeight,h.inWidth],d,p),g=c?a:"valid",y=c?l:iu(l,d,f),b=("avg"===n?()=>Ql(y,t,s,g,i):()=>su(y,t,s,g,i))(),x=c?b:tu(b,d,m);return u?R(x,[x.shape[1],x.shape[2],x.shape[3]]):x}function sj(e,t,n){let a=n.map((e=>e[0])),r=n.map((e=>e[1])),s=e.concat(a,r),i=t.map(((e,t)=>(e-s[t]%e)%e)),o=r.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[a[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}function ij(e,t){let n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),a=n.map((e=>Math.floor(e/2))),r=n.map(((e,t)=>e-a[t]));return n.map(((e,t)=>[a[t],r[t]]))}var Xx=T({pool_:oj});function aj(e,t){let n={x:v(e,"x","prelu"),alpha:v(t,"alpha","prelu")};return k.runKernel(Cs,n)}var au=T({prelu_:aj});function lj(e,t=null,n=!1){let a=v(e,"x","prod");"bool"===a.dtype&&(a=J(a,"int32"));let r={x:a},s={axis:t,keepDims:n};return k.runKernel(Is,r,s)}var Yx=T({prod_:lj});function uj(e,t,n,a){let r={paramsNestedSplits:e.map(((e,t)=>v(e,`tensors${t}`,"raggedGather","int32"))),paramsDenseValues:v(t,"paramsDenseValues","raggedGather"),indices:v(n,"indices","raggedGather","int32")},s={outputRaggedRank:a},i=k.runKernel($p,r,s);return{outputNestedSplits:i.slice(0,i.length-1),outputDenseValues:i[i.length-1]}}var a_=T({raggedGather_:uj});function cj(e,t,n){let a=v(e,"starts","raggedRange"),r={starts:a,limits:v(t,"limits","raggedRange",a.dtype),deltas:v(n,"deltas","raggedRange",a.dtype)},s=k.runKernel(Dp,r);return{rtNestedSplits:s[0],rtDenseValues:s[1]}}var l_=T({raggedRange_:cj});function pj(e,t,n,a,r){let s=v(e,"shape","raggedTensorToTensor","int32"),i=v(t,"values","raggedTensorToTensor"),o={shape:s,values:i,defaultValue:v(n,"defaultValue","raggedTensorToTensor",i.dtype),rowPartitionTensors:a.map(((e,t)=>v(e,`tensors${t}`,"raggedTensorToTensor","int32")))},l={rowPartitionTypes:r};return k.runKernel(Rp,o,l)}var u_=T({raggedTensorToTensor_:pj});function mj(e,t,n){Pe(e);let a=Jt(e),r=null;if(null==n||"float32"===n)r=new Float32Array(a);else if("int32"===n)r=new Int32Array(a);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);r=new Uint8Array(a)}for(let e=0;e<a;e++)r[e]=t();return k.makeTensor(r,e,n)}var c_=T({rand_:mj}),ty=_l(dh()),ec=class{constructor(e,t,n,a,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=a,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);let s=r||Math.random();this.random=ty.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){let e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let a,r,s;do{a=2*this.random()-1,r=2*this.random()-1,s=a*a+r*r}while(s>=1||0===s);let i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*a*i,t=this.mean+this.stdDev*r*i,(!this.truncated||this.isValidTruncated(e))&&(n=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}},Jx=class{constructor(e,t,n,a){this.alpha=e,this.beta=1/t,this.dtype=n;let r=a||Math.random();this.randu=ty.alea(r.toString()),this.randn=new ec(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,a,r,s;for(;;){do{a=this.randn.nextValue(),s=1+this.c*a}while(s<=0);if(s*=s*s,e=a*a,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),r=this.randu(),r<t||Math.log(r)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}},Qx=class{constructor(e=0,t=1,n,a){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==a&&(a=Math.random()),"number"==typeof a&&(a=a.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=ty.alea(a)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}};function bj(e,t,n=1,a="float32",r){if(Pe(e),null==n&&(n=1),null==a&&(a="float32"),"float32"!==a&&"int32"!==a)throw new Error(`Unsupported data type ${a}`);let s=new Jx(t,n,a,r),i=wt(e,a);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}var k_=T({randomGamma_:bj});function wj(e,t=0,n=1,a,r){if(Pe(e),null!=a&&"bool"===a)throw new Error(`Unsupported data type ${a}`);let s=new ec(t,n,a,!1,r),i=wt(e,a);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}var rc=T({randomNormal_:wj});function Cj(e,t,n){if(null!=t&&"bool"===t)throw new Error(`Unsupported data type ${t}`);return rc(e,0,1,t,n)}var E_=T({randomStandardNormal_:Cj});function Ij(e,t=0,n=1,a="float32",r){Pe(e);let s=wt(e,a),i=new Qx(t,n,null,r);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}var Gi=T({randomUniform_:Ij});function Wi(e,t,n=1,a="float32"){if(0===n)throw new Error("Cannot have a step of zero");let r={start:e,stop:t,step:n,dtype:a};return k.runKernel(Ml,{},r)}function vj(e){let t={x:v(e,"x","reciprocal")};return k.runKernel(vs,t)}var ey=T({reciprocal_:vj});function Sj(e){let t={x:v(e,"x","relu")};return k.runKernel(Ss,t)}var Pr=T({relu_:Sj});function Nj(e){let t={x:v(e,"x","relu6")};return k.runKernel(ks,t)}var um=T({relu6_:Nj});function Tj(e,t){let n={x:v(e,"x","reverse")},a={dims:t};return k.runKernel(Es,n,a)}var mr=T({reverse_:Tj});function kj(e){let t=v(e,"x","reverse");return _(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),mr(t,0)}var __=T({reverse1d_:kj});function Ej(e,t){let n=v(e,"x","reverse");return _(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),mr(n,t)}var A_=T({reverse2d_:Ej});function _j(e,t){let n=v(e,"x","reverse");return _(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),mr(n,t)}var $_=T({reverse3d_:_j});function Aj(e,t){let n=v(e,"x","reverse");return _(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),mr(n,t)}var D_=T({reverse4d_:Aj});function $j(e){let t={x:v(e,"x","round")};return k.runKernel(_s,t)}var cm=T({round_:$j});function Dj(e){let t={x:v(e,"x","rsqrt","float32")};return k.runKernel(As,t)}var pm=T({rsqrt_:Dj});function Rj(e){let t={x:v(e,"x","selu")};return k.runKernel(Va,t)}var mm=T({selu_:Rj});function Fj(e,t,n,a,r,s=[1,1],i="NHWC"){let o=v(e,"x","separableConv2d"),l=v(t,"depthwiseFilter","separableConv2d"),u=v(n,"pointwiseFilter","separableConv2d"),p=o,h=!1;if(3===o.rank&&(h=!0,p=R(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");_(4===p.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${p.rank}.`)),_(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),_(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),_(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),_(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));let d=l.shape[2],c=l.shape[3];_(u.shape[2]===d*c,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*c}, but got ${u.shape[2]}.`));let f=Li(p,l,a,r,i,s),m=Sn(f,u,1,"valid",i);return h?R(m,[m.shape[1],m.shape[2],m.shape[3]]):m}var fm=T({separableConv2d_:Fj});async function Oj(e,t){let n=v(e,"x","setdiff1d"),a=v(t,"y","setdiff1d");_(n.dtype===a.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${a.dtype}).`)),_(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),_(1===a.rank,(()=>`y should be 1D tensor, but got y (${a.shape}).`));let r=await n.data(),s=await a.data(),i=new Set(s),o=0;for(let e=0;e<r.length;e++)i.has(r[e])||o++;let l=new pe([o],n.dtype),u=new pe([o],"int32");for(let e=0,t=0;e<r.length;e++)i.has(r[e])||(l.values[t]=r[e],u.values[t]=e,t++);return[l.toTensor(),u.toTensor()]}var R_=Oj;function Pj(e){let t={x:v(e,"x","sign")};return k.runKernel(Wa,t)}var ry=T({sign_:Pj});function Lj(e){let t={x:v(e,"x","sin","float32")};return k.runKernel($s,t)}var dm=T({sin_:Lj});function Mj(e){let t={x:v(e,"x","sinh")};return k.runKernel(Ga,t)}var hm=T({sinh_:Mj});function zj(e,t,n){let a=v(e,"x","slice1d");return _(1===a.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${a.rank} tensor`)),Rt(a,[t],[n])}var gm=T({slice1d_:zj});function Bj(e,t,n){let a=v(e,"x","slice2d");return _(2===a.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${a.rank} tensor`)),Rt(a,t,n)}var hh=T({slice2d_:Bj});function Vj(e,t,n){let a=v(e,"x","slice3d");return _(3===a.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${a.rank} tensor`)),Rt(a,t,n)}var xm=T({slice3d_:Vj});function Gj(e,t,n){let a=v(e,"x","slice4d");return _(4===a.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${a.rank} tensor`)),Rt(a,t,n)}var nc=T({slice4d_:Gj});function Wj(e,t=-1){let n=v(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);let a={logits:n},r={dim:t};return k.runKernel(Os,a,r)}var lu=T({softmax_:Wj});function Uj(e){_("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));let t={input:e};return k.runKernel(Ip,t)}var uu=T({fft_:Uj});function Hj(e){_("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));let t={input:e};return k.runKernel(vp,t)}var nl=T({ifft_:Hj});function qj(e){let t,n=e.shape[e.shape.length-1],a=e.size/n;if(n<=2){let r=R(e,[a,n]);t=nl(r)}else{let r=[a,2*(n-1)],s=R(tl(e),[a,n]),i=R(Jl(e),[a,n]),o=mr(Rt(s,[0,1],[a,n-2]),1),l=D(mr(Rt(i,[0,1],[a,n-2]),1),mt(-1)),u=oe([s,o],1),p=oe([i,l],1),h=R(In(u,p),[r[0],r[1]]);t=nl(h)}if(t=tl(t),3===e.rank&&0!==e.shape[0]){let n=t,a=e.shape[0];t=R(t,[a,t.shape[0]/a,t.shape[1]]),n.dispose()}return t}var ym=T({irfft_:qj});function Kj(e,t,n=0){let a={x:v(e,"x","split")},r={numOrSizeSplits:t,axis:n};return k.runKernel(Ci,a,r)}var fr=T({split_:Kj});function jj(e,t){_("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n,a=e.shape[e.shape.length-1],r=e.size/a;if(null!=t&&t<a){let r=e.shape.map((e=>0)),s=e.shape.map((e=>e));s[e.shape.length-1]=t,n=Rt(e,r,s),a=t}else if(null!=t&&t>a){let r=e.shape.map((e=>e));r[e.shape.length-1]=t-a,n=oe([e,Ne(r)],e.shape.length-1),a=t}else n=e;let s=It(n),i=R(In(n,s),[r,a]),o=uu(i),l=Math.floor(a/2)+1,u=tl(o),p=Jl(o),h=fr(u,[l,a-l],u.shape.length-1),d=fr(p,[l,a-l],p.shape.length-1),c=n.shape.slice();return c[n.shape.length-1]=l,R(In(h[0],d[0]),c)}var cu=T({rfft_:jj});function Xj(e,t){let n=v(e,"a","squaredDifference"),a=v(t,"b","squaredDifference");[n,a]=Ut(n,a),Pt(n.shape,a.shape);let r={a:n,b:a};return k.runKernel(Ps,r,{})}var bm=T({squaredDifference_:Xj});function Yj(e,t){let n=v(e,"x","squeeze","string_or_numeric");return R(n,nS(n.shape,t).newShape)}var Bn=T({squeeze_:Yj});function Zj(e,t=0){let n=Za(e,"tensors","stack","string_or_numeric");_(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&_(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));let a=n,r={axis:t};return k.runKernel(gi,a,r)}var qe=T({stack_:Zj});function Jj(e,t=0){let n={x:v(e,"x","step")},a={alpha:t};return k.runKernel(fo,n,a)}var Co=T({step_:Jj});function Qj(e,t,n,a,r=0,s=0,i=0,o=0,l=0){let u={x:v(e,"x","stridedSlice","string_or_numeric")},p={begin:t,end:n,strides:a,beginMask:r,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return k.runKernel(qa,u,p)}var ny=T({stridedSlice_:Qj});function t6(e){let t={x:v(e,"x","tan","float32")};return k.runKernel(Ms,t)}var oy=T({tan_:t6});function Ke(e,t){Jn(e);let n=Gr(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return sn(e,null,n,t)}function Us(e,t,n){if(Jn(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");let a=Gr(e,n);if(2!==a.length&&1!==a.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return sn(e,t,a,n)}function F_(e,t,n){if(Jn(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");let a=Gr(e,n);if(4!==a.length&&1!==a.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return sn(e,t,a,n)}function O_(e,t,n){if(Jn(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");let a=Gr(e,n);if(5!==a.length&&1!==a.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return sn(e,t,a,n)}function P_(e,t,n){if(Jn(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");let a=Gr(e,n);if(6!==a.length&&1!==a.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===a.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return sn(e,t=t||a,a,n)}function e6(e,t=1,n=!0){let a=v(e,"x","topk");if(0===a.rank)throw new Error("topk() expects the input to be of rank 1 or higher");let r=a.shape[a.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);let s={x:a},i={k:t,sorted:n},[o,l]=k.runKernel(Ka,s,i);return{values:o,indices:l}}var sy=T({topk_:e6});function r6(e,t=0,n=1,a,r){if(Pe(e),null!=a&&"bool"===a)throw new Error("Unsupported data type $ { dtype }");let s=new ec(t,n,a,!0,r),i=wt(e,a);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}var wm=T({truncatedNormal_:r6});function n6(e,t=0){let n=v(e,"x","unique","string_or_numeric");_(n.rank>0,(()=>"The input tensor must be at least 1D"));let a={x:n},r={axis:t},[s,i]=k.runKernel(zp,a,r);return{values:s,indices:i}}var iy=T({unique_:n6});function o6(e,t,n){let a=v(e,"x","unsortedSegmentSum"),r=v(t,"segmentIds","unsortedSegmentSum","int32");_(la(n),(()=>"numSegments must be of dtype int"));let s={x:a,segmentIds:r},i={numSegments:n};return k.runKernel(ql,s,i)}var Cm=T({unsortedSegmentSum_:o6});function s6(e,t=0){let n=v(e,"x","unstack","string_or_numeric");_(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));let a={value:n},r={axis:t};return k.runKernel(Ii,a,r)}var dr=T({unstack_:s6});function L_(e,t){return fh(e,t,"right")}function ay(e,t=!0,n,a){return k.makeVariable(e,t,n,a)}function ly(e,t){let n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);let a=wt(e,"int32"),r=wt([n.length,e.length],"int32");for(let t=0;t<n.length;t++){let s=a.indexToLoc(n[t]),i=t*e.length;r.values.set(s,i)}return r.toTensor()}async function i6(e){let t=v(e,"condition","whereAsync","bool"),n=await t.data(),a=ly(t.shape,n);return e!==t&&t.dispose(),a}var uy=i6;async function a6(e,t,n){let a=v(e,"tensor","boolMask"),r=v(t,"mask","boolMask","bool"),s=null==n?0:n,i=r.rank,o=a.shape;_(i>0,(()=>"mask cannot be scalar")),De(o.slice(s,s+i),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=s;e<s+i;e++)l*=o[e];let u=o.slice(0,s).concat([l],o.slice(s+i)),p=R(a,u),h=R(r,[-1]),d=await uy(h),c=Bn(d,[1]),f=Bi(p,c,s);return e!==a&&a.dispose(),t!==r&&r.dispose(),c.dispose(),p.dispose(),h.dispose(),d.dispose(),f}var l6=a6;function u6(e,t,n,a,r=!0){let s=v(e,"v","movingAverage"),i=v(t,"x","movingAverage"),o=v(n,"decay","movingAverage");NS(s,i),_(On(s.shape,i.shape),(()=>"Shape mismatch in v and x"));let l=mt(1),u=ct(l,o),p=D(ct(i,s),u);if(r){_(null!=a,(()=>"When using zeroDebias: true, step is required."));let e=v(a,"step","movingAverage");p=pt(p,ct(l,ln(o,e)))}return X(s,p)}var c6=T({movingAverage_:u6});function p6(e,t,n){Pe(n);let a=v(e,"indices","scatterND","int32"),r=v(t,"updates","scatterND");ix(r,a,n);let s={indices:a,updates:r},i={shape:n};return k.runKernel(Ba,s,i)}var m6=T({scatterND_:p6});function M_(e,t,n,a){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);let r=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);let i=t.size;if(0!==t.rank&&(1!==t.rank||i!==r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==a.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}function d6(e,t,n,a=0){Pe(n);let r=v(e,"sparseIndices","sparseToDense","int32"),s=v(t,"sparseValues","sparseToDense","string_or_numeric"),i=v(a,"defaultValue","sparseToDense",s.dtype);M_(r,s,n,i);let o={sparseIndices:r,sparseValues:s,defaultValue:i},l={outputShape:n};return k.runKernel(Mp,o,l)}var h6=T({sparseToDense_:d6});function g6(e,t){let n=v(t,"indices","gatherND","int32"),a={params:v(e,"x","gatherND","string_or_numeric"),indices:n};return k.runKernel(Na,a)}var x6=T({gatherND_:g6});function z_(e,t){if(null==t)return e.shape.slice();if(On(e.shape,t))return t;if(e.shape.length===t.length){let n=[];for(let a=0;a<e.shape.length;a++)null==t[a]&&null!=e.shape[a]?n.push(e.shape[a]):n.push(t[a]);return n}return t}function y6(e,t,n,a){let r=v(e,"x","dropout");if(_("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),_(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Ft?r.clone():r;let s=z_(r,n),i=1-t,o=pt(zi(X(Gi(s,0,1,"float32",a),i)),i);return D(r,o)}var p0=T({dropout_:y6});function m0(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function gh(e,t,n){let a=1-e%2,r=new Float32Array(e);for(let s=0;s<e;++s){let i=2*Math.PI*s/(e+a-1);r[s]=t-n*Math.cos(i)}return Ke(r,"float32")}async function b6(e,t,n=1){let a=v(e,"predictions","inTopK"),r=v(t,"targets","inTopK");_(a.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${a.rank}`)),_(a.rank-1===r.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${a.rank} and targets rank ${r.rank}`)),De(a.shape.slice(0,a.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");let s=a.shape[a.shape.length-1];_(n>0&&n<=s,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`));let i=await a.data(),o=await r.data(),[l,u]=[i.length/s,s],p=oS("bool",l);for(let e=0;e<l;e++){let t=e*u,a=i.subarray(t,t+u),r=[];for(let e=0;e<a.length;e++)r.push({value:a[e],index:e});r.sort(((e,t)=>t.value-e.value)),p[e]=0;for(let t=0;t<n;t++)if(r[t].index===o[e]){p[e]=1;break}}return e!==a&&a.dispose(),t!==r&&r.dispose(),nr(p,r.shape,"bool")}var w6=b6,pu={};function C6(e,t,n,a,r,s="NHWC",i){let o=e;3===e.rank&&(o=R(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=R(t,[1,t.shape[0],t.shape[1],t.shape[2]])),_(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),_(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),_(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));let u="NHWC"===s?o.shape[3]:o.shape[1],p="NHWC"===s?l.shape[3]:l.shape[1];_(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),_(p===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${p}) must match output depth for filter (${n[3]}).`)),Ie("conv2dDerFilter",r,i);let h={x:o,dy:l},d={strides:a,pad:r,dataFormat:s,dimRoundingMode:i,filterShape:n};return k.runKernel(fp,h,d)}Wt(pu,{conv2d:()=>B_,depthwiseConv2d:()=>V_,matMul:()=>G_});var Im=T({conv2DBackpropFilter_:C6});function oc(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return D(e,Co(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function sc(e,t){let n=t,a=ge(e.shape,t.shape);return a.length>0&&(n=ft(n,a)),R(n,e.shape)}function ic(e,t,n,a){if("linear"===t)return e;if("relu"===t)return Pr(e);if("elu"===t)return Mi(e);if("relu6"===t)return um(e);if("prelu"===t)return au(e,n);if("leakyrelu"===t)return ru(e,a);if("sigmoid"===t)return Jr(e);throw new Error(`Unknown fused activation ${t}.`)}var ac=(e,t)=>!(e>0)||"linear"===t;function I6({x:e,filter:t,strides:n,pad:a,dataFormat:r="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:p}){if(l=l||"linear",!1===ac(k.state.gradientDepth,l)){_("NHWC"===r,(()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`));let h=Sn(e,t,n,a,r,s,i);return null!=o&&(h=X(h,o)),ic(h,l,u,p)}let h=v(e,"x","conv2d","float32"),d=v(t,"filter","conv2d","float32"),c=h,f=!1;3===h.rank&&(f=!0,c=R(h,[1,h.shape[0],h.shape[1],h.shape[2]])),_(4===c.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${c.rank}.`)),_(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),Ie("fused conv2d",a,i);let m="NHWC"===r?c.shape[3]:c.shape[1];_(d.shape[2]===m,(()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${d.shape[2]}.`)),_(Dr(n,s),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`));let g,y,b=Yu(c.shape,d.shape,n,s,a,i);if(null!=o&&(g=v(o,"bias","fused conv2d"),[g]=Ut(g,h),"NHWC"===r?Pt(b.outShape,g.shape):(_(g.shape.length<=1,(()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${g.shape.length}.`)),_(0===g.shape.length||g.shape[0]===b.outChannels||1===g.shape[0],(()=>`Error in fused conv2d: bias shape (${g.shape}) is not compatible with the number of output channels (${b.outChannels})`)))),null!=u){let e=u.shape;if(_(e.length<=1||3===e.length,(()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${e.length}.`)),1===e.length)_(1===e[0]||e[0]===b.outChannels,(()=>`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the number of output channels (${b.outChannels}).`));else if(3===e.length)try{Pt(e,b.outShape)}catch(t){let n=`Error in fused conv2d: PReLU activation weights (${e}) is not compatible with the output shape of the conv2d (${b.outShape}).`;throw Error(n)}y=v(u,"prelu weights","fused conv2d")}let x=(e,t)=>{_("NHWC"===r,(()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`));let[i,o,u,p]=t,h=oc(e,u,l);_(no(s),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));let d=[em(o.shape,h,i,n,a),Im(o,h,i.shape,n,a)];if(null!=p){let e=sc(p,h);d.push(e)}return d},w={x:c,filter:d,bias:g,preluActivationWeights:y},I={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:p};return null==o?cn(((e,t,n)=>{let a=k.runKernel(Ni,w,I);return n([t,e,a]),f&&(a=R(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:x}}))(c,d):cn(((e,t,n,a)=>{let r=k.runKernel(Ni,w,I);return a([t,e,r,n]),f&&(r=R(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:x}}))(c,d,g)}var B_=T({fusedConv2d_:I6});function v6(e,t,n,a,r,s=[1,1],i){let o=e;3===e.rank&&(o=R(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=R(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={x:o,dy:l},p={strides:a,pad:r,dimRoundingMode:i,dilations:s,filterShape:n};return k.runKernel(xp,u,p)}var cy=T({depthwiseConv2dNativeBackpropFilter_:v6});function S6(e,t,n,a,r,s=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=R(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let u={dy:o,filter:n},p={strides:a,pad:r,dimRoundingMode:i,dilations:s,inputShape:e},h=k.runKernel(yp,u,p);return l?R(h,[h.shape[1],h.shape[2],h.shape[3]]):h}var py=T({depthwiseConv2dNativeBackpropInput_:S6});function N6({x:e,filter:t,strides:n,pad:a,dataFormat:r="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:p}){if(!1===ac(k.state.gradientDepth,l)){let h=Li(e,t,n,a,r,s,i);return null!=o&&(h=X(h,o)),ic(h,l,u,p)}let h=v(e,"x","depthwiseConv2d","float32"),d=v(t,"filter","depthwiseConv2d","float32"),c=h,f=!1;3===h.rank&&(f=!0,c=R(h,[1,h.shape[0],h.shape[1],h.shape[2]])),_(4===c.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${c.rank}.`)),_(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),_(c.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==s&&(s=[1,1]),_(Dr(n,s),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),Ie("fused depthwiseConv2d",a,i);let m,g,y=Yu(c.shape,d.shape,n,s,a,i,!0);null!=o&&(m=v(o,"bias","fused conv2d"),[m]=Ut(m,h),Pt(y.outShape,m.shape)),null!=u&&(g=v(u,"prelu weights","fused depthwiseConv2d"));let b=(e,t)=>{_(no(s),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`));let[r,o,u,p]=t,h=oc(e,u,l),d=py(o.shape,h,r,n,a,s,i),c=cy(o,h,r.shape,n,a,s,i);return null!=p?[d,c,sc(m,h)]:[d,c]},x={x:c,filter:d,bias:m,preluActivationWeights:g},w={strides:n,pad:a,dataFormat:r,dilations:s,dimRoundingMode:i,activation:l,leakyreluAlpha:p};return null==o?cn(((e,t,n)=>{let a=k.runKernel(Ti,x,w);return n([t,e,a]),f&&(a=R(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}}))(c,d):cn(((e,t,n,a)=>{let r=k.runKernel(Ti,x,w);return a([t,e,r,n]),f&&(r=R(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}))(c,d,m)}var V_=T({fusedDepthwiseConv2d_:N6});function T6({a:e,b:t,transposeA:n=!1,transposeB:a=!1,bias:r,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o=.2}){if(!1===ac(k.state.gradientDepth,s)){let l=Lt(e,t,n,a);return null!=r&&(l=X(l,r)),ic(l,s,i,o)}let l=v(e,"a","fused matMul"),u=v(t,"b","fused matMul");[l,u]=Ut(l,u);let p=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=a?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],c=a?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=Jt(f),y=Jt(m);_(p===h,(()=>`Error in fused matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${a} must match.`));let b,x,w=Pt(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([d,c]),I=R(l,n?[g,p,d]:[g,d,p]),S=R(u,a?[y,c,h]:[y,h,c]);null!=r&&(b=v(r,"bias","fused matMul"),[b]=Ut(b,l),Pt(w,b.shape)),null!=i&&(x=v(i,"prelu weights","fused matMul"));let N=(e,t)=>{let i,o,[l,u,p,h]=t,d=oc(R(e,p.shape),p,s);return n||a?!n&&a?(i=Lt(d,u,!1,!1),o=Lt(d,l,!0,!1)):n&&!a?(i=Lt(u,d,!1,!0),o=Lt(l,d,!1,!1)):(i=Lt(u,d,!0,!0),o=Lt(d,l,!0,!0)):(i=Lt(d,u,!1,!0),o=Lt(l,d,!0,!1)),null!=r?[i,o,sc(h,d)]:[i,o]},T={a:I,b:S,bias:b,preluActivationWeights:x},C={transposeA:n,transposeB:a,activation:s,leakyreluAlpha:o};return null==r?cn(((e,t,n)=>{let a=k.runKernel(Si,T,C);return n([e,t,a]),{value:R(a,w),gradFunc:N}}))(I,S):cn(((e,t,n,a)=>{let r=k.runKernel(Si,T,C);return a([e,t,r,n]),{value:R(r,w),gradFunc:N}}))(I,S,b)}var G_=T({fusedMatMul_:T6});function k6(e){return gh(e,.54,.46)}var W_=T({hammingWindow_:k6});function E6(e){return gh(e,.5,.5)}var my=T({hannWindow_:E6});function _6(e,t,n,a=!1,r=0){let s=0,i=[];for(;s+t<=e.size;)i.push(Rt(e,s,t)),s+=n;if(a)for(;s<e.size;){let a=s+t-e.size,o=oe([Rt(e,s,t-a),bo([a],r)]);i.push(o),s+=n}return 0===i.length?Us([],[0,t]):R(oe(i),[i.length,t])}var fy=T({frame_:_6});function A6(e,t,n,a,r=my){null==a&&(a=m0(t));let s=fy(e,t,n),i=D(s,r(t));return cu(i,a)}var U_=T({stft_:A6});function $6(e,t,n,a,r="bilinear",s=0){let i=v(e,"image","cropAndResize"),o=v(t,"boxes","cropAndResize","float32"),l=v(n,"boxInd","cropAndResize","int32"),u=o.shape[0];_(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),_(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),_(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),_(2===a.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${a.length}.`)),_(a[0]>=1&&a[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${a}`)),_("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));let p={image:i,boxes:o,boxInd:l},h={method:r,extrapolationValue:s,cropSize:a};return k.runKernel(ba,p,h)}var H_=T({cropAndResize_:$6});function D6(e){let t=v(e,"image","flipLeftRight","float32");_(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));let n={image:t};return k.runKernel(Sa,n,{})}var q_=T({flipLeftRight_:D6});function R6(e){let t=v(e,"image","grayscaleToRGB"),n=t.rank-1,a=t.shape[n];_(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),_(1===a,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${a}.`));let r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,Fr(t,r)}var K_=T({grayscaleToRGB_:R6});function F6(e,t,n=0,a=.5){let r=v(e,"image","rotateWithOffset","float32");_(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));let s={image:r},i={radians:t,fillValue:n,center:a};return k.runKernel(Xa,s,i)}var j_=T({rotateWithOffset_:F6});function Io(e,t,n,a,r,s){null==a&&(a=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==s&&(s=0);let i=e.shape[0];return n=Math.min(n,i),_(0<=a&&a<=1,(()=>`iouThreshold must be in [0, 1], but was '${a}'`)),_(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),_(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),_(1===t.rank,(()=>"scores must be a 1D tensor")),_(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),_(0<=s&&s<=1,(()=>`softNmsSigma must be in [0, 1], but was '${s}'`)),{maxOutputSize:n,iouThreshold:a,scoreThreshold:r,softNmsSigma:s}}function O6(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY){let s=v(e,"boxes","nonMaxSuppression","float32"),i=v(t,"scores","nonMaxSuppression","float32"),o=Io(s,i,n,a,r),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:a=o.iouThreshold,scoreThreshold:r=o.scoreThreshold};return k.runKernel(La,{boxes:s,scores:i},l)}var X_=T({nonMaxSuppression_:O6});function Y_(e,t,n){let a=P6(e,t,n),r=a<0?-(a+1):a;e.splice(r,0,t)}function P6(e,t,n){return M6(e,t,n||L6)}function L6(e,t){return e>t?1:e<t?-1:0}function M6(e,t,n){let a=0,r=e.length,s=0,i=!1;for(;a<r;){s=a+(r-a>>>1);let o=n(t,e[s]);o>0?a=s+1:(r=s,i=!o)}return i?a:-a-1}function dy(e,t,n,a,r){return f0(e,t,n,a,r,0)}function hy(e,t,n,a,r,s){return f0(e,t,n,a,r,0,!1,s,!0)}function gy(e,t,n,a,r,s){return f0(e,t,n,a,r,s,!0)}function f0(e,t,n,a,r,s,i=!1,o=!1,l=!1){let u=[];for(let e=0;e<t.length;e++)t[e]>r&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(Z_);let p=s>0?-.5/s:0,h=[],d=[];for(;h.length<n&&u.length>0;){let t=u.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<r)break;let o=!1;for(let n=h.length-1;n>=i;--n){let i=z6(e,s,h[n]);if(i>=a){o=!0;break}if(t.score=t.score*B6(a,p,i),t.score<=r)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(s),d.push(t.score)):t.score>r&&Y_(u,t,Z_))}let c=h.length,f=n-c;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));let m={selectedIndices:h};return i&&(m.selectedScores=d),l&&(m.validOutputs=c),m}function z6(e,t,n){let a=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),s=Math.min(a[0],a[2]),i=Math.min(a[1],a[3]),o=Math.max(a[0],a[2]),l=Math.max(a[1],a[3]),u=Math.min(r[0],r[2]),p=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),d=Math.max(r[1],r[3]),c=(o-s)*(l-i),f=(h-u)*(d-p);if(c<=0||f<=0)return 0;let m=Math.max(s,u),g=Math.max(i,p),y=Math.min(o,h),b=Math.min(l,d),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(c+f-x)}function B6(e,t,n){let a=Math.exp(t*n*n);return n<=e?a:0}function Z_(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}async function V6(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY){let s=v(e,"boxes","nonMaxSuppressionAsync"),i=v(t,"scores","nonMaxSuppressionAsync"),o=Io(s,i,n,a,r);n=o.maxOutputSize,a=o.iouThreshold,r=o.scoreThreshold;let l=await Promise.all([s.data(),i.data()]),u=l[0],p=l[1],{selectedIndices:h}=dy(u,p,n,a,r);return s!==e&&s.dispose(),i!==t&&i.dispose(),Ke(h,"int32")}var J_=V6;function G6(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=0){let i=v(e,"boxes","nonMaxSuppression"),o=v(t,"scores","nonMaxSuppression"),l=Io(i,o,n,a,r,s),u={boxes:i,scores:o},p={maxOutputSize:n=l.maxOutputSize,iouThreshold:a=l.iouThreshold,scoreThreshold:r=l.scoreThreshold,softNmsSigma:s=l.softNmsSigma},h=k.runKernel(za,u,p);return{selectedIndices:h[0],selectedScores:h[1]}}var Q_=T({nonMaxSuppressionWithScore_:G6});async function W6(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=0){let i=v(e,"boxes","nonMaxSuppressionAsync"),o=v(t,"scores","nonMaxSuppressionAsync"),l=Io(i,o,n,a,r,s);n=l.maxOutputSize,a=l.iouThreshold,r=l.scoreThreshold,s=l.softNmsSigma;let u=await Promise.all([i.data(),o.data()]),p=u[0],h=u[1],{selectedIndices:d,selectedScores:c}=gy(p,h,n,a,r,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Ke(d,"int32"),selectedScores:Ke(c)}}var tA=W6;function U6(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=!1){let i=v(e,"boxes","nonMaxSuppression"),o=v(t,"scores","nonMaxSuppression"),l=Io(i,o,n,a,r,null),u={boxes:i,scores:o},p={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:s},h=k.runKernel(Ma,u,p);return{selectedIndices:h[0],validOutputs:h[1]}}var eA=T({nonMaxSuppressionPadded_:U6});async function H6(e,t,n,a=.5,r=Number.NEGATIVE_INFINITY,s=!1){let i=v(e,"boxes","nonMaxSuppressionAsync"),o=v(t,"scores","nonMaxSuppressionAsync"),l=Io(i,o,n,a,r,null),u=l.maxOutputSize,p=l.iouThreshold,h=l.scoreThreshold,[d,c]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=hy(d,c,u,p,h,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Ke(f,"int32"),validOutputs:mt(m,"int32")}}var rA=H6;function q6(e,t,n=!1,a=!1){let r=v(e,"images","resizeBilinear");_(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),_(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),_(!1===a||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let s=r,i=!1;3===r.rank&&(i=!0,s=R(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:a,size:t},u=k.runKernel(Ts,o,l);return i?R(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var xy=T({resizeBilinear_:q6});function K6(e,t,n=!1,a=!1){let r=v(e,"images","resizeNearestNeighbor");_(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),_(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),_("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),_(!1===a||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let s=r,i=!1;3===r.rank&&(i=!0,s=R(r,[1,r.shape[0],r.shape[1],r.shape[2]]));let[]=t,o={images:s},l={alignCorners:n,halfPixelCenters:a,size:t},u=k.runKernel(Ns,o,l);return i?R(u,[u.shape[1],u.shape[2],u.shape[3]]):u}var yy=T({resizeNearestNeighbor_:K6});function j6(e,t="binary",n=!1,a=.5){let r,s,i,o,l=v(e,"image","threshold"),u=l.shape[0]*l.shape[1],p=D(Ke([a]),255);if(_(3===l.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${l.rank}.`)),_(3===l.shape[2]||1===l.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${l.shape[2]}.`)),_("int32"===l.dtype||"float32"===l.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${l.dtype}.`)),_("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===l.shape[2]){[r,s,i]=fr(l,[1,1,1],-1);let e=D(r,.2989),t=D(s,.587),n=D(i,.114);o=X(X(e,t),n)}else o=e;"otsu"===t&&(p=X6(Cx(J(cm(o),"int32"),nr([]),256),u));let h=n?zn(o,p):Re(o,p);return J(D(h,255),"int32")}function X6(e,t){let n,a,r,s,i,o,l=Ke([-1]),u=Ke([0]),p=Ke([0]);for(let h=0;h<e.size-1;h++){n=Rt(e,0,h+1),a=Rt(e,h+1),i=pt(ft(n),t),o=pt(ft(a),t);let d=ft(D(n,Wi(0,n.size)));r=pt(d,ft(n));let c=bo(a.shape,n.size),f=X(Wi(0,a.size),c),m=D(a,f);s=pt(ft(m),ft(a));let g=ct(r,s),y=ct(r,s),b=D(i,o);p=D(D(b,g),y);let x=Re(p,u);u=_e(x,p,u),l=_e(x,Ke([h]),l)}return l}var nA=T({threshold_:j6});function Y6(e,t,n="nearest",a="constant",r=0,s){let i=v(e,"image","transform","float32"),o=v(t,"transforms","transform","float32");_(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),_(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),_(null==s||2===s.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`));let l={image:i,transforms:o},u={interpolation:n,fillMode:a,fillValue:r,outputShape:s};return k.runKernel(ja,l,u)}var oA=T({transform_:Y6});function Z6(e,t,n){_(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),_(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));let a=v(e,"a","bandPart");_(a.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${a.rank}.`));let r=a.shape,[s,i]=a.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);let o=R(Wi(0,s,1,"int32"),[-1,1]),l=Wi(0,i,1,"int32"),u=ct(o,l),p=Or(zn(u,mt(+t,"int32")),un(u,mt(-n,"int32"))),h=Ne([s,i],a.dtype);return R(qe(dr(R(a,[-1,s,i])).map((e=>_e(p,e,h)))),r)}var sA=T({bandPart_:Z6});function J6(e){let t;if(Array.isArray(e)){t=!1,_(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));let n=e[0].shape[0];for(let t=1;t<e.length;++t)_(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=fr(e,e.shape[0],0).map((e=>Bn(e,[0])));_(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));let n=[],a=e;for(let t=0;t<e.length;++t)n.push(k.tidy((()=>{let e=a[t];if(t>0)for(let a=0;a<t;++a){let t=D(ft(D(n[a],e)),n[a]);e=ct(e,t)}return pt(e,rl(e,"euclidean"))})));return t?qe(n,0):n}var iA=T({gramSchmidt_:J6});function Q6(e,t=!1){if(_(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return aA(e,t);{let n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),a=dr(R(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],s=[];return a.forEach((e=>{let[n,a]=aA(e,t);r.push(n),s.push(a)})),[R(qe(r,0),e.shape),R(qe(s,0),e.shape)]}}function aA(e,t=!1){return k.tidy((()=>{_(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));let n=e.shape[0],a=e.shape[1],r=Ju(n),s=an(e),i=Us([[1]],[1,1]),o=an(i),l=n>=a?a:n;for(let e=0;e<l;++e){let t=s,l=o,u=r;[o,s,r]=k.tidy((()=>{let t=Rt(s,[e,e],[n-e,1]),l=rl(t),u=Rt(s,[e,e],[1,1]),p=_e(Re(u,0),Us([[-1]]),Us([[1]])),h=ct(u,D(p,l)),d=pt(t,h);o=1===d.shape[0]?an(i):oe([i,Rt(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);let c=Ht(pt(Lt(p,h),l)),f=Rt(s,[e,0],[n-e,a]),m=D(c,o),g=Ot(o);if(0===e)s=ct(f,Lt(m,Lt(g,f)));else{let t=ct(f,Lt(m,Lt(g,f)));s=oe([Rt(s,[0,0],[e,a]),t],0)}let y=Ot(m),b=Rt(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=ct(b,Lt(Lt(b,o),y));else{let t=ct(b,Lt(Lt(b,o),y));r=oe([Rt(r,[0,0],[n,e]),t],1)}return[o,s,r]})),Nt([t,l,u])}return!t&&n>a&&(r=Rt(r,[0,0],[n,a]),s=Rt(s,[0,0],[a,a])),[r,s]}))}var Ze,lA=T({qr_:Q6});function tX(e,t,n=Ze.SUM_BY_NONZERO_WEIGHTS){let a=v(e,"losses","computeWeightedLoss"),r=null;null!=t&&(r=v(t,"weights","computeWeightedLoss"));let s=null==r?a:D(a,r);if(n===Ze.NONE)return s;if(n===Ze.SUM)return ft(s);if(n===Ze.MEAN){if(null==r)return Se(s);{let e=a.size/r.size,t=pt(ft(s),ft(r));return e>1?pt(t,mt(e)):t}}if(n===Ze.SUM_BY_NONZERO_WEIGHTS){if(null==r)return pt(ft(s),mt(a.size));{let e=D(r,pr(a.shape)),t=J(ft(Ws(e,mt(0))),"float32");return pt(ft(s),t)}}throw Error(`Unknown reduction: ${n}`)}!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Ze||(Ze={}));var Ur=T({computeWeightedLoss_:tX});function eX(e,t,n,a=Ze.SUM_BY_NONZERO_WEIGHTS){let r=v(e,"labels","absoluteDifference"),s=v(t,"predictions","absoluteDifference"),i=null;null!=n&&(i=v(n,"weights","absoluteDifference")),De(r.shape,s.shape,"Error in absoluteDifference: ");let o=Ee(ct(r,s));return Ur(o,i,a)}var uA=T({absoluteDifference_:eX});function rX(e,t,n,a,r=Ze.SUM_BY_NONZERO_WEIGHTS){let s=v(e,"labels","cosineDistance"),i=v(t,"predictions","cosineDistance"),o=null;null!=a&&(o=v(a,"weights","cosineDistance")),De(s.shape,i.shape,"Error in cosineDistance: ");let l=mt(1),u=ct(l,ft(D(s,i),n,!0));return Ur(u,o,r)}var cA=T({cosineDistance_:rX});function nX(e,t,n,a=Ze.SUM_BY_NONZERO_WEIGHTS){let r=v(e,"labels","hingeLoss"),s=v(t,"predictions","hingeLoss"),i=null;null!=n&&(i=v(n,"weights","hingeLoss")),De(r.shape,s.shape,"Error in hingeLoss: ");let o=mt(1);r=ct(D(mt(2),r),o);let l=Pr(ct(o,D(r,s)));return Ur(l,i,a)}var pA=T({hingeLoss_:nX});function oX(e,t,n,a=1,r=Ze.SUM_BY_NONZERO_WEIGHTS){let s=v(e,"labels","huberLoss"),i=v(t,"predictions","huberLoss"),o=null;null!=n&&(o=v(n,"weights","huberLoss")),De(s.shape,i.shape,"Error in huberLoss: ");let l=mt(a),u=Ee(ct(i,s)),p=Vi(u,l),h=ct(u,p),d=X(D(mt(.5),Mt(p)),D(l,h));return Ur(d,o,r)}var mA=T({huberLoss_:oX});function sX(e,t,n,a=1e-7,r=Ze.SUM_BY_NONZERO_WEIGHTS){let s=v(e,"labels","logLoss"),i=v(t,"predictions","logLoss"),o=null;null!=n&&(o=v(n,"weights","logLoss")),De(s.shape,i.shape,"Error in logLoss: ");let l=mt(1),u=mt(a),p=Ht(D(s,Nr(X(i,u)))),h=D(ct(l,s),Nr(X(ct(l,i),u))),d=ct(p,h);return Ur(d,o,r)}var fA=T({logLoss_:sX});function iX(e,t,n,a=Ze.SUM_BY_NONZERO_WEIGHTS){let r=v(e,"labels","meanSquaredError"),s=v(t,"predictions","meanSquaredError"),i=null;null!=n&&(i=v(n,"weights","meanSquaredError")),De(r.shape,s.shape,"Error in meanSquaredError: ");let o=bm(r,s);return Ur(o,i,a)}var dA=T({meanSquaredError_:iX});function aX(e,t){let n=v(e,"labels","sigmoidCrossEntropyWithLogits"),a=v(t,"logits","sigmoidCrossEntropyWithLogits");De(n.shape,a.shape,"Error in sigmoidCrossEntropyWithLogits: ");let r=Pr(a),s=D(a,n),i=nu(or(Ht(Ee(a))));return X(ct(r,s),i)}function lX(e,t,n,a=0,r=Ze.SUM_BY_NONZERO_WEIGHTS){let s=v(e,"multiClassLabels","sigmoidCrossEntropy"),i=v(t,"logits","sigmoidCrossEntropy"),o=null;if(null!=n&&(o=v(n,"weights","sigmoidCrossEntropy")),De(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),a>0){let e=mt(a),t=mt(1),n=mt(.5);s=X(D(s,ct(t,e)),D(n,e))}let l=aX(s,i);return Ur(l,o,r)}var hA=T({sigmoidCrossEntropy_:lX});function uX(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return cn(((e,t,a)=>{let r=am(t,[n],!0),s=ct(J(t,"float32"),r);a([e,s]);let i=Ht(D(s,e));return{value:ft(i,[n]),gradFunc:(e,t)=>{let[a,r]=t,s=wo(e.shape,[n]);return[D(R(e,s),ct(J(a,"float32"),or(r))),D(R(e,s),ct(or(r),J(a,"float32")))]}}}))(e,t)}function cX(e,t,n,a=0,r=Ze.SUM_BY_NONZERO_WEIGHTS){let s=v(e,"onehotLabels","softmaxCrossEntropy"),i=v(t,"logits","softmaxCrossEntropy"),o=null;if(null!=n&&(o=v(n,"weights","softmaxCrossEntropy")),De(s.shape,i.shape,"Error in softmaxCrossEntropy: "),a>0){let e=mt(a),t=mt(1),n=mt(s.shape[1]);s=X(D(s,ct(t,e)),pt(e,n))}let l=uX(s,i);return Ur(l,o,r)}var gA=T({softmaxCrossEntropy_:cX});function pX(e,t,n,a){let r=v(e,"indices","sparseFillEmptyRows","int32"),s=v(t,"values","sparseFillEmptyRows"),i=v(n,"denseShape","sparseFillEmptyRows","int32"),o=v(a,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==r.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);let l={indices:r,values:s,denseShape:i,defaultValue:o},u=k.runKernel(zl,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}var xA=T({sparseFillEmptyRows_:pX});function mX(e,t,n){let a=v(e,"inputIndices","sparseReshape","int32"),r=v(t,"inputShape","sparseReshape","int32"),s=v(n,"newShape","sparseReshape","int32");if(2!==a.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==r.rank)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);let i={inputIndices:a,inputShape:r,newShape:s},o=k.runKernel(Ha,i);return{outputIndices:o[0],outputShape:o[1]}}var yA=T({sparseReshape_:mX});function fX(e,t,n){let a=v(e,"data","sparseSegmentMean"),r=v(t,"indices","sparseSegmentMean","int32"),s=v(n,"segmentIds","sparseSegmentMean","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${r.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);let i={data:a,indices:r,segmentIds:s};return k.runKernel(Bl,i)}var bA=T({sparseSegmentMean_:fX});function dX(e,t,n){let a=v(e,"data","sparseSegmentSum"),r=v(t,"indices","sparseSegmentSum","int32"),s=v(n,"segmentIds","sparseSegmentSum","int32");if(a.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${r.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);let i={data:a,indices:r,segmentIds:s};return k.runKernel(Vl,i)}var wA=T({sparseSegmentSum_:dX});function hX(e,t,n,a,r,s,i,o){let l=v(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);let u=v(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");let p={separator:n,nGramWidths:a,leftPad:r,rightPad:s,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:u},d=k.runKernel(Wl,h,p);return{nGrams:d[0],nGramsSplits:d[1]}}var CA=T({stringNGrams_:hX});function gX(e,t,n=!0){let a=v(e,"input","stringSplit","string"),r=v(t,"delimiter","stringSplit","string");if(1!==a.rank)throw new Error(`Input should be Tensor1D but received shape ${a.shape}`);if(0!==r.rank)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);let s={skipEmpty:n},i={input:a,delimiter:r},o=k.runKernel(Ul,i,s);return{indices:o[0],values:o[1],shape:o[2]}}var IA=T({stringSplit_:gX});function xX(e,t){let n=v(e,"input","stringToHashBucketFast","string"),a={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");let r={input:n};return k.runKernel(Hl,r,a)}var vA=T({stringToHashBucketFast_:xX}),yX={fft:uu,ifft:nl,rfft:cu,irfft:ym},bX={hammingWindow:W_,hannWindow:my,frame:fy,stft:U_},so={flipLeftRight:q_,grayscaleToRGB:K_,resizeNearestNeighbor:yy,resizeBilinear:xy,rotateWithOffset:j_,cropAndResize:H_,nonMaxSuppression:X_,nonMaxSuppressionAsync:J_,nonMaxSuppressionWithScore:Q_,nonMaxSuppressionWithScoreAsync:tA,nonMaxSuppressionPadded:eA,nonMaxSuppressionPaddedAsync:rA,threshold:nA,transform:oA},d0={bandPart:sA,gramSchmidt:iA,qr:lA},wX={absoluteDifference:uA,computeWeightedLoss:Ur,cosineDistance:cA,hingeLoss:pA,huberLoss:mA,logLoss:fA,meanSquaredError:dA,sigmoidCrossEntropy:hA,softmaxCrossEntropy:gA},CX={sparseFillEmptyRows:xA,sparseReshape:yA,sparseSegmentMean:bA,sparseSegmentSum:wA},IX={stringNGrams:CA,stringSplit:IA,stringToHashBucketFast:vA},Hr=class extends ch{minimize(e,t=!1,n){let{value:a,grads:r}=this.computeGradients(e,n);if(null!=n){let e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return Nt(r),t?a:(a.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Vx(e,t)}dispose(){null!=this.iterations_&&Nt(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:mt(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}};Object.defineProperty(Hr,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var mu=class extends Hr{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=k.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let a=k.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:B((()=>It(a).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:B((()=>It(a).variable(!1)))});let r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;let s=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;B((()=>{let e=X(D(s,this.rho),D(Mt(r),1-this.rho)),t=D(pt(ve(X(i,this.epsilon)),ve(X(s,this.epsilon))),r),n=X(D(i,this.rho),D(Mt(t),1-this.rho));s.assign(e),i.assign(n);let o=X(D(t,-this.learningRate),a);a.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Nt(this.accumulatedGrads.map((e=>e.variable))),Nt(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){let e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){let t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}};mu.className="Adadelta",vn(mu);var fu=class extends Hr{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let a=k.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:B((()=>bo(a.shape,this.initialAccumulatorValue).variable(!1)))});let r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;let s=this.accumulatedGrads[n].variable;B((()=>{let e=X(s,Mt(r));s.assign(e);let t=X(D(pt(r,ve(X(e,k.backend.epsilon()))),-this.learningRate),a);a.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Nt(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}};fu.className="Adagrad",vn(fu);var du=class extends Hr{constructor(e,t,n,a=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],B((()=>{this.accBeta1=mt(t).variable(),this.accBeta2=mt(n).variable()})),null==a&&(this.epsilon=k.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);B((()=>{let n=ct(1,this.accBeta1),a=ct(1,this.accBeta2);t.forEach(((t,r)=>{let s=k.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:B((()=>It(s).variable(!1)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${t}/v`,variable:B((()=>It(s).variable(!1)))});let i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;let o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,u=X(D(o,this.beta1),D(i,1-this.beta1)),p=X(D(l,this.beta2),D(Mt(i),1-this.beta2)),h=pt(u,n),d=pt(p,a);o.assign(u),l.assign(p);let c=X(D(pt(h,X(ve(d),this.epsilon)),-this.learningRate),s);s.assign(c)})),this.accBeta1.assign(D(this.accBeta1,this.beta1)),this.accBeta2.assign(D(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Nt(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Nt(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),B((()=>{this.accBeta1.assign(ln(this.beta1,this.iterations_+1)),this.accBeta2.assign(ln(this.beta2,this.iterations_+1))}));let t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}};du.className="Adam",vn(du);var hu=class extends Hr{constructor(e,t,n,a=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=a,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],B((()=>{this.iteration=mt(0).variable(),this.accBeta1=mt(t).variable()})),null==a&&(this.epsilon=k.backend.epsilon())}applyGradients(e){let t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);B((()=>{let n=ct(1,this.accBeta1),a=pt(-this.learningRate,X(D(this.iteration,this.decay),1));t.forEach(((t,r)=>{let s=k.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:It(s).variable(!1)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${t}/v`,variable:It(s).variable(!1)});let i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;let o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,u=X(D(o,this.beta1),D(i,1-this.beta1)),p=D(l,this.beta2),h=Ee(i),d=Nn(p,h);o.assign(u),l.assign(d);let c=X(D(pt(a,n),pt(u,X(d,this.epsilon))),s);s.assign(c)})),this.iteration.assign(X(this.iteration,1)),this.accBeta1.assign(D(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Nt(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Nt(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}};hu.className="Adamax",vn(hu);var Ui=class extends Hr{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;let r=k.registeredVariables[t];B((()=>{let e=X(D(this.c,a),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Ae(mt(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}};Ui.className="SGD",vn(Ui);var gu=class extends Ui{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=mt(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let a=k.registeredVariables[t];null==this.accumulations[n]&&(this.accumulations[n]={originalName:`${t}/momentum`,variable:B((()=>It(a).variable(!1)))});let r=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&B((()=>{let e,t=X(D(this.m,r),s);e=this.useNesterov?X(D(this.c,X(s,D(t,this.m))),a):X(D(this.c,t),a),r.assign(t),a.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Nt(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}};gu.className="Momentum",vn(gu);var xu=class extends Hr{constructor(e,t=.9,n=0,a=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=a,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==a&&(this.epsilon=k.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{let a=k.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:B((()=>It(a).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:B((()=>It(a).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:B((()=>It(a).variable(r)))});let s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;let i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;B((()=>{let e=X(D(i,this.decay),D(Mt(s),1-this.decay));if(this.centered){let t=this.accumulatedMeanGrads[n].variable,r=X(D(t,this.decay),D(s,1-this.decay)),l=pt(D(s,this.learningRate),ve(ct(e,X(Mt(r),this.epsilon)))),u=X(D(o,this.momentum),l);i.assign(e),t.assign(r),o.assign(u);let p=ct(a,u);a.assign(p)}else{let e=X(D(i,this.decay),D(Mt(s),1-this.decay)),t=X(D(o,this.momentum),pt(D(s,this.learningRate),ve(X(e,this.epsilon))));i.assign(e),o.assign(t);let n=ct(a,t);a.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Nt(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Nt(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Nt(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){let e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);let t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}};xu.className="RMSProp",vn(xu);var Hs=class{static sgd(e){return new Ui(e)}static momentum(e,t,n=!1){return new gu(e,t,n)}static rmsprop(e,t=.9,n=0,a=null,r=!1){return new xu(e,t,n,a,r)}static adam(e=.001,t=.9,n=.999,a=null){return new du(e,t,n,a)}static adadelta(e=.001,t=.95,n=null){return new mu(e,t,n)}static adamax(e=.002,t=.9,n=.999,a=null,r=0){return new hu(e,t,n,a,r)}static adagrad(e,t=.1){return new fu(e,t)}},lc={sgd:Hs.sgd,momentum:Hs.momentum,adadelta:Hs.adadelta,adagrad:Hs.adagrad,rmsprop:Hs.rmsprop,adamax:Hs.adamax,adam:Hs.adam},vX="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function xh(){return new Promise((e=>vX((()=>e()))))}var Hi,S={};function SX(e,t){let n=e[0].length;e.forEach(((e,t)=>{_(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),_(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));let a=e[0];e.forEach(((e,r)=>{for(let s=0;s<n;s++)_(s===t||e[s]===a[s],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${e}) does not match the shape of the rest (${a}) along the non-concatenated axis ${r}.`))}))}function NX(e,t){let n=e[0].slice();for(let a=1;a<e.length;a++)n[t]+=e[a][t];return n}function TX(e,t,n){let a=new Array;if(null==n&&null==t)return a;if(null==t)for(;a.length<e+n.length;)a.push(-1);else a=t.slice();if(null==n)return a;if(e+n.length!==a.length)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.rank = ${e+n.length}, but shape.rank = ${a.length}`);for(let r=1;r<n.length;++r){let s=n[r],i=a[a.length-n.length+r],o=a[i];if(s>=0)if(o>=0){if(o!==s)throw new Error(`rt input.shape and shape=${t} are incompatible: rt input.shape[${r+e}] = ${s} but shape[${r+e}] = ${o}`)}else a[i]=s}return a}function kX(e){let t={FIRST_DIM_SIZE:Hi.FIRST_DIM_SIZE,VALUE_ROWIDS:Hi.VALUE_ROWIDS,ROW_LENGTHS:Hi.ROW_LENGTHS,ROW_SPLITS:Hi.ROW_SPLITS,ROW_LIMITS:Hi.ROW_LIMITS,ROW_STARTS:Hi.ROW_STARTS},n=[];for(let a of e){if(!(a in t))break;n.push(t[a])}return n}function EX(e){return 0===e.length?0:e[0]===Hi.FIRST_DIM_SIZE?e.length-1:e.length}function _X(e,t){if(null==e||null==t)return;let n=e.length,a=t.length;if(n>=a)throw new Error(`defaultValue.shape=${e} and ragged tensor flatValues.shape=${t}, are incompatible: defaultValue.rank = ${n} must be less than ragged tensor input flatValues.rank = ${a})`);for(let r=0;r<Math.min(n,a-1);++r){let n=e[r],a=t[r+1];if(n>=0&&a>=0&&1!==n&&n!==a)throw new Error(`defaultValue.shape=${e}, and ragged tensor input flatValues.shape=${t} are incompatible: defaultValue.shape[${r-e.length}] = ${n} but ragged tensor input.flatValues.shape[${r-e.length}] = ${a}`)}}Wt(S,{ERF_A1:()=>MX,ERF_A2:()=>zX,ERF_A3:()=>BX,ERF_A4:()=>VX,ERF_A5:()=>GX,ERF_P:()=>LX,PARALLELIZE_THRESHOLD:()=>by,RowPartitionType:()=>Hi,SELU_SCALE:()=>g0,SELU_SCALEALPHA:()=>h0,applyActivation:()=>ic,assertAndGetBroadcastShape:()=>Pt,assertAxesAreInnerMostDims:()=>Yq,assertParamsConsistent:()=>SX,assignToTypedArray:()=>jX,axesAreInnerMostDims:()=>e0,calculateShapes:()=>NE,checkEinsumDimSizes:()=>t5,checkPadOnDimRoundingMode:()=>Ie,combineLocations:()=>jE,combineRaggedTensorToTensorShapes:()=>TX,complexWithEvenIndex:()=>HX,complexWithOddIndex:()=>qX,computeConv2DInfo:()=>Yu,computeConv3DInfo:()=>VE,computeDefaultPad:()=>t0,computeDilation2DInfo:()=>JH,computeOptimalWindowSize:()=>AX,computeOutAndReduceShapes:()=>r0,computeOutShape:()=>NX,computePool2DInfo:()=>QS,computePool3DInfo:()=>QH,convertConv2DDataFormat:()=>GE,decodeEinsumEquation:()=>JX,eitherStridesOrDilationsAreOne:()=>Dr,expandShapeToKeepDim:()=>wo,exponent:()=>YX,exponents:()=>XX,fromStringArrayToUint8:()=>C5,fromUint8ToStringArray:()=>w5,getAxesPermutation:()=>n0,getBroadcastDims:()=>IE,getComplexWithIndex:()=>KX,getEinsumComputePath:()=>e5,getEinsumPermutation:()=>QX,getFusedBiasGradient:()=>sc,getFusedDyActivation:()=>oc,getImageCenter:()=>$X,getInnerMostAxes:()=>Zq,getPermuted:()=>RX,getRaggedRank:()=>EX,getReductionAxes:()=>ge,getReshaped:()=>DX,getReshapedPermuted:()=>FX,getRowPartitionTypesHelper:()=>kX,getSliceBeginCoords:()=>OX,getSliceSize:()=>PX,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>s5,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>i5,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>a5,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>c5,getSparseReshapeInputOutputMismatchErrorMessage:()=>m5,getSparseReshapeInputOutputMultipleErrorMessage:()=>p5,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>l5,getSparseReshapeNegativeOutputDimErrorMessage:()=>u5,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>g5,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>f5,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>d5,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>h5,getUndoAxesPermutation:()=>mh,isIdentityPermutation:()=>r5,log:()=>u4,mergeRealAndImagArrays:()=>WX,prepareAndValidate:()=>SE,prepareSplitSize:()=>o5,segment_util:()=>y0,shouldFuse:()=>ac,slice_util:()=>Me,splitRealAndImagArrays:()=>UX,tupleValuesAreOne:()=>no,upcastType:()=>ar,validateDefaultValueShape:()=>_X,validateInput:()=>ix,validateUpdateShape:()=>KS,warn:()=>ki}),function(e){e[e.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",e[e.VALUE_ROWIDS=1]="VALUE_ROWIDS",e[e.ROW_LENGTHS=2]="ROW_LENGTHS",e[e.ROW_SPLITS=3]="ROW_SPLITS",e[e.ROW_LIMITS=4]="ROW_LIMITS",e[e.ROW_STARTS=5]="ROW_STARTS"}(Hi||(Hi={}));var by=30;function AX(e){return e<=by?e:ip(e,Math.floor(Math.sqrt(e)))}function $X(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function DX(e,t,n,a=!0){let r=[];if(a)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);let n=t.length;for(let a=0;a<n;++a)r=r.concat([e[a+1]/t[a],t[a]]);r=r.concat(e.slice(n+1))}return r}function RX(e,t,n=!0){let a=[];if(n){a.push(t);for(let n=t+1;n<e;++n)n<=2*t?(a.push(n),a.push(n-(t+1))):a.push(n)}else{let n=[],r=[];for(let a=1;a<e;++a)a>=2*t+1||a%2==1?r.push(a):n.push(a);a.push(...n),a.push(0),a.push(...r)}return a}function FX(e,t,n,a=!0){let r=[];a?r.push(e[0]/n):r.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?a?r.push(t[n-1]*e[n]):r.push(e[n]/t[n-1]):r.push(e[n]);return r}function OX(e,t){let n=[0];for(let a=0;a<t;++a)n.push(e[a][0]);return n}function PX(e,t,n){let a=e.slice(0,1);for(let r=0;r<n;++r)a.push(e[r+1]-t[r][0]-t[r][1]);return a}var h0=1.7580993408473768,g0=1.0507009873554805,LX=.3275911,MX=.254829592,zX=-.284496736,BX=1.421413741,VX=-1.453152027,GX=1.061405429;function WX(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);let n=new Float32Array(2*e.length);for(let a=0;a<n.length;a+=2)n[a]=e[a/2],n[a+1]=t[a/2];return n}function UX(e){let t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let a=0;a<e.length;a+=2)t[a/2]=e[a],n[a/2]=e[a+1];return{real:t,imag:n}}function HX(e){let t=Math.ceil(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],a[Math.floor(t/4)]=e[t+1];return{real:n,imag:a}}function qX(e){let t=Math.floor(e.length/4),n=new Float32Array(t),a=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],a[Math.floor(t/4)]=e[t+1];return{real:n,imag:a}}function KX(e,t){return{real:e[2*t],imag:e[2*t+1]}}function jX(e,t,n,a){e[2*a]=t,e[2*a+1]=n}function XX(e,t){let n=new Float32Array(e/2),a=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){let s=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(s),a[r]=Math.sin(s)}return{real:n,imag:a}}function YX(e,t,n){let a=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(a),imag:Math.sin(a)}}var x0="->",ZX=/->/g,SA=",",NA="...";function JX(e,t){let n=((e=e.replace(/\s/g,"")).length-e.replace(ZX,"").length)/x0.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${x0}").`);let[a,r]=e.split(x0);_(-1===a.indexOf(NA),(()=>`The ellipsis notation ("${NA}") is not supported yet.`));let s=a.split(SA),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");let o=[];for(let e=0;e<r.length;++e){let t=r[e];if(!s.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<a.length;++e){let t=a[e];-1===o.indexOf(t)&&t!==SA&&o.push(t)}let l=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<s[e].length;++t)l[e].push(o.indexOf(s[e][t]))}let u=o.length,p=[];for(let e=r.length;e<u;++e)p.push(e);return{allDims:o,summedDims:p,idDims:l}}function QX(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;let a=[];for(let t=0;t<e;++t)-1===n[t]&&a.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:a}}function t5(e,t,n){let a=new Array(e);for(let e=0;e<n.length;++e){let r=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===a[t[e][n]]?a[t[e][n]]=r[n]:_(a[t[e][n]]===r[n],(()=>`Expected dimension ${a[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(r)}, but got dimension ${r[n]}`))}}function e5(e,t){let n=e,a=[],r=0;0===e.length&&n.push(-1),r=e.length+1;for(let e=0;e<r;++e)a.push([]);let s=[];for(let e=0;e<n.length;++e){let r=n5(t,n[e]);for(let t of r)-1===s.indexOf(t)&&(a[e].push(t),s.push(t))}return{path:n,steps:a}}function r5(e){return e.every(((e,t)=>e===t))}function n5(e,t){let n=[];for(let a=0;a<e.length;++a)(0===e[a].length||-1!==e[a].indexOf(t)||-1===t)&&n.push(a);return n}function o5(e,t,n=0){let a=[];if("number"==typeof t)_(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),a=new Array(t).fill(e.shape[n]/t);else{_(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));let r=t.indexOf(-1);if(-1!==r){let a=t.reduce(((e,t)=>t>0?e+t:e));t[r]=e.shape[n]-a}_(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),a=t}return a}function s5(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function i5(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function a5(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function l5(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function u5(e,t){return`size ${e} must be non-negative, not ${t}`}function c5(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function p5(e,t){return`Input to reshape is a SparseTensor with ${Jt(e)}\n  dense values, but the requested shape requires a multiple of ${Jt(t)}. inputShape=${e} outputShape= ${t}`}function m5(e,t){return`Input to reshape is a tensor with ${Jt(e)} dense values, but the requested shape has ${Jt(t)}. inputShape=${e} outputShape=${t}`}function f5(){return"segment ids must be >= 0"}function d5(){return"segment ids are not increasing"}function h5(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function g5(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}var y0={};function x5(e,t){let n,a=!1;for(e<=by?(n=e,a=!0):n=ip(e,Math.floor(Math.sqrt(e)));!a;)n>t||n===e?a=!0:n=ip(e,n+1);return n}function y5(e,t,n){let a=[],r=e.length;for(let s=0;s<r;s++)s!==t?a.push(e[s]):a.push(n);return a}function b5(e,t,n,a){let r=t.shape.length,s=e.shape.length;if(0!==a&&(a<-r||a>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${a}`);if(a<0&&(a+=r),a>s)throw new Error(`batchDims (${a}) must be less than rank(x) (\n    ${s}).`);if(n<a)throw new Error(`batchDims (${a}) must be less than or equal to axis (${n}).`);for(let n=0;n<a;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);let i=e.shape[n],o=[],l=1,u=1,p=1;for(let t=0;t<a;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=a;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=a;e<r;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),p*=e.shape[t];return{batchSize:l,sliceSize:p,outerSize:u,dimSize:i,outputShape:o}}function w5(e){try{return e.map((e=>Up(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function C5(e){return e.map((e=>jl(e)))}Wt(y0,{collectGatherOpShapeInfo:()=>b5,computeOutShape:()=>y5,segOpComputeOptimalWindowSize:()=>x5});var qr={};Wt(qr,{nonMaxSuppressionV3Impl:()=>dy,nonMaxSuppressionV4Impl:()=>hy,nonMaxSuppressionV5Impl:()=>gy,whereImpl:()=>ly});var wy={kernelName:ui,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>D(e,Co(J(n,"float32"),-1))}}},TA={kernelName:ua,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=Mt(J(n,"float32")),a=ve(ct(mt(1),t));return Ht(pt(e,a))}}}},kA={kernelName:ca,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=ve(ct(Mt(J(n,"float32")),1));return pt(e,t)}}}},EA={kernelName:Qn,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=Pt(n.shape,a.shape);return{a:()=>{let t=e,a=ge(n.shape,r);return a.length>0&&(t=ft(t,a)),R(t,n.shape)},b:()=>{let t=e,n=ge(a.shape,r);return n.length>0&&(t=ft(t,n)),R(t,a.shape)}}}},_A={kernelName:Wo,saveAllInputs:!0,gradFunc:(e,t)=>{let n={};return t.forEach(((t,a)=>{n[a]=()=>e.clone()})),n}},AA={kernelName:Uo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>It(n)}}},$A={kernelName:Al,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>It(n)}}},DA={kernelName:fa,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>pt(e,ve(ct(mt(1),Mt(J(n,"float32")))))}}},RA={kernelName:da,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=ve(X(mt(1),Mt(J(n,"float32"))));return pt(e,t)}}}},FA={kernelName:xa,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=Pt(n.shape,a.shape);return{a:()=>{let t=X(Mt(n),Mt(a)),s=D(e,pt(a,t)),i=ge(n.shape,r);return i.length>0&&(s=ft(s,i)),R(s,n.shape)},b:()=>{let t=X(Mt(n),Mt(a)),s=Ht(D(e,pt(n,t))),i=ge(a.shape,r);return i.length>0&&(s=ft(s,i)),R(s,a.shape)}}}},OA={kernelName:ha,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>pt(e,X(Mt(J(n,"float32")),1))}}},PA={kernelName:ga,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>pt(e,ct(mt(1),Mt(J(n,"float32"))))}}};function I5(e,t,n,a,r,s){let i=v(e,"dy","avgPool3dGrad"),o=v(t,"input","avgPool3dGrad"),l=i,u=o,p=!1;4===o.rank&&(p=!0,l=R(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=R(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),_(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),_(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),Ie("avgPool3dGrad",r,s);let h={dy:l,input:u},d={filterSize:n,strides:a,pad:r,dimRoundingMode:s},c=k.runKernel(up,h,d);return p?R(c,[c.shape[1],c.shape[2],c.shape[3],c.shape[4]]):c}var LA=T({avgPool3dGrad_:I5}),MA={kernelName:$l,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{filterSize:r,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>LA(e,a,r,s,i,o)}}};function v5(e,t,n,a,r){let s=v(e,"dy","avgPoolGrad"),i=v(t,"input","avgPoolGrad");_(i.rank===s.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`));let o=i,l=s,u=!1;3===i.rank&&(u=!0,o=R(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=R(s,[1,s.shape[0],s.shape[1],s.shape[2]])),_(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),_(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));let p={dy:l,input:o},h={filterSize:n,strides:a,pad:r},d=k.runKernel(lp,p,h);return u?R(d,[d.shape[1],d.shape[2],d.shape[3]]):d}var zA=T({avgPoolGrad_:v5}),BA={kernelName:Ho,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{filterSize:r,strides:s,pad:i}=n;return{x:()=>zA(e,a,r,s,i)}}},VA={kernelName:qo,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{let[a,r]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Lt(e,r,!1,!1),b:()=>Lt(e,a,!0,!1)}:s&&!i?{a:()=>Lt(r,e,!1,!0),b:()=>Lt(a,e,!1,!1)}:{a:()=>Lt(r,e,!0,!0),b:()=>Lt(e,a,!0,!0)}:{a:()=>Lt(e,r,!1,!0),b:()=>Lt(a,e,!0,!1)}}},GA={kernelName:ci,gradFunc:(e,t,n)=>{let{blockShape:a,crops:r}=n;return{x:()=>iu(e,a,r)}}},WA={kernelName:d1,gradFunc:(e,t,n)=>{let a=n,r=a.inputShape,s=a.shape,i=Array.from(s);for(let e=r.length-1;e>=0;e--)if(r[e]===s[e])i[e]=1;else if(1!==r[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${s}].`);let o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>ft(e,o,!0)}}},UA={kernelName:co,gradFunc:e=>({x:()=>e.clone()})},HA={kernelName:Ko,gradFunc:e=>({x:()=>It(e)})},qA={kernelName:po,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{clipValueMin:r,clipValueMax:s}=n;return{x:()=>_e(Or(un(a,r),zn(a,s)),e,It(e))}}},KA={kernelName:Dl,inputsToSave:["x"],gradFunc:wy.gradFunc},jA={kernelName:pi,saveAllInputs:!0,gradFunc:(e,t,n)=>{let a=t.map((e=>e.shape)),{axis:r}=n,s=cr(r,t[0].shape)[0],i=a.map((e=>e[s]));return fr(e,i,s).map((e=>()=>e))}},XA={kernelName:jo,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[a,r]=t,{dilations:s,strides:i,pad:o,dataFormat:l}=n;return _(no(s),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`)),{x:()=>em(a.shape,e,r,i,o,l),filter:()=>Im(a,e,r.shape,i,o,l)}}},YA={kernelName:Xo,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{let[a,r]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Sn(e,r,s,i,o,1,l),filter:()=>Im(e,a,r.shape,s,i,o,l)}}};function S5(e,t,n,a,r){let s=e;4===e.rank&&(s=R(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=R(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),_(5===s.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`)),_(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),_(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),_(s.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`)),_(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));let o={x:s,dy:i},l={strides:a,pad:r,filterShape:n};return k.runKernel(dp,o,l)}var ZA=T({conv3DBackpropFilter_:S5}),JA={kernelName:Rl,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:a,strides:r,pad:s}=n;_(no(a),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));let[i,o]=t;return{x:()=>Ex(i.shape,e,o,r,s),filter:()=>ZA(i,e,o.shape,r,s)}}},QA={kernelName:Yo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>D(Ht(dm(J(n,"float32"))),e)}}},t2={kernelName:Zo,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>D(hm(J(n,"float32")),e)}}},e2={kernelName:Jo,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{axis:r,exclusive:s,reverse:i}=n;return{x:()=>{let t=n0([r],a.rank),n=om(e,r,s,!i);return null!=t&&(n=Ot(n,t)),n}}}},r2={kernelName:Qo,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let{dilations:a,strides:r,pad:s,dimRoundingMode:i}=n,o=null==a?[1,1]:a;_(no(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));let[l,u]=t;return _(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),_(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),_(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),_(Dr(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`)),Ie("depthwiseConv2d",s,i),{x:()=>py(l.shape,e,u,r,s,o,i),filter:()=>cy(l,e,u.shape,r,s,o,i)}}},n2={kernelName:Fl,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{let[a,r]=t,s={x:a,filter:r,dy:e},i={x:a,filter:r,dy:e};return{x:()=>k.runKernel(Xd,s,n),filter:()=>k.runKernel(Yd,i,n)}}},o2={kernelName:es,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t,a={dy:e,y:n};return{x:()=>k.runKernel(Cp,a)}}},s2={kernelName:Ca,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,a=D(or(Ht(Mt(n))),2/Math.sqrt(Math.PI));return{x:()=>D(e,a)}}},i2={kernelName:rs,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>D(e,n)}}},a2={kernelName:mi,inputsToSave:["input"],gradFunc:(e,t)=>{let[n]=t;return{input:()=>R(e,n.shape)}}},l2={kernelName:va,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>D(e,or(n))}}},u2={kernelName:ns,gradFunc:e=>({x:()=>It(e)})},c2={kernelName:os,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=Pt(n.shape,a.shape);return{a:()=>{let t=pt(e,J(a,"float32")),s=ge(n.shape,r);return s.length>0?R(ft(t,s),n.shape):t},b:()=>{let t=D(e,J(n,"float32")),s=ge(a.shape,r);s.length>0&&(t=R(ft(t,s),a.shape));let i=Mt(a);return Ht(pt(t,J(i,"float32")))}}}},p2={kernelName:ss,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{let{varianceEpsilon:a}=n,[r,s,i,o]=t,l=null==o?mt(1):o,u=ge(s.shape,r.shape),p=[];if(1===s.rank){for(let e=0;e<r.shape.length-1;++e)p.push(r.shape[e]);p.push(1)}let h=ct(r,s),d=D(e,l),c=pm(X(i,mt(a))),f=D(D(D(c,c),c),mt(-.5));return{x:()=>1===s.rank?R(D(D(e,Fr(R(c,[1,1,1,s.shape[0]]),p)),l),r.shape):R(D(D(e,c),l),r.shape),mean:()=>{let e=D(D(c,mt(-1)),d);return 1===s.rank&&(e=ft(e,u)),R(e,s.shape)},variance:()=>{let e=D(D(f,h),d);return 1===s.rank&&(e=ft(e,u)),R(e,s.shape)},scale:()=>{let t=D(h,c),n=D(e,t);return 1===s.rank&&(n=ft(n,u)),R(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=ft(t,u)),R(t,s.shape)}}}},d2={kernelName:fi,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{let[a,r]=t,{axis:s}=n,i=cr(s,a.shape)[0];return{x:()=>{let t=a.shape,n=r.size,o=t.slice(0,i),l=o.length,u=t.slice(s,t.length).slice(1),p=u.length,h=m2(0,l),d=m2(l+1,l+1+p),c=f2([o,[n],u]),f=R(e,c),m=R(r,[n]),g=f2([[l],h,d]),y=Ot(f,g),b=Cm(y,m,a.shape[i]),x=mh(g);return b=Ot(b,x),b},indices:()=>r}}};function m2(e,t){let n=[];for(let a=e;a<t;++a)n.push(a);return n}function f2(e){let t=[];for(let n=0;n<e.length;++n)for(let a=0;a<e[n].length;++a)t.push(e[n][a]);return t}var h2={kernelName:is,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t;return{a:()=>It(n),b:()=>It(a)}}},g2={kernelName:mo,gradFunc:e=>({x:()=>J(e,"float32")})},x2={kernelName:ka,gradFunc:e=>({x:()=>It(e)})},y2={kernelName:Ea,gradFunc:e=>({x:()=>It(e)})},b2={kernelName:as,gradFunc:e=>({x:()=>It(e)})},w2={kernelName:ls,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{alpha:r}=n,s=Re(a,0);return{x:()=>_e(s,e,D(e,r))}}},C2={kernelName:$a,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>pt(e,X(n,1))}}},I2={kernelName:us,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>pt(e,J(n,"float32"))}}},v2={kernelName:g1,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[a]=t,{axis:r}=n;return{logits:()=>{let t=or(a);return ct(e,D(ft(e,r,!0),t))}}}};function N5(e,t,n,a=5,r=1,s=1,i=.5){let o={x:e,y:t,dy:n},l={depthRadius:a,bias:r,alpha:s,beta:i};return k.runKernel(Tp,o,l)}var S2=T({localResponseNormalizationBackprop_:N5}),N2={kernelName:Pl,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[a,r]=t,{depthRadius:s,bias:i,alpha:o,beta:l}=n;return{x:()=>S2(a,r,e,s,i,o,l)}}};function Cy(e,t,n,a){return t.rank<n.rank&&(t=R(t,wo(t.shape,a))),e.rank<n.rank&&(e=R(e,wo(e.shape,a))),{x:()=>D(e,J(Rr(n,t),e.dtype))}}var b0={kernelName:cs,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let a=n,{reductionIndices:r}=a,s=t[0],i=Cy(e,t[1],s,cr(r,s.shape));return{x:()=>i.x()}}},T2={kernelName:ps,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t;return{a:()=>D(e,J(un(n,a),"float32")),b:()=>D(e,J(sm(n,a),"float32"))}}};function T5(e,t,n,a,r,s,i){let o=v(e,"dy","maxPool3dGrad"),l=v(t,"input","maxPool3dGrad"),u=v(n,"output","maxPool3dGrad"),p=o,h=l,d=u,c=!1;4===l.rank&&(c=!0,p=R(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=R(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=R(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),_(5===p.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${p.rank}.`)),_(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),_(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),Ie("maxPool3dGrad",s,i);let f={dy:p,input:h,output:d},m={filterSize:a,strides:r,pad:s,dimRoundingMode:i},g=k.runKernel(Ep,f,m);return c?R(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}var k2=T({maxPool3dGrad_:T5}),E2={kernelName:Ll,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[a,r]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>k2(e,a,r,s,i,o,l)}}};function k5(e,t,n,a,r,s,i){let o=v(e,"dy","maxPoolGrad"),l=v(t,"input","maxPoolGrad"),u=v(n,"output","maxPoolGrad");_(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),_(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),_(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),Ie("maxPoolGrad",s,i);let p={dy:o,input:l,output:u},h={filterSize:a,strides:r,pad:s,dimRoundingMode:i};return k.runKernel(kp,p,h)}var _2=T({maxPoolGrad_:k5}),A2={kernelName:ms,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let[a,r]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>_2(e,a,r,s,i,o)}}},$2={kernelName:fs,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{axis:r}=n,s=cr(r,a.shape),i=Jt(r0(a.shape,s)[1]);return{x:()=>{let t=a.shape.slice();s.forEach((e=>{t[e]=1}));let n=R(e,t);return pt(D(n,pr(a.shape,"float32")),i)}}}},D2={kernelName:ds,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{let a=n,{axis:r}=a,[s,i]=t,o=Cy(e,i,s,cr(r,s.shape));return{x:()=>o.x()}}},R2={kernelName:hs,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t;return{a:()=>D(e,J(zn(n,a),"float32")),b:()=>D(e,J(Re(n,a),"float32"))}}},F2={kernelName:gs,inputsToSave:["x"],gradFunc:(e,t,n)=>{let a=t[0],{paddings:r}=n,s=r.map((e=>e[0]));return{x:()=>Rt(e,s,a.shape)}}},O2={kernelName:Oa,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=Pt(n.shape,a.shape);return{a:()=>{let t=ge(n.shape,r);return t.length>0?R(ft(e,t),n.shape):e},b:()=>{let t=D(e,Ht(zi(pt(n,a)))),s=ge(a.shape,r);return s.length>0?R(ft(t,s),a.shape):t}}}},P2={kernelName:xs,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=Pt(n.shape,a.shape);return{a:()=>{let t=D(e,J(a,"float32")),s=ge(n.shape,r);return s.length>0?R(ft(t,s),n.shape):t},b:()=>{let t=D(e,J(n,"float32")),s=ge(a.shape,r);return s.length>0?R(ft(t,s),a.shape):t}}}},L2={kernelName:di,gradFunc:e=>({x:()=>Ht(e)})},M2={kernelName:ys,inputsToSave:["indices"],gradFunc:(e,t)=>{let n=t[0];return{indices:()=>Ne(n.shape,"float32")}}},z2={kernelName:hi,gradFunc:e=>({x:()=>It(e)})},B2={kernelName:gi,saveAllInputs:!0,gradFunc:(e,t,n)=>{let{axis:a}=n;return dr(e,a).map((e=>()=>e))}},w0={kernelName:bs,inputsToSave:["x"],gradFunc:(e,t,n)=>{let a=t[0],{paddings:r}=n,s=r.map((e=>e[0]));return{x:()=>Rt(e,s,a.shape)}}},V2={kernelName:ws,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{let[n,a,r]=t,s=n,i=a,o=Pt(s.shape,i.shape);return{a:()=>{let t=J(i,"float32"),n=D(e,D(t,ln(s,ct(t,mt(1))))),a=ge(s.shape,o);return a.length>0&&(n=ft(n,a)),R(n,s.shape)},b:()=>{let t=Re(s,0),n=_e(t,Nr(s),It(s)),a=D(e,D(r,n)),l=ge(i.shape,o);return l.length>0&&(a=ft(a,l)),R(a,i.shape)}}}},G2={kernelName:Cs,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{let[n,a]=t,r=Re(n,0);return{x:()=>_e(r,e,D(e,a)),alpha:()=>{let t=_e(r,It(e),D(e,n)),s=ge(a.shape,e.shape);return s.length>0&&(t=ft(t,s)),R(t,a.shape)}}}};function E5(e,t,n){let a=e.shape.slice();a[n]=1;let r=R(t,a),s=Zu(e,n,!0,!1),i=Zu(e,n,!0,!0),o=D(s,i);return D(r,o)}function _5(e,t,n){let a=e.shape.length,r=a-n.length,s=S.getAxesPermutation(n,a),i=e;null!=s&&(i=Ot(e,s));let o=i.shape.slice(),l=o.splice(a-n.length,n.length).reduce(((e,t)=>e*t),1);o.push(l);let u=E5(i.reshape(o),t,r);if(u=u.reshape(i.shape),null!=s){let e=S.getUndoAxesPermutation(s);u=Ot(u,e)}return u}var W2={kernelName:Is,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{axis:r}=n,s=[];return s=null==r?a.shape.map(((e,t)=>t)):"number"==typeof r?[r]:r,{x:()=>_5(a,e,s)}}},U2={kernelName:ts,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=Pt(n.shape,a.shape);return{a:()=>{let t=pt(e,J(a,"float32")),s=ge(n.shape,r);return s.length>0?R(ft(t,s),n.shape):t},b:()=>{let t=D(e,J(n,"float32")),s=ge(a.shape,r);s.length>0&&(t=R(ft(t,s),a.shape));let i=Mt(a);return Ht(pt(t,J(i,"float32")))}}}},H2={kernelName:vs,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>pt(e,Ht(Mt(n)))}}},q2={kernelName:ks,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t,a=D(zn(n,6),Co(n));return{x:()=>D(e,J(a,"float32"))}}},K2={kernelName:Ss,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>D(e,J(Co(n),"float32"))}}},j2={kernelName:xi,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>R(e,n.shape)}}},X2={kernelName:Ts,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[a]=t,r={dy:e,images:a};return{images:()=>k.runKernel(Pp,r,n)}}},Y2={kernelName:Ns,inputsToSave:["images"],gradFunc:(e,t,n)=>{let[a]=t,r={dy:e,images:a};return{images:()=>k.runKernel(Op,r,n)}}},Z2={kernelName:Es,gradFunc:(e,t,n)=>{let{dims:a}=n,r=cr(a,e.shape);return{x:()=>mr(e,r)}}},J2={kernelName:_s,gradFunc:e=>({x:()=>It(e)})},Q2={kernelName:As,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>Ht(pt(e,D(ln(n,1.5),2)))}}},t$={kernelName:yi,inputsToSave:["condition"],gradFunc:(e,t)=>{let[n]=t;return{condition:()=>J(It(n),"float32"),t:()=>D(e,J(n,e.dtype)),e:()=>D(e,J(ou(n),e.dtype))}}},e$={kernelName:Va,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>{let t=Re(n,mt(0)),a=mt(h0),r=mt(g0),s=D(e,r),i=D(D(e,a),or(J(n,"float32")));return _e(t,s,i)}}}},r$={kernelName:Ds,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>D(e,D(n,ct(mt(1),n)))}}},n$={kernelName:Wa,gradFunc:e=>({x:()=>It(e)})},o$={kernelName:$s,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>D(eu(J(n,"float32")),e)}}},s$={kernelName:Ga,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>D(nm(J(n,"float32")),e)}}},i$={kernelName:bi,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{begin:r,size:s}=n,i=a.shape,[o,l]=XS(a,r,s),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>pn(e,u)}}},a$={kernelName:Os,outputsToSave:[!0],gradFunc:(e,t,n)=>{let[a]=t,{dim:r}=n,s=D(e,a);return{logits:()=>ct(s,D(ft(s,[r],!0),a))}}},l$={kernelName:Ua,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>D(e,Jr(n))}}},C0={kernelName:wi,gradFunc:(e,t,n)=>{let{blockShape:a,paddings:r}=n;return{x:()=>tu(e,a,r)}}},I0={kernelName:Ci,gradFunc:(e,t,n)=>{let{axis:a}=n;return{x:()=>oe(e,a)}}},u$={kernelName:Rs,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>pt(e,D(ve(J(n,"float32")),2))}}},c$={kernelName:Gl,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>D(e,D(J(n,"float32"),2))}}},p$={kernelName:Ps,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=mt(2);return{a:()=>D(e,D(r,ct(n,a))),b:()=>D(e,D(r,ct(a,n)))}}},m$={kernelName:fo,gradFunc:e=>({x:()=>It(e)})},f$={kernelName:Ls,inputsToSave:["a","b"],gradFunc:(e,t)=>{let[n,a]=t,r=Pt(n.shape,a.shape);return{a:()=>{let t=e,a=ge(n.shape,r);return a.length>0&&(t=ft(t,a)),R(t,n.shape)},b:()=>{let t=e,n=ge(a.shape,r);return n.length>0&&(t=ft(t,n)),R(Ht(t),a.shape)}}}},d$={kernelName:Fs,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,r=a.shape.slice(),{axis:s}=n;cr(s,a.shape).forEach((e=>{r[e]=1}));let i=R(e,r),o=D(i,pr(a.shape,"float32"));return{x:()=>o}}},h$={kernelName:Ms,inputsToSave:["x"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>pt(e,Mt(eu(n)))}}},g$={kernelName:zs,outputsToSave:[!0],gradFunc:(e,t)=>{let[n]=t;return{x:()=>D(ct(mt(1),Mt(n)),e)}}},x$={kernelName:to,inputsToSave:["x"],gradFunc:(e,t,n)=>{let[a]=t,{reps:r}=n;return{x:()=>{let t=It(a);if(1===a.rank)for(let n=0;n<r[0];++n)t=X(t,Rt(e,[n*a.shape[0]],[a.shape[0]]));else if(2===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)t=X(t,Rt(e,[n*a.shape[0],s*a.shape[1]],[a.shape[0],a.shape[1]]));else if(3===a.rank)for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let i=0;i<r[2];++i)t=X(t,Rt(e,[n*a.shape[0],s*a.shape[1],i*a.shape[2]],[a.shape[0],a.shape[1],a.shape[2]]));else{if(4!==a.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${a.rank} tensors yet.`);for(let n=0;n<r[0];++n)for(let s=0;s<r[1];++s)for(let i=0;i<r[2];++i)for(let o=0;o<r[3];++o)t=X(t,Rt(e,[n*a.shape[0],s*a.shape[1],i*a.shape[2],o*a.shape[3]],[a.shape[0],a.shape[1],a.shape[2],a.shape[3]]))}return t}}}},y$={kernelName:eo,gradFunc:(e,t,n)=>{let a=n,{perm:r}=a,s=mh(r);return{x:()=>Ot(e,s)}}},b$={kernelName:Ii,gradFunc:(e,t,n)=>{let a=n,{axis:r}=a;return{value:()=>qe(e,r)}}},w$={kernelName:ql,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{let[n]=t;return{x:()=>A5(e,n)}}};function A5(e,t){let n=Nn(t,It(t)),a=Bi(e,n),r=un(t,mt(0,"int32")),s=a.rank-r.rank;for(let e=0;e<s;++e)r=sr(r,e+1);r=Or(r,pr(a.shape,"bool"));let i=It(a);return _e(r,a,i)}var C$={kernelName:vi,gradFunc:e=>({x:()=>It(e)})},$5=[wy,TA,kA,EA,_A,AA,$A,DA,RA,FA,OA,PA,MA,BA,VA,GA,WA,UA,HA,qA,KA,jA,YA,XA,JA,QA,t2,e2,r2,n2,U2,o2,s2,i2,a2,l2,c2,u2,p2,d2,h2,g2,x2,y2,b2,w2,C2,I2,v2,N2,b0,b0,T2,E2,A2,$2,D2,R2,F2,O2,P2,L2,M2,z2,B2,w0,w0,V2,G2,W2,H2,q2,K2,j2,X2,Y2,Z2,J2,Q2,t$,e$,r$,n$,o$,s$,i$,a$,l$,C0,C0,I0,I0,u$,p$,c$,m$,f$,d$,h$,g$,x$,y$,b$,w$,C$];for(let e of $5)y1(e);O().prototype.abs=function(){return this.throwIfDisposed(),Ee(this)},O().prototype.acos=function(){return this.throwIfDisposed(),lx(this)},O().prototype.acosh=function(){return this.throwIfDisposed(),ux(this)},O().prototype.add=function(e){return this.throwIfDisposed(),X(this,e)},O().prototype.all=function(e,t){return this.throwIfDisposed(),Jp(this,e,t)},O().prototype.any=function(e,t){return this.throwIfDisposed(),ju(this,e,t)},O().prototype.argMax=function(e){return this.throwIfDisposed(),Ri(this,e)},O().prototype.argMin=function(e){return this.throwIfDisposed(),cx(this,e)},O().prototype.asScalar=function(){return this.throwIfDisposed(),_(1===this.size,(()=>"The array must have only 1 element.")),R(this,[])},O().prototype.asType=function(e){return this.throwIfDisposed(),J(this,e)},O().prototype.as1D=function(){return this.throwIfDisposed(),R(this,[this.size])},O().prototype.as2D=function(e,t){return this.throwIfDisposed(),R(this,[e,t])},O().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),R(this,[e,t,n])},O().prototype.as4D=function(e,t,n,a){return this.throwIfDisposed(),R(this,[e,t,n,a])},O().prototype.as5D=function(e,t,n,a,r){return this.throwIfDisposed(),R(this,[e,t,n,a,r])},O().prototype.asin=function(){return this.throwIfDisposed(),px(this)},O().prototype.asinh=function(){return this.throwIfDisposed(),mx(this)},O().prototype.atan=function(){return this.throwIfDisposed(),fx(this)},O().prototype.atan2=function(e){return this.throwIfDisposed(),dx(this,e)},O().prototype.atanh=function(){return this.throwIfDisposed(),hx(this)},O().prototype.avgPool=function(e,t,n,a){return this.throwIfDisposed(),Ql(this,e,t,n,a)},O().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),tu(this,e,t)},O().prototype.batchNorm=function(e,t,n,a,r){return this.throwIfDisposed(),Oi(this,e,t,n,a,r)},O().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Pi(this,e)},O().prototype.cast=function(e){return this.throwIfDisposed(),J(this,e)},O().prototype.ceil=function(){return this.throwIfDisposed(),Ix(this)},O().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),vr(this,e,t)},O().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Ft&&(e=[e]),oe([this,...e],t)},O().prototype.conv1d=function(e,t,n,a,r,s){return this.throwIfDisposed(),tm(this,e,t,n,a,r,s)},O().prototype.conv2dTranspose=function(e,t,n,a,r){return this.throwIfDisposed(),rm(this,e,t,n,a,r)},O().prototype.conv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),Sn(this,e,t,n,a,r,s)},O().prototype.cos=function(){return this.throwIfDisposed(),eu(this)},O().prototype.cosh=function(){return this.throwIfDisposed(),nm(this)},O().prototype.cumprod=function(e,t,n){return this.throwIfDisposed(),Zu(this,e,t,n)},O().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),om(this,e,t,n)},O().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Ax(this,e,t)},O().prototype.depthwiseConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),Li(this,e,t,n,a,r,s)},O().prototype.dilation2d=function(e,t,n,a,r){return this.throwIfDisposed(),$x(this,e,t,n,a,r)},O().prototype.divNoNan=function(e){return this.throwIfDisposed(),Dx(this,e)},O().prototype.div=function(e){return this.throwIfDisposed(),pt(this,e)},O().prototype.dot=function(e){return this.throwIfDisposed(),Rx(this,e)},O().prototype.elu=function(){return this.throwIfDisposed(),Mi(this)},O().prototype.equal=function(e){return this.throwIfDisposed(),Rr(this,e)},O().prototype.erf=function(){return this.throwIfDisposed(),Fx(this)},O().prototype.euclideanNorm=function(e,t){return this.throwIfDisposed(),Ox(this,e,t)},O().prototype.exp=function(){return this.throwIfDisposed(),or(this)},O().prototype.expandDims=function(e){return this.throwIfDisposed(),sr(this,e)},O().prototype.expm1=function(){return this.throwIfDisposed(),Px(this)},O().prototype.fft=function(){return this.throwIfDisposed(),uu(this)},O().prototype.flatten=function(){return this.throwIfDisposed(),R(this,[this.size])},O().prototype.floor=function(){return this.throwIfDisposed(),zi(this)},O().prototype.floorDiv=function(e){return this.throwIfDisposed(),Zp(this,e)},O().prototype.gather=function(e,t){return this.throwIfDisposed(),Bi(this,e,t)},O().prototype.greaterEqual=function(e){return this.throwIfDisposed(),un(this,e)},O().prototype.greater=function(e){return this.throwIfDisposed(),Re(this,e)},O().prototype.ifft=function(){return this.throwIfDisposed(),nl(this)},O().prototype.irfft=function(){return this.throwIfDisposed(),ym(this)},O().prototype.isFinite=function(){return this.throwIfDisposed(),Lx(this)},O().prototype.isInf=function(){return this.throwIfDisposed(),Mx(this)},O().prototype.isNaN=function(){return this.throwIfDisposed(),zx(this)},O().prototype.leakyRelu=function(e){return this.throwIfDisposed(),ru(this,e)},O().prototype.lessEqual=function(e){return this.throwIfDisposed(),zn(this,e)},O().prototype.less=function(e){return this.throwIfDisposed(),sm(this,e)},O().prototype.localResponseNormalization=function(e,t,n,a){return this.throwIfDisposed(),Bx(this,e,t,n,a)},O().prototype.logSigmoid=function(){return this.throwIfDisposed(),Wx(this)},O().prototype.logSoftmax=function(e){return this.throwIfDisposed(),im(this,e)},O().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),am(this,e,t)},O().prototype.log=function(){return this.throwIfDisposed(),Nr(this)},O().prototype.log1p=function(){return this.throwIfDisposed(),nu(this)},O().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Or(this,e)},O().prototype.logicalNot=function(){return this.throwIfDisposed(),ou(this)},O().prototype.logicalOr=function(e){return this.throwIfDisposed(),lm(this,e)},O().prototype.logicalXor=function(e){return this.throwIfDisposed(),Ux(this,e)},O().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Lt(this,e,t,n)},O().prototype.maxPool=function(e,t,n,a){return this.throwIfDisposed(),su(this,e,t,n,a)},O().prototype.max=function(e,t){return this.throwIfDisposed(),Sr(this,e,t)},O().prototype.maximum=function(e){return this.throwIfDisposed(),Nn(this,e)},O().prototype.mean=function(e,t){return this.throwIfDisposed(),Se(this,e,t)},O().prototype.min=function(e,t){return this.throwIfDisposed(),el(this,e,t)},O().prototype.minimum=function(e){return this.throwIfDisposed(),Vi(this,e)},O().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Kx(this,e,t)},O().prototype.mod=function(e){return this.throwIfDisposed(),jx(this,e)},O().prototype.mul=function(e){return this.throwIfDisposed(),D(this,e)},O().prototype.neg=function(){return this.throwIfDisposed(),Ht(this)},O().prototype.norm=function(e,t,n){return this.throwIfDisposed(),rl(this,e,t,n)},O().prototype.notEqual=function(e){return this.throwIfDisposed(),Ws(this,e)},O().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),$i(this,e,t,n)},O().prototype.onesLike=function(){return this.throwIfDisposed(),wr(this)},O().prototype.pad=function(e,t){return this.throwIfDisposed(),pn(this,e,t)},O().prototype.pool=function(e,t,n,a,r,s){return this.throwIfDisposed(),Xx(this,e,t,n,a,r,s)},O().prototype.pow=function(e){return this.throwIfDisposed(),ln(this,e)},O().prototype.prelu=function(e){return this.throwIfDisposed(),au(this,e)},O().prototype.prod=function(e,t){return this.throwIfDisposed(),Yx(this,e,t)},O().prototype.reciprocal=function(){return this.throwIfDisposed(),ey(this)},O().prototype.relu=function(){return this.throwIfDisposed(),Pr(this)},O().prototype.relu6=function(){return this.throwIfDisposed(),um(this)},O().prototype.reshapeAs=function(e){return this.throwIfDisposed(),R(this,e.shape)},O().prototype.reshape=function(e){return this.throwIfDisposed(),R(this,e)},O().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),xy(this,e,t,n)},O().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),yy(this,e,t,n)},O().prototype.reverse=function(e){return this.throwIfDisposed(),mr(this,e)},O().prototype.rfft=function(){return this.throwIfDisposed(),cu(this)},O().prototype.round=function(){return this.throwIfDisposed(),cm(this)},O().prototype.rsqrt=function(){return this.throwIfDisposed(),pm(this)},O().prototype.selu=function(){return this.throwIfDisposed(),mm(this)},O().prototype.separableConv2d=function(e,t,n,a,r,s){return this.throwIfDisposed(),fm(this,e,t,n,a,r,s)},O().prototype.sigmoid=function(){return this.throwIfDisposed(),Jr(this)},O().prototype.sign=function(){return this.throwIfDisposed(),ry(this)},O().prototype.sin=function(){return this.throwIfDisposed(),dm(this)},O().prototype.sinh=function(){return this.throwIfDisposed(),hm(this)},O().prototype.slice=function(e,t){return this.throwIfDisposed(),Rt(this,e,t)},O().prototype.softmax=function(e){return this.throwIfDisposed(),lu(this,e)},O().prototype.softplus=function(){return this.throwIfDisposed(),Gs(this)},O().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),iu(this,e,t)},O().prototype.split=function(e,t){return this.throwIfDisposed(),fr(this,e,t)},O().prototype.sqrt=function(){return this.throwIfDisposed(),ve(this)},O().prototype.square=function(){return this.throwIfDisposed(),Mt(this)},O().prototype.squaredDifference=function(e){return this.throwIfDisposed(),bm(this,e)},O().prototype.squeeze=function(e){return this.throwIfDisposed(),Bn(this,e)},O().prototype.stack=function(e,t){this.throwIfDisposed();let n=e instanceof Ft?[this,e]:[this,...e];return qe(n,t)},O().prototype.step=function(e){return this.throwIfDisposed(),Co(this,e)},O().prototype.stridedSlice=function(e,t,n,a,r,s,i,o){return this.throwIfDisposed(),ny(this,e,t,n,a,r,s,i,o)},O().prototype.sub=function(e){return this.throwIfDisposed(),ct(this,e)},O().prototype.sum=function(e,t){return this.throwIfDisposed(),ft(this,e,t)},O().prototype.tan=function(){return this.throwIfDisposed(),oy(this)},O().prototype.tanh=function(){return this.throwIfDisposed(),Fi(this)},O().prototype.tile=function(e){return this.throwIfDisposed(),Fr(this,e)},O().prototype.toBool=function(){return this.throwIfDisposed(),J(this,"bool")},O().prototype.toFloat=function(){return this.throwIfDisposed(),J(this,"float32")},O().prototype.toInt=function(){return this.throwIfDisposed(),J(this,"int32")},O().prototype.topk=function(e,t){return this.throwIfDisposed(),sy(this,e,t)},O().prototype.transpose=function(e){return this.throwIfDisposed(),Ot(this,e)},O().prototype.unique=function(e){return this.throwIfDisposed(),iy(this,e)},O().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Cm(this,e,t)},O().prototype.unstack=function(e){return this.throwIfDisposed(),dr(this,e)},O().prototype.where=function(e,t){return this.throwIfDisposed(),_e(e,this,t)},O().prototype.zerosLike=function(){return this.throwIfDisposed(),It(this)};var Tn=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Tn.prototype)}},Kr=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Kr.prototype)}},z=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,z.prototype)}},vt=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,vt.prototype)}},vm=class extends Error{constructor(e){super(e),Object.setPrototypeOf(this,vm.prototype)}},yh=class{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){let e=this.cache.keys().next().value;this.cache.delete(e)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){let e=this.cache.keys().next().value;this.cache.delete(e)}this.maxEntries=e}};function So(e,t){if(Array.isArray(e)){let n=[];for(let a=0;a<t;a++)n=n.concat(e);return n}{let n=new Array(t);return n.fill(e),n}}function io(e,t){if(!e)throw new vm(t)}function S0(e,t){let n=0;for(let a of e)a===t&&n++;return n}function Tr(e){return 1===e.length?e[0]:e}function xe(e){return Array.isArray(e)?e:[e]}function No(e){let t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function ol(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}var vo={};function Sm(e){if(null==e)return null;let t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function v0(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>v0(e)));else{let t=Object.keys(e);for(let n of t){let t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?v0(t):e[n]=t.value)}}}function qi(e,t={},n={},a="object",r=!1){if("string"==typeof e){let r,s=e;if(s in n)r=n[s];else if(s in vo)r=vo[s];else if(r=t[s],null==r)throw new z(`Unknown ${a}: ${e}. This may be due to one of the following reasons:\n1. The ${a} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${a} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return r}{let s=e;if(null==s.className||null==s.config)throw new z(`${a}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);let i,o,l=s.className;if(l in n?[i,o]=n[l]:l in vo?[i,o]=vo.className:l in t&&([i,o]=t[l]),null==i)throw new z(`Unknown ${a}: ${l}. This may be due to one of the following reasons:\n1. The ${a} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${a} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=o){let e={};for(let t of Object.keys(vo))e[t]=vo[t];for(let t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;let t=Object.assign({},vo);for(let e of Object.keys(n))vo[e]=n[e];v0(s.config);let a=o(i,s.config,n,r);return vo=Object.assign({},t),a}{let e=Object.assign({},vo);for(let e of Object.keys(n))vo[e]=n[e];let t=new i(s.config);return vo=Object.assign({},e),t}}}function D5(e,t){return e<t?-1:e>t?1:0}function bh(e,t){return-1*D5(e,t)}function To(e){if(null==e)return e;let t=[];for(let n of e)-1===t.indexOf(n)&&t.push(n);return t}function I$(e){if(null==e)throw new z(`Invalid value in obj: ${JSON.stringify(e)}`);for(let t in e)if(e.hasOwnProperty(t))return!1;return!0}function Ki(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new z(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Iy(e,t,n=0,a=1/0){return io(n>=0),io(a>=n),Array.isArray(e)&&e.length>=n&&e.length<=a&&e.every((e=>typeof e===t))}function Qe(e,t){Array.isArray(e)?(y.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Qe(e,`element ${n+1} of ${t}`)))):y.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${v$(e)}.`))}function v$(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>v$(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function S$(e,t,n){let a,r=null!=n?n():y.now();return(...s)=>{let i=null!=n?n():y.now();return i-r<t||(r=i,a=e(...s)),a}}function vy(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}var R5=0;function Ny(){return R5++}var Sy={};function yu(e=""){return e in Sy||(Sy[e]=0),Sy[e]+=1,e+Sy[e].toString()}var N$=["channelsFirst","channelsLast"],T$=["nearest","bilinear"],k$=["valid","same","causal"],E$=["max","avg"],_$=["sum","mul","concat","ave"],Nm=new Map;function Fe(e){Ki(N$,"DataFormat",e)}function $$(e){Ki(T$,"InterpolationFormat",e)}function mn(e){Ki(k$,"PaddingMode",e)}function N0(e){Ki(E$,"PoolMode",e)}var wh=[],A$="/";function Ks(e,t){wh.push(e);try{let e=t();return wh.pop(),e}catch(e){throw wh.pop(),e}}function F5(){return 0===wh.length?"":wh.join(A$)+A$}function Ty(e){if(!D$(e))throw new Error("Not a valid tensor name: '"+e+"'");return F5()+e}function ky(e){if(!D$(e))throw new Error("Not a valid tensor name: '"+e+"'");Nm.has(e)||Nm.set(e,0);let t=Nm.get(e);if(Nm.set(e,Nm.get(e)+1),t>0){let n=`${e}_${t}`;return Nm.set(n,1),n}return e}var T0,O5=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function D$(e){return!!e.match(O5)}function R$(e){return e===parseInt(e.toString(),10)}function ko(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let a=1;for(let r=t;r<n;++r)a*=e[r];return a}function uc(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){let a=e[n];a<t&&(t=a)}return t}function js(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){let a=e[n];a>t&&(t=a)}return t}function fn(e,t){if(t<e)throw new z(`end (${t}) < begin (${e}) is forbidden.`);let n=[];for(let a=e;a<t;++a)n.push(a);return n}function lr(){return null==T0&&(T0=bE().epsilon()),T0}function dn(){return"channelsLast"}function Qr(e,t){return J(e,t)}function il(e,t=-1){let n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),R(e,n)}function F$(e,t){return B((()=>{if(2!==e.shape.length)throw new z(`repeat() expects a rank-2 tensor, but received a rank-${e.shape.length} tensor.`);return _y(il(e,1),[1,t,1])}))}function O$(e){let t=[ko(e.shape)];return R(e,t)}function P$(e){if(e.rank<=1)throw new z(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);let t=[e.shape[0],ko(e.shape,1)];return R(e,t)}function sl(e,t,n){return B((()=>{switch(e.rank){case 1:return gm(e,t,n);case 2:return hh(e,[t,0],[n,e.shape[1]]);case 3:return xm(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return nc(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Rt(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Rt(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new z(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function k0(e,t,n){return B((()=>{switch(e.rank){case 1:return gm(e,t,n);case 2:return hh(e,[0,t],[e.shape[0],n]);case 3:return xm(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return nc(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new z(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Ch(e,t,n,a){return B((()=>{switch(e.rank){case 1:return gm(e,t,n);case 2:switch(a){case 1:return sl(e,t,n);case 2:return k0(e,t,n);default:throw new z(`The axis is not within the rank of the tensor ${a}`)}case 3:switch(a){case 1:return sl(e,t,n);case 2:return xm(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return k0(e,t,n);default:throw new z(`The axis is not within the rank of the tensor ${a}`)}case 4:switch(a){case 1:return sl(e,t,n);case 2:return nc(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return nc(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return k0(e,t,n);default:throw new z(`The axis is not within the rank of the tensor ${a}`)}default:throw new z(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Tm(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),oe(e,t)}function _0(e,t){switch(e.rank){case 1:return vx([e,t]);case 2:return Sx([e,t],0);case 3:return Nx([e,t],0);case 4:return Tx([e,t],0);default:throw new z(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function _y(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new z(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Fr(e,t)}function km(e,t=0,n=1,a,r){return rc(e,t,n,a,r)}function Eo(e,t,n,a){if(e.rank<2||t.rank<2)throw new vt(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new vt(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return pu.matMul({a:e,b:t,transposeA:!1,transposeB:!1,bias:a?E0(e.rank,a,dn()):null,activation:n});{let r=e.shape.slice(),s=r.pop();e=R(e,[-1,s]);let i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],p=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=R(Ot(t,p),[l,-1]);let h=[...r,...u],d=!1,c=!1;return R(pu.matMul({a:e,b:t,transposeA:d,transposeB:c,bias:a?E0(e.rank,a,dn()):null,activation:n}),h)}}function Ay(e,t,n){return B((()=>(t=Array.isArray(t)?Ke(t,"int32"):J(t,"int32"),Bi(e,t,n))))}function cc(e){return D(e,e)}function E0(e,t,n){let a=t.shape;if(1!==t.rank&&t.rank!==e)throw new z(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===a.length?R(t,[1,a[0],1,1,1]):R(t,[1,a[3],a[0],a[1],a[2]]);if("channelsLast"===n)return 1===a.length?R(t,[1,1,1,1,a[0]]):R(t,[1].concat(a))}else if(4===e){if("channelsFirst"===n)return 1===a.length?R(t,[1,a[0],1,1]):R(t,[1,a[2],a[0],a[1]]);if("channelsLast"===n)return 1===a.length?R(t,[1,1,1,a[0]]):R(t,[1].concat(a))}else if(3===e){if("channelsFirst"===n)return 1===a.length?R(t,[1,a[0],1]):R(t,[1,a[1],a[0]]);if("channelsLast"===n)return 1===a.length?R(t,[1,1,a[0]]):R(t,[1].concat(a))}else if(e<3)return t;throw new z(`Unsupported input rank by biasAdd: ${t.rank}`)}function hn(e,t,n){return B((()=>(null==n&&(n=dn()),Fe(n),X(e,E0(e.rank,t,n)))))}function L$(e,t=1){if(1!==t)throw new vt(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Mi(e)}function M$(e){return B((()=>pt(e,X(Ee(e),1))))}function $y(e,t,n,a){return B((()=>p0(e,t,n,a)))}function z$(e){return B((()=>{let t=X(.5,D(.2,e));return vr(t,0,1)}))}function bu(e,t,n=!1){return n?e():t()}var B$=["fanIn","fanOut","fanAvg"],V$=["normal","uniform","truncatedNormal"];function P5(e){Ki(B$,"FanMode",e)}function L5(e){Ki(V$,"Distribution",e)}var gn=class extends Q.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}},Em=class extends gn{apply(e,t){return Ne(e,t)}};Em.className="Zeros",Q.registerClass(Em);var wu=class extends gn{apply(e,t){return pr(e,t)}};wu.className="Ones",Q.registerClass(wu);var _m=class extends gn{constructor(e){if(super(),"object"!=typeof e)throw new z(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new z(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return B((()=>D(mt(this.value),pr(e,t))))}getConfig(){return{value:this.value}}};_m.className="Constant",Q.registerClass(_m);var Am=class extends gn{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Gi(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}};Am.className="RandomUniform",Q.registerClass(Am);var $m=class extends gn{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new vt(`randomNormal does not support dType ${t}.`);return km(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};$m.className="RandomNormal",Q.registerClass($m);var Dm=class extends gn{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new vt(`truncatedNormal does not support dType ${t}.`);return wm(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}};Dm.className="TruncatedNormal",Q.registerClass(Dm);var Rm=class extends gn{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return B((()=>{if(2!==e.length||e[0]!==e[1])throw new z("Identity matrix initializer can only be used for 2D square matrices.");return D(this.gain,Ju(e[0]))}))}getConfig(){return{gain:this.gain}}};function M5(e,t="channelsLast"){let n,a;if(Fe(t),2===e.length)n=e[0],a=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){let t=ko(e,2);n=e[1]*t,a=e[0]*t}else if("channelsLast"===t){let t=ko(e,0,e.length-2);n=e[e.length-2]*t,a=e[e.length-1]*t}}else{let t=ko(e);n=Math.sqrt(t),a=Math.sqrt(t)}return[n,a]}Rm.className="Identity",Q.registerClass(Rm);var jr=class extends gn{constructor(e){if(super(),e.scale<0)throw new z(`scale must be a positive float. Got: ${e.scale}`);this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,P5(this.mode),this.distribution=null==e.distribution?"normal":e.distribution,L5(this.distribution),this.seed=e.seed}apply(e,t){let n=M5(e),a=n[0],r=n[1],s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,a):"fanOut"===this.mode?s/=Math.max(1,r):s/=Math.max(1,(a+r)/2),"normal"===this.distribution){let n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new vt(`${this.getClassName()} does not support dType ${t}.`);return wm(e,0,n,t,this.seed)}{let n=Math.sqrt(3*s);return Gi(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}};jr.className="VarianceScaling",Q.registerClass(jr);var pc=class extends jr{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return jr.className}};pc.className="GlorotUniform",Q.registerClass(pc);var mc=class extends jr{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return jr.className}};mc.className="GlorotNormal",Q.registerClass(mc);var fc=class extends jr{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return jr.className}};fc.className="HeNormal",Q.registerClass(fc);var dc=class extends jr{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return jr.className}};dc.className="HeUniform",Q.registerClass(dc);var hc=class extends jr{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return jr.className}};hc.className="LeCunNormal",Q.registerClass(hc);var gc=class extends jr{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return jr.className}};gc.className="LeCunNormal",Q.registerClass(gc);var Fm=class extends gn{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new vt("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return B((()=>{if(e.length<2)throw new vt("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);let t=km(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32"),n=d0.gramSchmidt(t);return e[0]>e[1]&&(n=Ot(n)),D(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}};Fm.className="Orthogonal",Q.registerClass(Fm);var G$={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function W$(e,t={}){return qi(e,Q.SerializationMap.getMap().classNameMap,t,"initializer")}function Te(e){return Sm(e)}function de(e){if("string"==typeof e){let t=e in G$?G$[e]:e;if("GlorotNormal"===t)return new mc;if("GlorotUniform"===t)return new pc;if("HeNormal"===t)return new fc;if("HeUniform"===t)return new dc;if("LeCunNormal"===t)return new hc;if("LeCunUniform"===t)return new gc;{let e={};return e.className=t,e.config={},W$(e)}}return e instanceof gn?e:W$(e)}function Dy(e){return Array.isArray(e)&&Array.isArray(e[0])}function Om(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function St(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new z(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function zt(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new z(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Pm(e){let t=0;for(let n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}var H$="Variable",Ih=class{constructor(e,t="float32",n=H$,a=!0,r=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Ny(),n=null==n?H$:n,this.originalName=Ty(n),this.name=ky(this.originalName),this.trainable_=a,this.constraint=r,this.val=ay(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),B5(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}};function B5(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}function vh(e){return e.map((e=>e.read()))}function Lm(e){e.forEach((e=>{e[0].write(e[1])}))}var ye=class{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}},tn=class{constructor(e,t,n,a,r,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=a,this.callArgs=r,this.outputTensorIndex=i,this.id=Ny(),null!=s&&(this.originalName=Ty(s),this.name=ky(this.originalName)),this.rank=t.length}},V5=0,al=class{constructor(e,t){this.callArgs=t,this.id=V5++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(let t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){let e=[];for(let t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}},G5=0,Et=class extends Q.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=G5++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){let e=this.getClassName();t=No(e)+"_"+yu(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Kr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new z(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Tr(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Tr(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Tn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Tn(`Layer ${this.name} is not connected, no input to return.`);return Tr(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Tn(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Tn(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Tr(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=xe(e),null==this.inputSpec||0===this.inputSpec.length)return;let t=xe(this.inputSpec);if(e.length!==t.length)throw new z(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){let a=e[n],r=t[n];if(null==r)continue;let s=a.rank;if(null!=r.ndim&&s!==r.ndim)throw new z(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${s}`);if(null!=r.maxNDim&&s>r.maxNDim)throw new z(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${s}`);if(null!=r.minNDim&&s<r.minNDim)throw new z(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${s}.`);if(null!=r.dtype&&a.dtype!==r.dtype)throw new z(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${a.dtype}.`);if(r.axes){let e=a.shape;for(let t in r.axes){let a=Number(t),s=r.axes[t],i=a>=0?e[a]:e[e.length+a];if(null!=s&&-1===[s,null].indexOf(i))throw new z(`Input ${n} is incompatible with layer ${this.name}: expected axis ${a} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=r.shape)for(let e=0;e<r.shape.length;++e){let t=r.shape[e],s=a.shape[e];if(null!=t&&null!=s&&t!==s)throw new z(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${a.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();let n=xe(e),a=!0;for(let e of n)if(!(e instanceof tn)){a=!1;break}let r=!0;for(let e of n)if(e instanceof tn){r=!1;break}if(a===r)throw new z("Arguments to apply() must be all SymbolicTensors or all Tensors");return Ks(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);let t=[];for(let n of xe(e))t.push(n.shape);this.build(Tr(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t),r=xe(a),s=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(a=Tr(s),null!=this.activityRegularizer)throw new vt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}{let n,a=W5(e),r=this.computeOutputShape(a),s=U5(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),n=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,a)=>new tn(s,n,this,xe(e),t,this.name,a))):new tn(s,r,this,xe(e),t,this.name),this.addInboundNode(e,n,null,null,a,r,t),this._refCount++,null!=this.activityRegularizer)throw new vt("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return n}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,a)=>{null!=n&&null!=e[a]&&e[a]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Tn(`The layer ${this.name} has never been called and thus has no defined output shape.`);let e=[];for(let t of this.inboundNodes){let n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){let e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Tn(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Kr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Pm(this.weights)}build(e){this.built=!0}getWeights(e=!1){return vh(e?this.trainableWeights:this.weights)}setWeights(e){B((()=>{let t=this.weights;if(t.length!==e.length)throw new z(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;let n=[],a=vh(t);for(let r=0;r<a.length;++r){let s=a[r],i=t[r],o=e[r];if(!y.arraysEqual(s.shape,o.shape))throw new z(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Lm(n)}))}addWeight(e,t,n,a,r,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new z(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(a=null!=o?o():de("zeros"));let l=a.apply(t,n),u=new Ih(l,n,e,s,i);return l.dispose(),null!=r&&this.addLoss((()=>r.apply(u.read()))),null==s&&(s=!0),s?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=xe(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,a,r,s,i=null){let o=xe(e);t=xe(t),n=xe(n),a=xe(a),r=Om(r),s=Om(s);let l=[],u=[],p=[];for(let e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),p.push(e.tensorIndex);new al({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:p,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:a,inputShapes:r,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){let e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}};function W5(e){e=xe(e);let t=[];for(let n of e)t.push(n.shape);return Tr(t)}function U5(e){return"float32"}function A0(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{let e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{let t=[];for(let n=0;n<e.inboundLayers.length;n++){let a=A0(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(let e of a)-1===t.indexOf(e)&&t.push(e)}return t}}}var Xs=class extends Et{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:yu("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new z("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new z("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new z("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");let n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];let a=new tn(this.dtype,this.batchInputShape,this,[],{},this.name);a.nodeIndex=0,a.tensorIndex=0,new al({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[a],outputTensors:[a],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new z(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}};function Ry(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new z("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Xs({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}function H5(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return J(t,e.dtype)}catch(n){throw new z(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}Xs.className="InputLayer",Q.registerClass(Xs);var _o=class{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof _o)for(let t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(let t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new z(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=H5(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof tn){if(null==this.id2Value[e.id])throw new z(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{let t=this.name2Id[e];if(null==t)throw new z(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof tn){if(null==this.id2Value[e.id])throw new z(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{let t=this.name2Id[e];if(null==t)throw new z(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Nt(this.id2Mask)}},Fy=new yh,Oy=new yh;function K$(e){null!=Fy&&Fy.setMaxEntries(e),null!=Oy&&Oy.setMaxEntries(e)}function xc(e,t,n,a){let r=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(let e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=a&&(a.maxNumTensors=-1/0,a.minNumTensors=1/0);let p,h=o.join(",")+"|"+t.names().sort().join(","),d=Fy.get(h);if(null==d){let e=q5(i,t);d=e.sorted,p=e.recipientCounts,Fy.put(h,d),Oy.put(h,p)}p={},r||Object.assign(p,Oy.get(h));let c=new _o(t);for(let e=0;e<d.length;++e){if(null!=a){let e=lh().numTensors;e>a.maxNumTensors&&(a.maxNumTensors=e),e<a.minNumTensors&&(a.minNumTensors=e)}let s=d[e],i=s.sourceLayer;if(i instanceof Xs)continue;let u=[],h=[],f=[],m=!1;for(let e of s.inputs){let n=c.getValue(e),a=c.getMask(e);u.push(n),h.push(a),null!=a&&(m=!0),r||(p[e.name]--,0===p[e.name]&&!t.hasKey(e)&&-1===o.indexOf(e.name)&&!n.isDisposed&&!0!==e.sourceLayer.stateful&&f.push(n))}m&&((n=n||{}).mask=h[0]);let g=xe(i.apply(u,n)),y=null;i.supportsMasking&&(y=i.computeMask(u,h));let b=j5(s),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){c.hasKey(x[e])||c.add(x[e],g[e],Array.isArray(y)?y[0]:y);let t=o.indexOf(x[e].name);-1!==t&&(l[t]=g[e])}r||Nt(f)}return c.disposeMasks(),s?l:l[0]}function q5(e,t){y.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],a={};if(1===e.length){let r=q$(e[0],t);n=r.sorted,a=r.recipientMap}else{let r=new Set;for(let s of e){let{sorted:e,recipientMap:i}=q$(s,t);for(let t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(let e in i)null==a[e]&&(a[e]=new Set),i[e].forEach((t=>a[e].add(t)))}}return{sorted:n,recipientCounts:K5(a)}}function K5(e){let t={};for(let n in e)t[n]=e[n].size;return t}function q$(e,t){let n=new Set,a=[],r={};for(let e of t.names())n.add(e);let s=[],i=[];for(s.push(e);s.length>0;){let e=s[s.length-1];if(n.has(e.name)){s.pop();continue}let t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),a.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(let t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),!n.has(t.name)&&s.push(t)}}return{sorted:a,recipientMap:r}}function j5(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(let a of e.sourceLayer.inboundNodes[t].outputTensors)if(a.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}var X5=M();X5.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",(()=>100),K$);var Y$={};function $0(e,t){return B((()=>ve(ft(D(e,e),t,!0))))}Wt(Y$,{maxNorm:()=>Y5,minMaxNorm:()=>Q5,nonNeg:()=>J5,unitNorm:()=>Z5});var yc=class extends Q.Serializable{getConfig(){return{}}},Mm=class extends yc{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return B((()=>{let t=$0(e,this.axis),n=vr(t,0,this.maxValue);return D(e,pt(n,X(lr(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}};Mm.className="MaxNorm",Q.registerClass(Mm);var zm=class extends yc{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return B((()=>pt(e,X(lr(),$0(e,this.axis)))))}getConfig(){return{axis:this.axis}}};zm.className="UnitNorm",Q.registerClass(zm);var Bm=class extends yc{apply(e){return Pr(e)}};Bm.className="NonNeg",Q.registerClass(Bm);var Vm=class extends yc{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return B((()=>{let t=$0(e,this.axis),n=X(D(this.rate,vr(t,this.minValue,this.maxValue)),D(1-this.rate,t));return D(e,pt(n,X(lr(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}};Vm.className="MinMaxNorm",Q.registerClass(Vm);var j$={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function ze(e){return Sm(e)}function X$(e,t={}){return qi(e,Q.SerializationMap.getMap().classNameMap,t,"constraint")}function Be(e){return null==e?null:"string"==typeof e?X$({className:e in j$?j$[e]:e,config:{}}):e instanceof yc?e:X$(e)}function Y5(e){return new Mm(e)}function Z5(e){return new zm(e)}function J5(){return new Bm}function Q5(e){return new Vm(e)}var Z$={};function t8(){return new Em}function e8(){return new wu}function r8(e){return new _m(e)}function n8(e){return new Am(e)}function o8(e){return new $m(e)}function s8(e){return new Dm(e)}function i8(e){return new Rm(e)}function a8(e){return new jr(e)}function l8(e){return new pc(e)}function u8(e){return new mc(e)}function c8(e){return new fc(e)}function p8(e){return new dc(e)}function m8(e){return new hc(e)}function f8(e){return new gc(e)}function d8(e){return new Fm(e)}Wt(Z$,{constant:()=>r8,glorotNormal:()=>u8,glorotUniform:()=>l8,heNormal:()=>c8,heUniform:()=>p8,identity:()=>i8,leCunNormal:()=>m8,leCunUniform:()=>f8,ones:()=>e8,orthogonal:()=>d8,randomNormal:()=>o8,randomUniform:()=>n8,truncatedNormal:()=>s8,varianceScaling:()=>a8,zeros:()=>t8});var J$,AD={};async function ji(e){if(null==e)return;let t=[],n=[],a=[];for(let r in e){let s=e[r];if("number"!=typeof s){let e=s;t.push(e.data()),n.push(r),a.push(e)}}if(t.length>0){let r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];Nt(a)}}function Py(e){if(null!=e)for(let t in e){let n=e[t];"number"!=typeof n&&n.dispose()}}Wt(AD,{Layer:()=>Et,RNN:()=>En,RNNCell:()=>pl,activation:()=>$Y,add:()=>BY,alphaDropout:()=>vZ,average:()=>VY,averagePooling1d:()=>H0,averagePooling2d:()=>q0,averagePooling3d:()=>K0,avgPool1d:()=>YY,avgPool2d:()=>JY,avgPool3d:()=>tZ,avgPooling1d:()=>ZY,avgPooling2d:()=>QY,avgPooling3d:()=>eZ,batchNormalization:()=>KY,bidirectional:()=>hZ,categoryEncoding:()=>EZ,centerCrop:()=>TZ,concatenate:()=>GY,conv1d:()=>IY,conv2d:()=>vY,conv2dTranspose:()=>SY,conv3d:()=>NY,conv3dTranspose:()=>TY,convLstm2d:()=>pZ,convLstm2dCell:()=>mZ,cropping2D:()=>EY,dense:()=>DY,depthwiseConv2d:()=>AY,dot:()=>qY,dropout:()=>RY,elu:()=>gY,embedding:()=>zY,flatten:()=>OY,gaussianDropout:()=>IZ,gaussianNoise:()=>CZ,globalAveragePooling1d:()=>rZ,globalAveragePooling2d:()=>nZ,globalMaxPool1d:()=>xZ,globalMaxPool2d:()=>yZ,globalMaxPooling1d:()=>TD,globalMaxPooling2d:()=>kD,gru:()=>sZ,gruCell:()=>iZ,input:()=>z0,inputLayer:()=>hY,layerNormalization:()=>jY,leakyReLU:()=>yY,lstm:()=>aZ,lstmCell:()=>lZ,masking:()=>SZ,maxPool1d:()=>bZ,maxPool2d:()=>wZ,maxPooling1d:()=>ED,maxPooling2d:()=>_D,maxPooling3d:()=>oZ,maximum:()=>WY,minimum:()=>UY,multiply:()=>HY,permute:()=>MY,prelu:()=>bY,reLU:()=>xY,repeatVector:()=>PY,rescaling:()=>NZ,reshape:()=>LY,resizing:()=>kZ,rnn:()=>fZ,separableConv2d:()=>kY,simpleRNN:()=>uZ,simpleRNNCell:()=>cZ,softmax:()=>wY,spatialDropout1d:()=>FY,stackedRNNCells:()=>dZ,thresholdedReLU:()=>CY,timeDistributed:()=>gZ,upSampling2d:()=>_Y,zeroPadding2d:()=>XY}),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(J$||(J$={}));var h8=125,ll=class{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}},Ly=class{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(let t of this.callbacks)t.setParams(e)}setModel(e){for(let t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(let n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(let t of this.callbacks)await t.onTrainEnd(e)}},D0=class extends ll{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});let n=null==t.size?0:t.size;this.seen+=n;for(let e in t){let a=t[e];if("number"==typeof a)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+a*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;let r=B((()=>X(this.totals[e],D(a,n))));this.totals[e]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(let e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:B((()=>{let n=D(pt(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Ae(t[e])})))}},My=class extends ll{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(let e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){let e=[],t=[],n=[];for(let a in this.history){let r=this.history[a];for(let s=0;s<r.length;++s)if("number"!=typeof r[s]){let i=r[s];e.push(i.data()),t.push(a),n.push(s)}}let a=await Promise.all(e);for(let e=0;e<a.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=a[e][0]}},zy=class extends ll{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||xh,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=h8),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");y.isNumber(this.yieldEvery)&&(this.maybeWait=S$(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){let a=[];null!=this.yield&&(await ji(n),a.push(this.yield(e,t,n))),a.push(this.nextFrameFunc()),await Promise.all(a)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await ji(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){let n=[];null!=this.epochEnd&&(await ji(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await ji(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){let n=[];null!=this.batchEnd&&(await ji(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):y.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await ji(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await ji(e),await this.trainEnd(e))}};function By(e,t){return null==e&&(e={}),e instanceof ll?[e]:Array.isArray(e)&&e[0]instanceof ll?e:xe(e).map((e=>new zy(e,t)))}var xn=class{constructor(){}static registerCallbackConstructor(e,t){y.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),xn.checkForDuplicate(t),null==xn.constructors[e]&&(xn.constructors[e]=[]),xn.constructors[e].push(t)}static checkForDuplicate(e){for(let t in xn.constructors)xn.constructors[+t].forEach((t=>{if(t===e)throw new z("Duplicate callback constructor.")}))}static clear(){xn.constructors={}}static createCallbacks(e){let t=[];for(let n in xn.constructors){let a=+n;e>=a&&t.push(...xn.constructors[a])}return t.map((e=>new e))}};function Vy(e,t,n,a,r,s,i,o,l){let u=new My,p=[new D0,...xn.createCallbacks(t)];null!=e&&p.push(...e),p.push(u);let h=new Ly(p);return h.setParams({epochs:n,initialEpoch:a,samples:r,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function yn(e,t={},n=!1){return qi(e,Q.SerializationMap.getMap().classNameMap,t,"layer",n)}function Sh(e,t){return B((()=>{"float32"!==e.dtype&&(e=J(e,"float32"));let n=ft(cc(e),t,!0),a=bo(n.shape,lr()),r=ve(Nn(n,a));return pt(e,r)}))}function Xi(e,t){return B((()=>Se(cc(ct(t,e)),-1)))}function Gm(e,t){return B((()=>Se(Ee(ct(t,e)),-1)))}function Cu(e,t){return B((()=>{let n=ct(e,t),a=vr(Ee(e),lr(),Number.MAX_VALUE),r=Ee(pt(n,a));return D(100,Se(r,-1))}))}function g8(e,t){return B((()=>{let n=vr(t,lr(),Number.MAX_VALUE),a=Nr(X(1,n)),r=vr(e,lr(),Number.MAX_VALUE),s=Nr(X(1,r));return Se(cc(ct(a,s)),-1)}))}function x8(e,t){return B((()=>{let n=Nn(0,ct(1,D(e,t)));return Se(cc(n),-1)}))}function y8(e,t){return B((()=>{let n=Nn(0,ct(1,D(e,t)));return Se(n,-1)}))}function b8(e,t){return B((()=>{let n=ft(D(e,t),-1),a=Sr(D(ct(1,e),t),-1);return Nn(0,X(1,ct(a,n)))}))}function w8(e,t){return B((()=>{let n=Math.log(2),a=ct(t,e),r=ct(X(a,Gs(D(-2,a))),n);return Se(r,-1)}))}function bc(e,t,n=!1){return B((()=>{if(n)t=lu(t);else{let e=ft(t,t.shape.length-1,!0);t=pt(t,e)}return t=vr(t,lr(),1-lr()),Ht(ft(D(J(e,"float32"),Nr(t)),t.shape.length-1))}))}function Wm(e,t,n=!1){return B((()=>{let a=J(zi(O$(e)),"int32"),r=(t=vr(t,lr(),1-lr())).shape;return bc(R($i(a,r[r.length-1]),r),t,n)}))}function C8(e,t){if(!y.arraysEqual(e.shape,t.shape))throw new z(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return B((()=>{let n=Pr(t),a=Ht(Ee(t));return X(ct(n,D(t,e)),nu(or(a)))}))}function Um(e,t){return B((()=>{let n;return n=vr(t,lr(),1-lr()),n=Nr(pt(n,ct(1,n))),Se(C8(e,n),-1)}))}function I8(e,t){return B((()=>{let n=vr(e,lr(),1),a=vr(t,lr(),1);return ft(D(e,Nr(pt(n,a))),-1)}))}function v8(e,t){return B((()=>{let n=Nr(X(lr(),t));return Se(ct(t,D(e,n)),-1)}))}function Th(e,t){return B((()=>{let n=Sh(e,-1),a=Sh(t,-1),r=D(n,a);return Ht(ft(r,-1))}))}xn.constructors={};var Nh={meanSquaredError:Xi,meanAbsoluteError:Gm,meanAbsolutePercentageError:Cu,meanSquaredLogarithmicError:g8,squaredHinge:x8,hinge:y8,categoricalHinge:b8,logcosh:w8,categoricalCrossentropy:bc,sparseCategoricalCrossentropy:Wm,binaryCrossentropy:Um,kullbackLeiblerDivergence:I8,poisson:v8,cosineProximity:Th};function Gy(e){if("string"==typeof e){if(e in Nh)return Nh[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new z(t)}return e}function kh(e,t){return B((()=>{let n=D(.5,wr(t)),a=Qr(Re(t,n),e.dtype);return Se(Rr(e,a),-1)}))}function Eh(e,t){return B((()=>Qr(Rr(Ri(e,-1),Ri(t,-1)),"float32")))}function tD(e,t){return B((()=>J(ft(Or(Rr(e,1),Rr(t,1))),"float32")))}function S8(e,t){return B((()=>J(ft(Or(Rr(e,1),Rr(t,0))),"float32")))}function N8(e,t){return B((()=>J(ft(Or(Rr(e,0),Rr(t,1))),"float32")))}function R0(e,t){return B((()=>{let n=tD(e,t),a=N8(e,t),r=X(n,a);return J(_e(Re(r,0),pt(n,r),0),"float32")}))}function eD(e,t){return B((()=>{let n=tD(e,t),a=S8(e,t),r=X(n,a);return J(_e(Re(r,0),pt(n,r),0),"float32")}))}function Uy(e,t){return Um(e,t)}function Hy(e,t){return e.rank===t.rank&&(e=Bn(e,[e.rank-1])),(t=Ri(t,-1)).dtype!==e.dtype&&(t=J(t,e.dtype)),J(Rr(e,t),"float32")}var T8=Xi,k8=Xi,E8=Gm,_8=Gm,A8=Cu,$8=Cu,_h=bc,D8=Th,F0=Wm,Wy={binaryAccuracy:kh,categoricalAccuracy:Eh,precision:R0,categoricalCrossentropy:_h,sparseCategoricalCrossentropy:F0,mse:T8,MSE:k8,mae:E8,MAE:_8,mape:A8,MAPE:$8,cosine:D8};function rD(e){if("string"==typeof e&&e in Wy)return Wy[e];if("string"!=typeof e&&null!=e)return e;throw new z(`Unknown metric ${e}`)}function Ah(e){if(io(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(let n of Object.keys(Nh))if(Nh[n]===e){t=n;break}if(void 0!==t)return t;for(let n of Object.keys(Wy))if(Wy[n]===e){t=n;break}return void 0!==t?t:e.name}}function oD(e){let t={Adagrad:()=>lc.adagrad(.01),Adadelta:()=>lc.adadelta(1,.95,lr()),Adam:()=>lc.adam(.001,.9,.999,lr()),Adamax:()=>lc.adamax(.002,.9,.999,lr(),0),RMSProp:()=>lc.rmsprop(.001,.9,0,lr()),SGD:()=>lc.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new z(`Unknown Optimizer ${e}`)}function P0(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!O0(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){let n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function O0(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){let t=Object.keys(e);for(let n of t)if("string"!=typeof n||!O0(e[n]))return!1;return!0}if(Array.isArray(e)){for(let t of e)if(!O0(t))return!1;return!0}return!1}{let t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function sD(e,t,n,a=console.log){let r,s=O8(e),i=["Layer (type)","Input Shape","Output shape","Param #"];if(s?(t=t||90,n=n||[.32,.61,.89,1]):(t=t||115,n=n||[.24,.48,.7,.8,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){i.push("Receives inputs"),r=[];for(let t in e.nodesByDepth)r.push(...e.nodesByDepth[t])}a("_".repeat(t)),qy(i,n,a),a("=".repeat(t));let o=e.layers;for(let e=0;e<o.length;++e)s?P8(o[e],n,a):L8(o[e],n,r,a),a((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();let l=F8(e),u=Pm(e.nonTrainableWeights);a(`Total params: ${l+u}`),a(`Trainable params: ${l}`),a(`Non-trainable params: ${u}`),a("_".repeat(t))}function F8(e){let t;return t=null!=e.collectedTrainableWeights?Pm(e.collectedTrainableWeights):Pm(e.trainableWeights),t}function O8(e){let t=!0,n=[],a=[];for(let t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(let e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}a.push(...e)}if(t)for(let n of e.layers){let e=!1;for(let r of n.inboundNodes)if(-1!==a.indexOf(r)){if(e){t=!1;break}e=!0}if(!t)break}return t}function qy(e,t,n=console.log){let a="";for(let n=0;n<e.length;++n)n>0&&(a=a.slice(0,a.length-1)+" "),a+=e[n],a=a.slice(0,t[n]),a+=" ".repeat(t[n]-a.length);n(a)}function P8(e,t,n){let a,r;try{r=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){r="multiple"}try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}qy([`${e.name} (${e.getClassName()})`,r,a,e.countParams().toString()],t,n)}function L8(e,t,n,a){let r,s;try{s=e.inboundNodes.map((e=>JSON.stringify(e.inputShapes))).join(",")}catch(e){s="multiple"}try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}let i=[];for(let t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){let n=t.inboundLayers[e].name,a=t.nodeIndices[e],r=t.tensorIndices[e];i.push(`${n}[${a}][${r}]`)}let o=e.name,l=e.getClassName(),u=0===i.length?"":i[0];qy([`${o} (${l})`,s,r,e.countParams().toString(),u],t,a);for(let e=1;e<i.length;++e)qy(["","","","",i[e]],t,a)}function iD(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function wc(e,t){if(null===e)return null;if("string"==typeof e)return ol(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],a=e.length;for(let r=0;r<a;++r){let a=e[r];iD(t,r,a)?n.push(a):n.push(wc(a,t))}return n}{let t={};for(let n of Object.keys(e)){let a=e[n];if("name"===n&&"string"==typeof a)t[n]=a;else{let e=ol(n);t[e]=wc(a,e)}}return t}}function Ky(e,t){if(null==e)return null;if("string"==typeof e)return No(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){let n=[],a=e.length;for(let r=0;r<a;++r){let a=e[r];iD(t,r,a)?n.push(a):n.push(Ky(a,t))}return n}{let t={};for(let n of Object.keys(e)){let a=e[n];t[No(n)]="name"!==n&&"className"!==n||"string"!=typeof a?Ky(a,n):a}return t}}var Hm="4.1.0",Vn=class extends Et{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){let e=this.getClassName().toLowerCase();this.name=yu(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],To(this.inputs).length!==this.inputs.length)throw new z(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);To(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(let e of this.outputs){let t=e.sourceLayer,n=e.nodeIndex,a=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(a)}for(let e of this.inputs){let t=e.sourceLayer,n=e.nodeIndex,a=e.tensorIndex;io(0===n,"input layer has >1 nodes"),io(0===a,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(a)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){let n=this.inputLayers[t];if(!(n instanceof Xs))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(let e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));let t={},n={},a={},r={},s={},i=[],o=(e,t,n,a,r,l)=>{(null==a||null==r||null==l)&&(a=e.sourceLayer,r=e.nodeIndex,l=e.tensorIndex);let u=a.inboundNodes[r];if(-1!==n.indexOf(u))throw new Kr(`The tensor ${e.name} at layer "${a.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(Vn.nodeKey(a,r)),a.id in s||(s[a.id]=Object.keys(s).length),-1===n.indexOf(u)&&n.push(u);let p=u.inboundLayers.length;for(let e=0;e<p;e++){let a=u.inputTensors[e],r=u.inboundLayers[e],s=u.nodeIndices[e],i=u.tensorIndices[e];o(a,t,n,r,s,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(let e of this.outputs)o(e,l,u);let p=i.slice().reverse();for(let e of p){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id],i=null==a[e.outboundLayer.id]?0:a[e.outboundLayer.id];s=Math.max(s,i),a[e.outboundLayer.id]=s,r[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let a=0;a<e.inboundLayers.length;a++){let r=e.inboundLayers[a],i=e.nodeIndices[a],o=r.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,l),n[o.id]=o}}let h={};for(let e in t){let a=t[e];a in h||(h[a]=[]),h[a].push(n[e])}let d={};for(let e in a){let t=a[e];t in d||(d[t]=[]),d[t].push(r[e])}let c=Object.keys(d).map((e=>parseInt(e,10))).sort(bh);this.layers=[];for(let e of c){let t=d[e];t.sort(((e,t)=>{let n=s[e.id],a=s[t.id];return n<a?-1:n>a?1:0}));for(let e of t)e instanceof Vn&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,c=Object.keys(h).map((e=>parseInt(e,10))).sort(bh);let f=this.inputs.slice(),m=[];for(let e of c)for(let t of h[e]){let e=t.outboundLayer;if(null!=e){for(let n of t.inputTensors)if(-1===f.indexOf(n))throw new Kr(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(let e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;let g=this.layers.map((e=>e.name));for(let e of g){let t=g.filter((t=>t===e)).length;if(1!==t)throw new Kr(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new al({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();let e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(let t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(let t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new z("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(let t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){let n={},a=0;for(let e of this.layers)for(let t of e.weights){if(null!=n[t.originalName])throw new z(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,a++}let r=[];for(let a in e){let s=a;if(null==n[a]){let e=a.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])r.push([n[s],e[a]]);else if(t)throw new z(`Provided weight data has no target variable: ${a}`);delete n[s]}if(t){let e=[];for(let t in n)e.push(t);if(e.length>0)throw new z(`${e.length} of ${a} weights are not set: ${e}`)}Lm(r)}updatedConfig(){let e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Hm}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){let n=Ky(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return B((()=>{e=xe(e);let n=new _o;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return xc(this.outputs,n,t)}))}computeMask(e,t){return B((()=>{let n;return e=xe(e),n=null==t?So(null,e.length):xe(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){let t=Om(e);if(t.length!==this.inputLayers.length)throw new z(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);let n={};for(let e=0;e<t.length;e++){let a=this.inputLayers[e],r=t[e];n[a.name+"_0_0"]=r}let a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(bh);if(a.length>1)for(let e of a){let t=this.nodesByDepth[e];for(let e of t){let t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;let a=[];for(let t=0;t<e.inboundLayers.length;t++){let r=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${r.name}_${s}_${i}`];a.push(o)}let r=Om(t.computeOutputShape(Tr(a))),s=t.inboundNodes.indexOf(e);for(let e=0;e<r.length;e++)n[`${t.name}_${s}_${e}`]=r[e]}}let r=[],s=[];for(let e=0;e<this.outputLayers.length;e++){let t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],a=this.outputLayersTensorIndices[e],r=`${t.name}_${n}_${a}`;s.push(r)}for(let e=0;e<s.length;e++){let t=s[e];io(t in n),r.push(n[t])}return Tr(r)}runInternalGraph(e,t){null==t&&(t=So(null,e.length));let n={};for(let a=0;a<this.inputs.length;++a){let r=this.inputs[a],s=e[a],i=t[a];n[r.id]=[s,i]}let a=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(bh);for(let e of a){let t=this.nodesByDepth[e];for(let e of t){let t=e.outboundLayer,a=e.inputTensors,r=e.outputTensors,s=new Array;for(let e of a)e.id in n&&s.push(n[e.id]);if(s.length===a.length){let a,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===s.length){let[e,n]=s[0];null==u.mask&&(u.mask=n),o=xe(t.call(e,u)),l=xe(t.computeMask(e,n)),a=[e],i=[n]}else a=s.map((e=>e[0])),i=s.map((e=>e[1])),null==u.mask&&(u.mask=i),o=xe(t.call(a,u)),l=xe(t.computeMask(a,i));if(t.activityRegularizer)throw new vt("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){let t=r[e],a=o[e],s=l[e];n[t.id]=[a,s]}}}}let r=[],s=[],i=[];for(let e of this.outputs){io(e.id in n,`Could not compute output ${e.name} : ${e.id}`);let[t,a]=n[e.id];i.push(t.shape),r.push(t),s.push(a)}return[r,s,i]}buildNodeConversionMap(e){let t,n={};for(let e of this.layers){t=e instanceof Vn?1:0;for(let a=0;a<e.inboundNodes.length;a++){let r=Vn.nodeKey(e,a);this.containerNodes.has(r)&&(n[r]=t,t+=1)}}return n}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new z(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new z("Provide either a layer name or layer index");for(let t of this.layers)if(t.name===e)return t;throw new z(`No such layer: ${e}`)}calculateLosses(){return B((()=>{let e=[];for(let t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){let a=Vn.nodeKey(t,n);this.containerNodes.has(a)&&e.push(...t.calculateLosses())}return e}))}getConfig(){let e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(let e of this.layers){let a=e.getClassName(),r=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){let a=e.inboundNodes[n],r=Vn.nodeKey(e,n),i={};if(this.containerNodes.has(r)){if(a.callArgs)try{JSON.stringify(a.callArgs),i=a.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${a.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(a.inboundLayers.length>0){let e=[];for(let n=0;n<a.inboundLayers.length;n++){let r=a.inboundLayers[n],s=a.nodeIndices[n],o=a.tensorIndices[n],l=t[Vn.nodeKey(r,s)];null==l&&(l=0),e.push([r.name,l,o,i])}s.push(e)}}}let i={};i.name=e.name,i.className=a,i.config=r,i.inboundNodes=s,n.push(i)}e.layers=n;let a=[];for(let e=0;e<this.inputLayers.length;e++){let n=this.inputLayers[e],r=this.inputLayersNodeIndices[e],s=Vn.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);let o=this.inputLayersTensorIndices[e];a.push([n.name,i,o])}e.inputLayers=a;let r=[];for(let e=0;e<this.outputLayers.length;e++){let n=this.outputLayers[e],a=this.outputLayersNodeIndices[e],s=Vn.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);let o=this.outputLayersTensorIndices[e];r.push([n.name,i,o])}return e.outputLayers=r,e}static fromConfig(e,t,n={},a=!1){let r={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){let n,a=[];for(let s of t){let o=s[0],l=s[1],u=s[2];if(n=null==s[3]?{}:s[3],!(o in r))return void i(e,t);let p=r[o];if(p.inboundNodes.length<=l)return void i(e,t);let h=p.inboundNodes[l];a.push(h.outputTensors[u])}a.length>0&&e.apply(Tr(a),n)}function l(e){let n=e.name,s=yn(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(a),r[n]=s,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new z(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)}))}let u=t.name,p=t.layers;for(let e of p)l(e);for(;!I$(s);)for(let e of p){let t=r[e.name];if(t.name in s){let e=s[t.name];delete s[t.name];for(let n of e)o(t,n)}}let h=[],d=[],c=t.inputLayers;for(let e of c){let t=e[0],n=e[1],a=e[2];io(t in r);let s=r[t].inboundNodes[n].outputTensors;h.push(s[a])}let f=t.outputLayers;for(let e of f){let t=e[0],n=e[1],a=e[2];io(t in r);let s=r[t].inboundNodes[n].outputTensors;d.push(s[a])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new z("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(let e of this.layers)if(e.stateful)return!0;return!1}resetStates(){B((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}};function M8(e,t,n){let a=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===a)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==a)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${a} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){let n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${a}) outputs, so ${n} must be either an array with ${a} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}function jy(e,t){return M8(e,t,"classWeight")}async function Xy(e,t,n,a){if(null!=t||null!=a)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){let t=B((()=>{if(1===e.shape.length)return an(e);if(2===e.shape.length){if(e.shape[1]>1)return Ri(e,1);if(1===e.shape[1])return R(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),a=Array.from(await t.data());Nt(t);let r=[];return a.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);r.push(n[e])})),Ke(r,"float32")}return null}function aD(e,t){return D(e,t)}var z8=32;function cD(e,t){let n,a,r=t;n=r.xs,a=r.ys,y.assert(null!=n&&null!=a,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));let s=lD("input",e.inputNames,n),i=lD("output",e.outputNames,a),o=s[0].shape[0];y.assert(s.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),y.assert(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<s.length;t++)y.assert(s[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)y.assert(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:s,ys:i}}function lD(e,t,n){if(n instanceof Ft)return[n];if(Array.isArray(n))return y.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{let a=[];for(let r of t){if(null==n[r])throw new z(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);a.push(n[r])}return a}}function B8(e){if(3===e.length)throw new vt("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}async function pD(e,t,n){let a=null!=n.batchesPerEpoch;if(y.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),y.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),y.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),y.assert(!a||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),y.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{let r,s,i=null!=n.validationData;if(i)if(uD(n.validationData))y.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{let e=B8(n.validationData);r=e.xs,s=e.ys}let o,l=e.makeTrainFunction(),u=e.getDedupedMetricsNames();o=i?u.slice().concat(u.map((e=>"val_"+e))):u.slice();let p=By(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:c}=Vy(p,h,n.epochs,null,null,V8(t,n),null,i,o);d.setModel(e),e.history=c,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){let o={};await d.onEpochBegin(f);let p=0,h=0;for(a||(m=await t.iterator());!a||p<n.batchesPerEpoch;){let t=await m.next();if(a&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${p} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${n.batchesPerEpoch*n.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(null!=t.value){let{xs:a,ys:r}=cD(e,t.value),s={};s.batch=h,s.size=a[0].shape[0],await d.onBatchBegin(h,s);let i=[];if(null!=n.classWeight){let t=jy(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Xy(r[e],null,t[e]))}let o=a.concat(r).concat(i),c=l(o);Nt(o);for(let e=0;e<u.length;++e){let t=u[e],n=c[e];s[t]=n,Ae(n)}await d.onBatchEnd(h,s),Py(s),h++,p++}if(a?p>=n.batchesPerEpoch:t.done){if(i){let t;t=uD(n.validationData)?xe(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):xe(e.evaluate(r,s,{batchSize:null==n.validationBatchSize?z8:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)o[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,o),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}function V8(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}function uD(e){return"function"==typeof e.iterator}function G8(e){return"function"==typeof e.next}async function mD(e,t,n){let a=null!=(n=n||{}).batches,r=e.testFunction,s=[];if(n.verbose>0)throw new vt("Verbose mode is not implemented yet.");y.assert(!a||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));let i=G8(t)?t:await t.iterator(),o=0,l=0;for(;!a||l<n.batches;){let t=await i.next();if(s=B((()=>{if(t.value){let{xs:n,ys:a}=cD(e,t.value),i=n.concat(a),u=B((()=>r(i)));if(Nt(i),0===l)for(let e=0;e<u.length;++e)s.push(mt(0));let p=i[0].shape[0];for(let e=0;e<u.length;++e){let t=u[e],n=s[e];s[e]=B((()=>X(s[e],D(p,t)))),l>0&&Nt(n)}Nt(u),o+=p,++l}return s})),t.done){a&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<s.length;++e){let t=s[e];s[e]=pt(s[e],o),Nt(t)}return Tr(s)}function Yy(e){y.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function qm(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>sl(e,t,n-t))):sl(e,t,n-t)}function Zy(e,t){return B((()=>null==e?null:Array.isArray(e)?e.map((e=>Zy(e,t))):Ay(e,"int32"===t.dtype?t:J(t,"int32"))))}function Jy(e,t){let n=[],a=0,r=null;for(;a<e;)r=a+t,r>=e&&(r=e),n.push([a,r]),a=r;return n}function L0(e){let t=[];e instanceof Ft&&(e=[e]);for(let n=0;n<e.length;++n){let a=e[n];if(1===a.rank)t.push(il(a,1));else{if(0===a.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(a)}}return t}function Ao(e,t){if(null==e)return;let n=[];if(t instanceof Ft)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(let e in t){let a=t[e];n.push(a.id)}let a=[];if(e instanceof Ft)-1===n.indexOf(e.id)&&a.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&a.push(e)}));else if(null!=e)for(let t in e){let r=e[t];-1===n.indexOf(r.id)&&a.push(r)}a.forEach((e=>{e.isDisposed||e.dispose()}))}function W8(e){return e instanceof Ft}function M0(e){return Array.isArray(e)}function fD(e){return!W8(e)&&!M0(e)}function dD(e,t,n,a=!0,r=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(M0(e)&&e.length>0)t=!0;else if(fD(e)){for(let n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new z(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let s;if(fD(e)){s=[];for(let n of t){if(null==e[n])throw new z(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(M0(e)){if(e.length!==t.length)throw new z(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(t.length>1)throw new z(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=L0(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;let i=s[e];if(i.shape.length!==n[e].length)throw new z(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!a)continue;let s=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&s!==o)throw new z(`${r} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function U8(e,t,n){let a=To(e.map((e=>e.shape[0])));a.sort();let r=To(t.map((e=>e.shape[0])));if(r.sort(),a.length>1)throw new z(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new z(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(a.length>0&&r.length>0&&!y.arraysEqual(a,r))throw new z(`Input Tensors should have the same number of samples as target Tensors. Found ${a[0]} input sample(s) and ${r[0]} target sample(s).`)}function H8(e,t,n){let a=[Xi,Um,bc];for(let r=0;r<e.length;++r){let s=e[r],i=t[r],o=n[r];if(null!=i){if(i===bc&&1===s.shape[s.shape.length-1])throw new z(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==a.indexOf(i)){let e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){let a=e[n],r=t[n];if(null!=r&&a!==r)throw new z(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function hD(e,t,n,a=!0,r=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new z(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new z(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;let i=s[e];if(i.shape.length!==n[e].length)throw new z(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!a)continue;let o=i.shape[s],l=n[e][s];if(null!=l&&l!==o)throw new z(`Error when checking ${r}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function q8(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{let e=[];for(let a of t){let t=n.hasOwnProperty(a)?n[a]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}var K8="layers-model",Gn=class extends Vn{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new z("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");sD(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=oD(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Hr))throw new z("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new z(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map((e=>Gy(e)))}else{let n=Gy(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(let t in e.loss)if(-1===this.outputNames.indexOf(t))throw new z(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(let n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Gy(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){let t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}let n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Ks("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;let t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));let a=q8(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Ks("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,a,s;for(let i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){let t,r=this.internalOutputShapes[e];1===r[r.length-1]||this.lossFunctions[e]===Um?-1!==["accuracy","acc"].indexOf(i)?a=kh:-1!==["crossentropy","ce"].indexOf(i)&&(a=Uy):this.lossFunctions[e]===Wm?-1!==["accuracy","acc"].indexOf(i)?a=Hy:-1!==["crossentropy","ce"].indexOf(i)&&(a=F0):-1!==["accuracy","acc"].indexOf(i)?a=Eh:-1!==["crossentropy","ce"].indexOf(i)&&(a=_h),-1!==["accuracy","acc"].indexOf(i)?t="acc":-1!==["crossentropy","ce"].indexOf(i)&&(t="ce"),s=a,n=""+t}else s=rD(i),n=""+Ah(i);let t;Ks(n,(()=>{t=s})),r(e,n,t)}})(a[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){let a=null==n.batchSize?32:n.batchSize;Yy(a);let r=this.standardizeUserDataXY(e,t,!0,a);try{let s=r[0].concat(r[1]);this.makeTestFunction();let i=this.testFunction;return Tr(this.testLoop(i,s,a,n.verbose,n.steps))}finally{Ao(r[0],e),Ao(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),mD(this,e,t)}checkNumSamples(e,t,n,a="steps"){let r;if(null!=n){if(r=null,null!=t)throw new z(`If ${a} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new z(`Either the input data should have a defined shape, or ${a} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new z("`outputs` is an empty Array, which is not allowed.");let n=Array.isArray(t),a=n?t:[t],r=this.retrieveSymbolicTensors(a),s=new _o;if(e instanceof Ft&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new z(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(let t of this.inputs){let n=e[t.name];if(null==n)throw new z(`No value is provided for the model's input ${t.name}`);s.add(t,n)}let i=xc(r,s);return n?i:i[0]}retrieveSymbolicTensors(e){let t=So(null,e.length),n=e.length;for(let a of this.layers){let r=Array.isArray(a.output)?a.output:[a.output],s=r.map((e=>e.name));for(let a=0;a<e.length;++a){let i=s.indexOf(e[a]);if(-1!==i&&(t[a]=r[i],n--),0===n)break}if(0===n)break}if(n>0){let n=[];throw t.forEach(((t,a)=>{null==t&&n.push(e[a])})),new z(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return B((()=>{let a=this.checkNumSamples(e);if(n)throw new vt("Verbose predictLoop() is not implemented yet.");let r=Jy(a,t),s=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t)B((()=>{let n=r[t][0],a=r[t][1],s=qm(e,n,a),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});let o=new _o(i);return xc(this.outputs,o)})).forEach(((e,t)=>s[t].push(e)));return Tr(s.map((e=>oe(e,0))))}))}predict(e,t={}){let n=L0(e);hD(n,this.inputNames,this.feedInputShapes,!1);try{let a=null==t.batchSize?32:t.batchSize;return Yy(a),this.predictLoop(n,a)}finally{Ao(n,e)}}predictOnBatch(e){hD(e,this.inputNames,this.feedInputShapes,!0);let t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,a){if(null==this.optimizer_)throw new Kr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");let r=[];for(let e=0;e<this.feedOutputShapes.length;++e){let t=this.feedOutputShapes[e];this.feedLossFns[e]===Wm?r.push(t.slice(0,t.length-1).concat([1])):r.push(t)}if(U8(e=dD(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=dD(t,this.feedOutputNames,r,!1,"target"),null),H8(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=a&&a>0&&e[0].shape[0]%a!=0)throw new z(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${a}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,a,r=!0,s){let[i,o]=this.standardizeUserDataXY(e,t,r,s);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=a){let e=jy(a,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await Xy(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,a=0,r){return B((()=>{let s=this.checkNumSamples(t,n,r,"steps"),i=[];if(a>0)throw new vt("Verbose mode is not implemented yet.");if(null!=r)throw new vt("steps mode in testLoop() is not implemented yet");{let a=Jy(s,n),r=Ke(fn(0,s));for(let n=0;n<a.length;++n){let s=a[n][0],o=a[n][1],l=sl(r,s,o-s),u=Zy(t,l),p=e(u);if(0===n)for(let e=0;e<p.length;++e)i.push(mt(0));for(let e=0;e<p.length;++e){let t=p[e];i[e]=X(i[e],D(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=pt(i[e],s)}return i}))}getDedupedMetricsNames(){let e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){let a=e[n],r=a;S0(e,a)>1&&(r+=`_${S0(e.slice(0,n),a)}`),t.push(r)}return t}makeTrainFunction(){return e=>{let t=[],n=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{let e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});let i,o=new _o(e),l=xc(this.outputs,o,{training:!0});for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(a[e],l[e]);null!=r[e]&&(n=aD(n,r[e]));let s=Se(n);t.push(s),i=0===e?n:X(i,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{let t=this.metricsTensors[e][0],r=this.metricsTensors[e][1];n=Se(t(a[r],l[r]))}Ae(n),s.push(n)}return i=Se(i),this.calculateLosses().forEach((e=>{i=X(i,e)})),i}),!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>B((()=>{let t,n=[],a=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:a[e]});let i=new _o(s),o=xc(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){let a=this.lossFunctions[e],s=Se(a(r[e],o[e]));t=0===e?s:X(t,s),n.push(t)}for(let e=0;e<this.metricsTensors.length;++e){let t=this.metricsTensors[e][0],a=this.metricsTensors[e][1],s=Se(t(r[a],o[a]));n.push(s)}return n}))}async fit(e,t,n={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,r,s,i,o,l,u,p,h;this.isTraining=!0;try{let d=null==n.batchSize?32:n.batchSize;Yy(d);let c=!1,f=await this.standardizeUserData(e,t,n.sampleWeight,n.classWeight,c,d);a=f[0],r=f[1],h=f[2];let m,g=!1;if(null!=n.validationData&&n.validationData.length>0){if(g=!0,2!==n.validationData.length)throw 3===n.validationData.length?new vt("validationData including sample weights is not supported yet."):new z(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${n.validationData} is invalid.`);o=n.validationData[0],l=n.validationData[1];let e=!0,t=await this.standardizeUserData(o,l,null,null,e,d);u=t[0],p=t[1],m=u.concat(p)}else if(null!=n.validationSplit&&n.validationSplit>0&&n.validationSplit<1){g=!0;let e=Math.floor(a[0].shape[0]*(1-n.validationSplit)),t=a[0].shape[0];u=qm(a,e,t),s=a,a=qm(a,0,e),p=qm(r,e,t),i=r,r=qm(r,0,e),m=u.concat(p)}else null!=n.validationSteps&&(g=!0);let y=a.concat(r).concat(h);this.checkTrainableWeightsConsistency();let b,x,v=this.makeTrainFunction(),w=this.getDedupedMetricsNames();g?(this.makeTestFunction(),b=this.testFunction,x=w.slice().concat(w.map((e=>"val_"+e)))):(b=null,m=[],x=w.slice());let k=By(n.callbacks,n.yieldEvery);return await this.fitLoop(v,y,w,d,n.epochs,n.verbose,k,b,m,n.shuffle,x,n.initialEpoch,null,null)}finally{this.isTraining=!1,Ao(a,e),Ao(r,t),Ao(s,e),Ao(i,t),Ao(u,o),Ao(p,l),null!=h&&Nt(h)}}async fitLoop(e,t,n,a,r,s,i,o,l,u,p,h,d,c){null==a&&(a=32),null==r&&(r=1),null==u&&(u=!0),null==h&&(h=0);let f=!1;if(null!=o&&null!=l&&(f=!0),null!=c&&(f=!0,null==d))throw new z("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");let m,g=this.checkNumSamples(t,a,d,"steps_per_epoch");null!=g&&(m=fn(0,g)),null==s&&(s=1);let{callbackList:b,history:x}=Vy(i,s,r,h,g,d,a,f,p);b.setModel(this),this.history=x,await b.onTrainBegin(),this.stopTraining_=!1;for(let s=h;s<r;++s){await b.onEpochBegin(s);let r={};if(null!=d)throw new vt("stepsPerEpoch mode is not implemented yet.");{if("batch"===u)throw new vt("batch shuffling is not implemneted yet");u&&y.shuffle(m);let s=Ke(m),i=Jy(g,a);for(let u=0;u<i.length;++u){let p={};if(await b.onBatchBegin(u,p),B((()=>{let h=i[u][0],d=i[u][1],c=sl(s,h,d-h);p.batch=u,p.size=d-h;let m=Zy(t,c),g=e(m);for(let e=0;e<n.length;++e){let t=n[e],a=g[e];p[t]=a,Ae(a)}if(u===i.length-1&&f){let e=this.testLoop(o,l,a);for(let t=0;t<n.length;++t){let a=n[t],s=e[t];Ae(s),r["val_"+a]=s}}})),await b.onBatchEnd(u,p),Py(p),this.stopTraining_)break}s.dispose()}if(await b.onEpochEnd(s,r),this.stopTraining_)break}return await b.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return pD(this,e,t)}async trainOnBatch(e,t){let n=await this.standardizeUserData(e,t),a=n[0],r=n[1],s=this.makeTrainFunction()(a.concat(r)),i=[];for(let e of s){let t=await e.data();i.push(t[0])}return Nt(s),Ao(n[0],e),Ao(n[1],t),Tr(i)}getNamedWeights(e){let t=[],n=null!=e&&e.trainableOnly,a=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let e=0;e<a.length;++e)n&&!a[e].trainable||t.push({name:a[e].originalName,tensor:r[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){let e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){let t=lh().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-lh().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=No(this.loss);else if(Array.isArray(this.loss)){for(let e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>No(e)))}else{let t=Object.keys(this.loss);e={};let n=this.loss;for(let a of t){if("string"!=typeof n[a])throw new Error("Serialization of non-string loss is not supported.");e[a]=No(n[a])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[No(Ah(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>No(Ah(e))));{let e={};for(let t in this.metrics)e[t]=No(Ah(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");let t,n,a=yn(wc(e.optimizer_config));if("string"==typeof e.loss)t=ol(e.loss);else if(Array.isArray(e.loss))t=e.loss.map((e=>ol(e)));else if(null!=e.loss){t={};for(let n in e.loss)t[n]=ol(e.loss[n])}if(Array.isArray(e.metrics))n=e.metrics.map((e=>ol(e)));else if(null!=e.metrics){n={};for(let t in e.metrics)n[t]=ol(e.metrics[t])}this.compile({loss:t,metrics:n,optimizer:a})}async save(e,t){if("string"==typeof e){let t=$r.getSaveHandlers(e);if(0===t.length)throw new z(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new z(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new z("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");let n=await $r.encodeWeights(this.getNamedWeights(t)),a={modelTopology:this.toJSON(null,!1),format:K8,generatedBy:`TensorFlow.js tfjs-layers v${Hm}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){a.trainingConfig=this.getTrainingConfig();let e="optimizer",{data:t,specs:r}=await $r.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...r),n.data=$r.concatenateArrayBuffers([n.data,t])}return null!=this.userDefinedMetadata&&(P0(this.userDefinedMetadata,this.name,!0),a.userDefinedMetadata=this.userDefinedMetadata),a.weightData=n.data,a.weightSpecs=n.specs,e.save(a)}setUserDefinedMetadata(e){P0(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}};Gn.className="Model",Q.registerClass(Gn);var Qy=class extends Gn{};async function gD(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);let a=yn(wc(n),t);if(null!=e.weightsManifest){let t=await $r.loadWeights(e.weightsManifest,e.pathPrefix,a.weights.map((e=>e.originalName))),n={};for(let e of a.weights)n[e.originalName]=t[e.originalName];a.loadWeights(n),Nt(t)}return a}async function xD(e,t){if(null==t&&(t={}),"string"==typeof e){let n=$r.getLoadHandlers(e,t);if(0===n.length)n.push($r.browserHTTPRequest(e,t));else if(n.length>1)throw new z(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return j8(e,void 0,t)}async function j8(e,t,n){if(null==n&&(n={}),null==e.load)throw new z("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let a=await e.load(),r=a.modelTopology;null!=r.model_config&&(r=r.model_config);let s=null==n.strict||n.strict,i=null!=a.weightData&&null!=a.weightSpecs&&s,o=yn(wc(r),t,i),l=a.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=a.userDefinedMetadata&&o.setUserDefinedMetadata(a.userDefinedMetadata),null!=a.weightData){if(null==a.weightSpecs)throw new z("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");let{modelWeights:e,optimizerWeights:t}=X8(a.weightData,a.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),Nt(e),Nt(t.map((e=>e.tensor)))}return o}function X8(e,t){let n=$r.decodeWeights(e,t),a={},r=[];return t.forEach((e=>{"optimizer"===e.group?r.push({name:e.name,tensor:n[e.name]}):a[e.name]=n[e.name]})),{modelWeights:a,optimizerWeights:r}}Qy.className="Functional",Q.registerClass(Qy);var Yi=class extends Gn{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:yu("sequential_"),null!=e.layers)for(let t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new z(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){let t,n=e instanceof Yi||e instanceof Gn;if(n){if(t=e,1!==t.outputs.length)throw new z("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==t.inputs.length)throw new z("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new z("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");let t=Ry({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(n)this.outputs=t.outputs,this.inputs=t.inputs;else{if(1!==e.inboundNodes.length)throw new z(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new z("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=A0(this.outputs[0])}this.inboundNodes=[],new al({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:So(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{let t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{let e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(zt(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Gn({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Kr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Kr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Kr("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Kr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},a=!1){let r,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new z("Legacy serialization format not supported yet.");r=t}else y.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),r=t.layers,delete t.layers,s=t;let i=new e(s);if(!(i instanceof Yi))throw new vt(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(let e of r){let t=yn(e,void 0,a);a&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new z("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new z("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){let e=[];for(let t of this.layers){let n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}};function Y8(e){return new Gn(e)}function Z8(e){return new Yi(e)}function z0(e){return Ry(e)}function J8(e,t){xn.registerCallbackConstructor(e,t)}Yi.className="Sequential",Q.registerClass(Yi);var en=class extends Q.Serializable{getConfig(){return{}}},tb=class extends en{apply(e,t=1){return L$(e,t)}};tb.className="elu",Q.registerClass(tb);var eb=class extends en{apply(e){return mm(e)}};eb.className="selu",Q.registerClass(eb);var rb=class extends en{apply(e){return Pr(e)}};rb.className="relu",Q.registerClass(rb);var nb=class extends en{apply(e){return B((()=>Vi(6,Pr(e))))}};nb.className="relu6",Q.registerClass(nb);var ob=class extends en{apply(e){return e}};ob.className="linear",Q.registerClass(ob);var sb=class extends en{apply(e){return Jr(e)}};sb.className="sigmoid",Q.registerClass(sb);var ib=class extends en{apply(e){return z$(e)}};ib.className="hardSigmoid",Q.registerClass(ib);var ab=class extends en{apply(e){return Gs(e)}};ab.className="softplus",Q.registerClass(ab);var lb=class extends en{apply(e){return M$(e)}};lb.className="softsign",Q.registerClass(lb);var ub=class extends en{apply(e){return Fi(e)}};ub.className="tanh",Q.registerClass(ub);var Km=class extends en{apply(e,t=-1){return lu(e,t)}};Km.className="softmax",Q.registerClass(Km);var cb=class extends en{apply(e,t=-1){return im(e,t)}};cb.className="logSoftmax",Q.registerClass(cb);var pb=class extends en{apply(e,t=1){return B((()=>D(Jr(D(e,t)),e)))}};pb.className="swish",Q.registerClass(pb);var mb=class extends en{apply(e){return B((()=>D(e,Fi(Gs(e)))))}};function Ys(e){return e.getClassName()}function B0(e,t={}){return qi(e,Q.SerializationMap.getMap().classNameMap,t,"activation")}function Zs(e){if(null==e){return B0({className:"linear",config:{}})}if("string"==typeof e){let t={};return t.className=e,t.config={},B0(t)}return e instanceof en?e:B0(e)}function V0(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}mb.className="mish",Q.registerClass(mb);var fb=class extends Q.Serializable{},Iu=class extends fb{constructor(e){super(),V0(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return B((()=>{let t=Ne([1]);return this.hasL1&&(t=X(t,ft(D(this.l1,Ee(e))))),this.hasL2&&(t=X(t,ft(D(this.l2,cc(e))))),R(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}};function wD(e){return V0(e),new Iu({l1:null!=e?e.l1:null,l2:0})}function CD(e){return V0(e),new Iu({l2:null!=e?e.l2:null,l1:0})}Iu.className="L1L2",Q.registerClass(Iu);var yD={l1l2:"L1L2"};function me(e){return Sm(e)}function bD(e,t={}){return qi(e,Q.SerializationMap.getMap().classNameMap,t,"regularizer")}function be(e){return null==e?null:"string"==typeof e?bD({className:e in yD?yD[e]:e,config:{}}):e instanceof fb?e:bD(e)}var jm=class extends Et{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=St(e);let n=Pr(e);return null!=this.maxValue&&(n=vr(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){let e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}};jm.className="ReLU",Q.registerClass(jm);var Xm=class extends Et{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=St(e);return ru(n,this.alpha)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Xm.className="LeakyReLU",Q.registerClass(Xm);var Ym=class extends Et{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=de(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=be(e.alphaRegularizer),this.alphaConstraint=Be(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new z(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){let t=(e=zt(e)).slice(1);if(null!=this.sharedAxes)for(let e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);let n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new ye({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=St(e),au(e,this.alpha.read())}getConfig(){let e={alphaInitializer:Te(this.alphaInitializer),alphaRegularizer:me(this.alphaRegularizer),alphaConstraint:ze(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}};Ym.className="PReLU",Q.registerClass(Ym);var Zm=class extends Et{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new vt(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){let n=St(e);return Mi(n)}computeOutputShape(e){return e}getConfig(){let e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}};Zm.className="ELU",Q.registerClass(Zm);var Jm=class extends Et{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){let n=St(e);return D(n,J(Re(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){let e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}};Jm.className="ThresholdedReLU",Q.registerClass(Jm);var Qm=class extends Et{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Km).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){let n=St(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function vu(e,t,n){if("number"==typeof e)return So(e,t);if(e.length!==t)throw new z(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let a=0;a<t;++a){let r=e[a];if(!R$(r))throw new z(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${r}`)}return e}function kn(e,t,n,a,r=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(r-1))+1,Math.floor((s+a-1)/a)}function Js(e,t,n,a){if(null==e)return null;if("valid"===a)e=e*t+js([n-t,0]);else{if("same"!==a)throw new z(`Unsupport padding mode: ${a}.`);e*=t}return e}function $h(e,t){return B((()=>(Fe(t),"channelsFirst"===t?Ot(e,[0,2,3,1]):e)))}function G0(e,t){return B((()=>(Fe(t),"channelsFirst"===t?Ot(e,[0,2,3,4,1]):e)))}function tY(e,t,n,a=1,r="valid",s,i=1){return B((()=>{if(null==s&&(s=dn()),Fe(s),3!==e.shape.length)throw new z(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new z(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new z(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=Ot(e,[0,2,1])),"causal"===r)throw new vt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=tm(e,t,a,"same"===r?"same":"valid","NWC",i);return null!=n&&(o=hn(o,n)),o}))}function ID(e,t,n,a=[1,1],r="valid",s,i,o=null){return B((()=>{if(null==s&&(s=dn()),Fe(s),3!==e.rank&&4!==e.rank)throw new z(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new z(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=$h(e,s);if("causal"===r)throw new vt("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=pu.conv2d({x:l,filter:t,strides:a,pad:"same"===r?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(l=Ot(l,[0,3,1,2])),l}))}function eY(e,t,n,a=[1,1,1],r="valid",s,i){return B((()=>{if(null==s&&(s=dn()),Fe(s),4!==e.rank&&5!==e.rank)throw new z(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new z(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=G0(e,s);if("causal"===r)throw new vt("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=kx(o,t,a,"same"===r?"same":"valid","NDHWC",i),null!=n&&(o=hn(o,n)),"channelsFirst"===s&&(o=Ot(o,[0,4,1,2,3])),o}))}Qm.className="Softmax",Q.registerClass(Qm);var Cc=class extends Et{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Cc.verifyArgs(t),this.rank=e,Qe(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new vt(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=vu(t.kernelSize,e,"kernelSize"),this.strides=vu(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,mn(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Fe(this.dataFormat),this.activation=Zs(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=de(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Be(t.biasConstraint),this.biasRegularizer=be(t.biasRegularizer),this.activityRegularizer=be(t.activityRegularizer),this.dilationRate=vu(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new z(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new z(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new z(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(io("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Iy(e.kernelSize,"number",1,3))throw new z(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){let e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Ys(this.activation),useBias:this.useBias,biasInitializer:Te(this.biasInitializer),biasRegularizer:me(this.biasRegularizer),activityRegularizer:me(this.activityRegularizer),biasConstraint:ze(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}},Su=class extends Cc{constructor(e,t){super(e,t),this.kernel=null,Su.verifyArgs(t),this.filters=t.filters,Qe(this.filters,"filters"),this.kernelInitializer=de(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Be(t.kernelConstraint),this.kernelRegularizer=be(t.kernelRegularizer)}build(e){e=zt(e);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new z(`The channel dimension of the input should be defined. Found ${e[t]}`);let n=e[t],a=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return B((()=>{e=St(e);let t,n=null==this.bias?null:this.bias.read(),a=vy(this.activation.getClassName());if(null!=a&&2===this.rank)t=ID(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,a);else{if(1===this.rank)t=tY(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=ID(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new vt("convolutions greater than 3D are not implemented yet.");t=eY(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=zt(e);let t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){let a=kn(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(a)}let a=[e[0]];return"channelsLast"===this.dataFormat?(a=a.concat(t),a.push(this.filters)):(a.push(this.filters),a=a.concat(t)),a}getConfig(){let e={filters:this.filters,kernelInitializer:Te(this.kernelInitializer),kernelRegularizer:me(this.kernelRegularizer),kernelConstraint:ze(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new z(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}},ul=class extends Su{constructor(e){super(2,e),ul.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Iy(e.kernelSize,"number",1,2))throw new z(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}};ul.className="Conv2D",Q.registerClass(ul);var cl=class extends Su{constructor(e){super(3,e),cl.verifyArgs(e)}getConfig(){let e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new z(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}};cl.className="Conv3D",Q.registerClass(cl);var tf=class extends ul{constructor(e){if(super(e),this.inputSpec=[new ye({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new z(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=zt(e)).length)throw new z("Input should have rank 4; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new z("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ye({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return B((()=>{let t=St(e);if(4!==t.shape.length)throw new z(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);let n,a,r=t.shape,s=r[0];"channelsFirst"===this.dataFormat?(n=2,a=3):(n=1,a=2);let i=r[n],o=r[a],l=this.kernelSize[0],u=this.kernelSize[1],p=this.strides[0],h=this.strides[1],d=[s,Js(i,p,l,this.padding),Js(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Ot(t,[0,2,3,1]));let c=rm(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(c=Ot(c,[0,3,1,2])),null!=this.bias&&(c=hn(c,this.bias.read(),this.dataFormat)),null!=this.activation&&(c=this.activation.apply(c)),c}))}computeOutputShape(e){let t,n,a,r=(e=zt(e)).slice();"channelsFirst"===this.dataFormat?(t=1,n=2,a=3):(t=3,n=1,a=2);let s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return r[t]=this.filters,r[n]=Js(r[n],o,s,this.padding),r[a]=Js(r[a],l,i,this.padding),r}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};tf.className="Conv2DTranspose",Q.registerClass(tf);var ef=class extends cl{constructor(e){if(super(e),this.inputSpec=[new ye({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new z(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=zt(e)).length)throw new z("Input should have rank 5; Received input shape: "+JSON.stringify(e));let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new z("The channel dimension of the inputs should be defined. Found `None`.");let n=e[t],a=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",a,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new ye({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return B((()=>{let t=St(e);if(5!==t.shape.length)throw new z(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);let n,a,r,s=t.shape,i=s[0];"channelsFirst"===this.dataFormat?(r=2,n=3,a=4):(r=1,n=2,a=3);let o=s[r],l=s[n],u=s[a],p=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],c=this.strides[0],f=this.strides[1],m=this.strides[2],g=[i,Js(o,c,p,this.padding),Js(l,f,h,this.padding),Js(u,m,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Ot(t,[0,2,3,4,1]));let y=_x(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Ot(y,[0,4,1,2,3])),null!==this.bias&&(y=hn(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){let t,n,a,r,s=(e=zt(e)).slice();"channelsFirst"===this.dataFormat?(t=1,n=2,a=3,r=4):(t=4,n=1,a=2,r=3);let i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],p=this.strides[1],h=this.strides[2];return s[t]=this.filters,s[n]=Js(s[n],u,i,this.padding),s[a]=Js(s[a],p,o,this.padding),s[r]=Js(s[r],h,l,this.padding),s}getConfig(){let e=super.getConfig();return delete e.dilationRate,e}};ef.className="Conv3DTranspose",Q.registerClass(ef);var db=class extends Su{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new z("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new z("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new z(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=de(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=be(t.depthwiseRegularizer),this.depthwiseConstraint=Be(t.depthwiseConstraint),this.pointwiseInitializer=de(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=be(t.pointwiseRegularizer),this.pointwiseConstraint=Be(t.pointwiseConstraint)}build(e){if((e=zt(e)).length<this.rank+2)throw new z(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);let t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new z(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);let n=e[t],a=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let e=0;e<this.rank;++e)r.push(1);r.push(n*this.depthMultiplier,this.filters);let s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",a,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new ye({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return B((()=>{let t;if(e=St(e),1===this.rank)throw new vt("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Ot(e,[0,2,3,1])),t=fm(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=hn(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Ot(t,[0,3,1,2])),t}))}getConfig(){let e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Te(this.depthwiseInitializer),e.pointwiseInitializer=Te(this.pointwiseInitializer),e.depthwiseRegularizer=me(this.depthwiseRegularizer),e.pointwiseRegularizer=me(this.pointwiseRegularizer),e.depthwiseConstraint=ze(this.depthwiseConstraint),e.pointwiseConstraint=ze(this.pointwiseConstraint),e}};db.className="SeparableConv";var rf=class extends db{constructor(e){super(2,e)}};rf.className="SeparableConv2D",Q.registerClass(rf);var Nu=class extends Su{constructor(e){super(1,e),Nu.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){let e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Iy(e.kernelSize,"number",1,1))throw new z(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}};Nu.className="Conv1D",Q.registerClass(Nu);var nf=class extends Et{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return B((()=>{if(e=St(e),"channelsLast"===this.dataFormat){let t=Ch(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Ch(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{let t=Ch(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Ch(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){let e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};nf.className="Cropping2D",Q.registerClass(nf);var of=class extends Et{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Fe(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,$$(this.interpolation)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){let t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{let t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return B((()=>{let t=St(e),n=t.shape;if("channelsFirst"===this.dataFormat){t=Ot(t,[0,2,3,1]);let e=this.size[0]*n[2],a=this.size[1]*n[3],r="nearest"===this.interpolation?so.resizeNearestNeighbor(t,[e,a]):so.resizeBilinear(t,[e,a]);return Ot(r,[0,3,1,2])}{let e=this.size[0]*n[1],a=this.size[1]*n[2];return"nearest"===this.interpolation?so.resizeNearestNeighbor(t,[e,a]):so.resizeBilinear(t,[e,a])}}))}getConfig(){let e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}};function rY(e,t,n=[1,1],a="valid",r,s){return B((()=>{null==r&&(r=dn()),Fe(r);let i=$h(e,r);if(4!==e.rank)throw new z(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new z(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Li(i,t,n,"same"===a?"same":"valid","NHWC",s),"channelsFirst"===r&&(i=Ot(i,[0,3,1,2])),i}))}of.className="UpSampling2D",Q.registerClass(of);var sf=class extends Cc{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=de(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Be(e.depthwiseConstraint),this.depthwiseRegularizer=be(e.depthwiseRegularizer)}build(e){if((e=zt(e)).length<4)throw new z(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);let t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new z(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);let n=e[t],a=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",a,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return B((()=>{let t=rY(e=St(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=hn(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=zt(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=kn(t,this.kernelSize[0],this.padding,this.strides[0]),s=kn(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],a,r,s]:[e[0],r,s,a]}getConfig(){let e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Te(this.depthwiseInitializer),e.depthwiseRegularizer=me(this.depthwiseRegularizer),e.depthwiseConstraint=ze(this.depthwiseRegularizer),e}};function W0(e,t,n,a){if(Array.isArray(e)){if(null!=t||null!=n)throw new z("When inputs is an array, neither initialState or constants should be provided");null!=a&&(n=e.slice(e.length-a,e.length),e=e.slice(0,e.length-a)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function U0(e,t,n,a=!1,r,s,i=!1,o=!1){return B((()=>{let l=t.shape.length;if(l<3)throw new z(`Input should be at least 3D, but is ${l}D.`);let u=[1,0].concat(fn(2,l));if(t=Ot(t,u),null!=s)throw new vt("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=J(J(r,"bool"),"float32")).rank===l-1&&(r=sr(r,-1)),r=Ot(r,u)),a&&(t=mr(t,0),null!=r&&(r=mr(r,0)));let p,h,d,c=[],f=n,m=t.shape[0],g=dr(t);null!=r&&(h=dr(r));for(let t=0;t<m;++t){let n=g[t],a=B((()=>e(n,f)));if(null==r)p=a[0],f=a[1];else{let e=B((()=>{let e=h[t],n=ct(wr(e),e);return{output:X(D(a[0],e),D(f[0],n)),newStates:f.map(((t,r)=>X(D(a[1][r],e),D(t,n))))}}));p=e.output,f=e.newStates}o&&c.push(p)}return o&&(d=qe(c,1)),[p,d,f]}))}sf.className="DepthwiseConv2D",Q.registerClass(sf);var En=class extends Et{constructor(e){let t;if(super(e),null==e.cell)throw new z("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Sc({cells:e.cell}):e.cell,null==t.stateSize)throw new z("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new ye({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?fn(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Dy(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);let n,a=t[0];if(n=this.returnSequences?[e[0],e[1],a]:[e[0],a],this.returnState){let a=[];for(let n of t)a.push([e[0],n]);return[n].concat(a)}return n}computeMask(e,t){return B((()=>{Array.isArray(t)&&(t=t[0]);let e=this.returnSequences?t:null;if(this.returnState){let t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){let e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new vt("Constants support is not implemented in RNN yet.");Dy(e)&&(e=e[0]);let t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new ye({shape:[t,null,...n]});let a,r=[e[0]].concat(e.slice(2));if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!y.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),a))throw new z(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map((e=>new ye({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){B((()=>{if(!this.stateful)throw new Tn("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape[0];if(null==n)throw new z("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Ne([n,e]))):this.states_=[Ne([n,this.cell.stateSize])];else if(null==e)Nt(this.states_),null!=this.keptStates&&(Nt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Ne([n,e]))):this.states_[0]=Ne([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new z(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Nt(this.states_);for(let t=0;t<this.states_.length;++t){let a=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,r];if(!y.arraysEqual(a.shape,s))throw new z(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${a.shape}`);this.states_[t]=a}}this.states_=this.states_.map((e=>Ae(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});let r=W0(e,n,a,this.numConstants);e=r.inputs,n=r.initialState,a=r.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(let e of n)this.stateSpec.push(new ye({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=a&&(t.constants=a,s=s.concat(a),this.numConstants=a.length),s[0]instanceof tn){let n=[e].concat(s),a=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=a;let o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return B((()=>{let n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;e=St(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));let s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==s)throw new z(`RNN Layer has ${s} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");let i={training:a},o=U0(((e,t)=>{let n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],p=o[2];this.stateful&&this.resetStates(p,a);let h=this.returnSequences?u:l;return this.returnState?[h].concat(p):h}))}getInitialState(e){return B((()=>{let t=Ne(e.shape);return t=ft(t,[1,2]),t=il(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?_y(t,[1,e]):t)):this.cell.stateSize>1?[_y(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){let e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);let n=this.cell.getConfig();return this.getClassName()===En.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign(Object.assign(Object.assign({},n),e),t)}static fromConfig(e,t,n={}){let a=yn(t.cell,n);return new e(Object.assign(t,{cell:a}))}};En.className="RNN",Q.registerClass(En);var pl=class extends Et{},Ic=class extends pl{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Qe(this.units,"units"),this.activation=Zs(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=de(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=de(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=de(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=be(e.kernelRegularizer),this.recurrentRegularizer=be(e.recurrentRegularizer),this.biasRegularizer=be(e.biasRegularizer),this.kernelConstraint=Be(e.kernelConstraint),this.recurrentConstraint=Be(e.recurrentConstraint),this.biasConstraint=Be(e.biasConstraint),this.dropout=uc([1,js([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=uc([1,js([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=zt(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return B((()=>{if(2!==e.length)throw new z(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];let a=null!=t.training&&t.training;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=fl({ones:()=>wr(e),rate:this.dropout,training:a,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=fl({ones:()=>wr(n),rate:this.recurrentDropout,training:a,dropoutFunc:this.dropoutFunc}));let r,s=this.dropoutMask,i=this.recurrentDropoutMask;r=Eo(null!=s?D(e,s):e,this.kernel.read()),null!=this.bias&&(r=hn(r,this.bias.read())),null!=i&&(n=D(n,i));let o=X(r,Eo(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Ys(this.activation),useBias:this.useBias,kernelInitializer:Te(this.kernelInitializer),recurrentInitializer:Te(this.recurrentInitializer),biasInitializer:Te(this.biasInitializer),kernelRegularizer:me(this.kernelRegularizer),recurrentRegularizer:me(this.recurrentRegularizer),biasRegularizer:me(this.biasRegularizer),activityRegularizer:me(this.activityRegularizer),kernelConstraint:ze(this.kernelConstraint),recurrentConstraint:ze(this.recurrentConstraint),biasConstraint:ze(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}};Ic.className="SimpleRNNCell",Q.registerClass(Ic);var af=class extends En{constructor(e){e.cell=new Ic(e),super(e)}call(e,t){return B((()=>{null!=this.cell.dropoutMask&&(Nt(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Nt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return new e(t)}};af.className="SimpleRNN",Q.registerClass(af);var vc=class extends pl{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new z("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Qe(this.units,"units"),this.activation=Zs(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Zs(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=de(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=de(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=de(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=be(e.kernelRegularizer),this.recurrentRegularizer=be(e.recurrentRegularizer),this.biasRegularizer=be(e.biasRegularizer),this.kernelConstraint=Be(e.kernelConstraint),this.recurrentConstraint=Be(e.recurrentConstraint),this.biasConstraint=Be(e.biasConstraint),this.dropout=uc([1,js([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=uc([1,js([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){let t=(e=zt(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return B((()=>{if(2!==e.length)throw new z(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);let n=null!=t.training&&t.training,a=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=fl({ones:()=>wr(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=fl({ones:()=>wr(a),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));let r,s,i,o=this.dropoutMask,l=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=D(e,o[0]));let u=Eo(e,this.kernel.read());this.useBias&&(u=hn(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(a=D(a,l[0]));let p=this.recurrentKernel.read(),[h,d]=fr(p,[2*this.units,this.units],p.rank-1),c=Eo(a,h),[f,m,g]=fr(u,3,u.rank-1),[y,b]=fr(c,2,c.rank-1);r=this.recurrentActivation.apply(X(f,y)),s=this.recurrentActivation.apply(X(m,b));let x=Eo(D(s,a),d);i=this.activation.apply(X(g,x));let v=X(D(r,a),D(X(1,Ht(r)),i));return[v,v]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Ys(this.activation),recurrentActivation:Ys(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Te(this.kernelInitializer),recurrentInitializer:Te(this.recurrentInitializer),biasInitializer:Te(this.biasInitializer),kernelRegularizer:me(this.kernelRegularizer),recurrentRegularizer:me(this.recurrentRegularizer),biasRegularizer:me(this.biasRegularizer),activityRegularizer:me(this.activityRegularizer),kernelConstraint:ze(this.kernelConstraint),recurrentConstraint:ze(this.recurrentConstraint),biasConstraint:ze(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}};vc.className="GRUCell",Q.registerClass(vc);var lf=class extends En{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new vc(e),super(e)}call(e,t){return B((()=>{null!=this.cell.dropoutMask&&(Nt(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Nt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};lf.className="GRU",Q.registerClass(lf);var ml=class extends pl{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Qe(this.units,"units"),this.activation=Zs(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Zs(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=de(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=de(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=de(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=be(e.kernelRegularizer),this.recurrentRegularizer=be(e.recurrentRegularizer),this.biasRegularizer=be(e.biasRegularizer),this.kernelConstraint=Be(e.kernelConstraint),this.recurrentConstraint=Be(e.recurrentConstraint),this.biasConstraint=Be(e.biasConstraint),this.dropout=uc([1,js([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=uc([1,js([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;let n,a=(e=zt(e))[e.length-1];if(this.kernel=this.addWeight("kernel",[a,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){let e=this.biasInitializer,a=this.units;n=new((t=class extends gn{apply(t,n){let r=e.apply([a]),s=(new wu).apply([a]),i=e.apply([2*a]);return _0(_0(r,s),i)}}).className="CustomInit",t)}else n=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,n,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return B((()=>{let n=null!=t.training&&t.training;if(3!==e.length)throw new z(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let a=e[1],r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=fl({ones:()=>wr(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=fl({ones:()=>wr(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let s,i,o,l,u=this.dropoutMask,p=this.recurrentDropoutMask;0<this.dropout&&this.dropout<1&&(e=D(e,u[0]));let h=Eo(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(a=D(a,p[0])),h=X(h,Eo(a,this.recurrentKernel.read())),this.useBias&&(h=hn(h,this.bias.read()));let[d,c,f,m]=fr(h,4,h.rank-1);s=this.recurrentActivation.apply(d),i=this.recurrentActivation.apply(c),o=X(D(i,r),D(s,this.activation.apply(f))),l=this.recurrentActivation.apply(m);let g=D(l,this.activation.apply(o));return[g,g,o]}))}getConfig(){let e=super.getConfig(),t={units:this.units,activation:Ys(this.activation),recurrentActivation:Ys(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Te(this.kernelInitializer),recurrentInitializer:Te(this.recurrentInitializer),biasInitializer:Te(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:me(this.kernelRegularizer),recurrentRegularizer:me(this.recurrentRegularizer),biasRegularizer:me(this.biasRegularizer),activityRegularizer:me(this.activityRegularizer),kernelConstraint:ze(this.kernelConstraint),recurrentConstraint:ze(this.recurrentConstraint),biasConstraint:ze(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}};ml.className="LSTMCell",Q.registerClass(ml);var uf=class extends En{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new ml(e),super(e)}call(e,t){return B((()=>{null!=this.cell.dropoutMask&&(Nt(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Nt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);let n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}};uf.className="LSTM",Q.registerClass(uf);var Sc=class extends pl{constructor(e){super(e),this.cells=e.cells}get stateSize(){let e=[];for(let t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return B((()=>{let n=e.slice(1),a=[];for(let e of this.cells.slice().reverse())Array.isArray(e.stateSize)?a.push(n.splice(0,e.stateSize.length)):a.push(n.splice(0,1));a.reverse();let r,s=[];for(let i=0;i<this.cells.length;++i){let o=this.cells[i];n=a[i],r=0===i?[e[0]].concat(n):[r[0]].concat(n),r=o.call(r,t),s.push(r.slice(1))}n=[];for(let e of s.slice().reverse())n.push(...e);return[r[0]].concat(n)}))}build(e){let t;Dy(e)&&(e=e[0]),this.cells.forEach(((n,a)=>{Ks(`RNNCell_${a}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){let e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign(Object.assign({},e),t)}static fromConfig(e,t,n={}){let a=[];for(let e of t.cells)a.push(yn(e,n));return new e({cells:a})}get trainableWeights(){if(!this.trainable)return[];let e=[];for(let t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){let e=[];for(let t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){let t=[];for(let e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){let e=[];for(let t of this.cells)e.push(...t.weights);return vh(e)}setWeights(e){let t=[];for(let n of this.cells){let a=n.weights.length,r=e.splice(a);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}Lm(t)}};function fl(e){let{ones:t,rate:n,training:a=!1,count:r=1,dropoutFunc:s}=e,i=()=>null!=s?s(t(),n):$y(t(),n),o=()=>bu(i,t,a);return!r||r<=1?Ae(o().clone()):Array(r).fill(void 0).map(o).map((e=>Ae(e.clone())))}Sc.className="StackedRNNCells",Q.registerClass(Sc);var nY=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(n[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(a=Object.getOwnPropertySymbols(e);r<a.length;r++)t.indexOf(a[r])<0&&Object.prototype.propertyIsEnumerable.call(e,a[r])&&(n[a[r]]=e[a[r]])}return n},hb=class extends En{constructor(e){if(e.unroll)throw new vt("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new vt("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new ye({ndim:5})]}call(e,t){return B((()=>{if(null!=this.cell.dropoutMask&&(Nt(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Nt(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new z("ConvRNN2D cell does not support constants");let n=null==t?null:t.mask,a=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:a,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return B((()=>{let{stateSize:t}=this.cell,n=e.shape,a=this.computeSingleOutputShape(n),r=Ne([a[0],...a.slice(2)]);return Array.isArray(t)?Array(t.length).fill(r):[r]}))}resetStates(e,t=!1){B((()=>{if(!this.stateful)throw new Tn("Cannot call resetStates() on an RNN Layer that is not stateful.");let n=this.inputSpec[0].shape,a=this.computeSingleOutputShape(n),r=[a[0],...a.slice(2)];if(null==n[0])throw new z("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Ne(r))):this.states_=[Ne(r)];else if(null==e)Nt(this.states_),null!=this.keptStates&&(Nt(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Ne(r))):this.states_[0]=Ne(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new z(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Nt(this.states_);for(let t=0;t<this.states_.length;++t){let n=e[t],a=r;if(!y.arraysEqual(n.shape,a))throw new z(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>Ae(e.clone())))}))}computeSingleOutputShape(e){let{dataFormat:t,filters:n,kernelSize:a,padding:r,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],p=kn(l,a[0],r,s[0],i[0]),h=kn(u,a[1],r,s[1],i[1]);return[...e.slice(0,2),...o?[n,p,h]:[p,h,n]]}};hb.className="ConvRNN2D";var Nc=class extends ml{constructor(e){let{filters:t,kernelSize:n,strides:a,padding:r,dataFormat:s,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,Qe(this.filters,"filters"),this.kernelSize=vu(n,2,"kernelSize"),this.kernelSize.forEach((e=>Qe(e,"kernelSize"))),this.strides=vu(a||1,2,"strides"),this.strides.forEach((e=>Qe(e,"strides"))),this.padding=r||"valid",mn(this.padding),this.dataFormat=s||"channelsLast",Fe(this.dataFormat),this.dilationRate=vu(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>Qe(e,"dilationRate")))}build(e){var t;e=zt(e);let n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new z(`The channel dimension of the input should be defined. Found ${e[n]}`);let a=e[n],r=this.kernelSize.concat([a,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);let s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){let n=this.biasInitializer,a=this.filters;e=new((t=class extends gn{apply(e,t){return Tm([n.apply([a]),pr([a]),n.apply([2*a])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return B((()=>{if(3!==e.length)throw new z(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let n=t.training||!1,a=e[0],r=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=fl({ones:()=>wr(a),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?D(t[n],e):e,l=o(a,i,0),u=o(a,i,1),p=o(a,i,2),h=o(a,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=fl({ones:()=>wr(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));let d=this.recurrentDropoutMask,c=o(r,d,0),f=o(r,d,1),m=o(r,d,2),g=o(r,d,3),[y,b,x,v]=fr(this.kernel.read(),4,3),[w,k,I,S]=this.useBias?fr(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,w,this.padding),u=this.inputConv(u,b,k,this.padding),p=this.inputConv(p,x,I,this.padding),h=this.inputConv(h,v,S,this.padding);let[N,T,C,E]=fr(this.recurrentKernel.read(),4,3);c=this.recurrentConv(c,N),f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,E);let _=this.recurrentActivation.apply(X(l,c)),$=this.recurrentActivation.apply(X(u,f)),A=X(D($,s),D(_,this.activation.apply(X(p,m)))),R=D(this.recurrentActivation.apply(X(h,g)),this.activation.apply(A));return[R,R,A]}))}getConfig(){let e=super.getConfig(),{units:t}=e,n=nY(e,["units"]),a={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},n),a)}inputConv(e,t,n,a){let r=Sn(e,t,this.strides,a||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?hn(r,n,this.dataFormat):r}recurrentConv(e,t){return Sn(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}};Nc.className="ConvLSTM2DCell",Q.registerClass(Nc);var cf=class extends hb{constructor(e){let t=new Nc(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}};cf.className="ConvLSTM2D",Q.registerClass(cf);var Tc=class extends Et{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;let t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return B((()=>{this.invokeCallHook(e,t);let n=St(e);if(0<this.rate&&this.rate<1){let e=null!=t.training&&t.training,a=this.getNoiseShape(n);return bu((()=>$y(n,this.rate,a,this.seed)),(()=>n),e)}return e}))}getConfig(){let e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}};Tc.className="Dropout",Q.registerClass(Tc);var pf=class extends Tc{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){let t=e.shape;return[t[0],1,t[2]]}};pf.className="SpatialDropout1D",Q.registerClass(pf);var mf=class extends Et{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Qe(this.units,"units"),this.activation=Zs(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=de(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=de(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Be(e.kernelConstraint),this.biasConstraint=Be(e.biasConstraint),this.kernelRegularizer=be(e.kernelRegularizer),this.biasRegularizer=be(e.biasRegularizer),this.activityRegularizer=be(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){let t=(e=zt(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){let t=(e=zt(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return B((()=>{this.invokeCallHook(e,t);let n,a=St(e),r=vy(this.activation.getClassName());return null!=r?n=Eo(a,this.kernel.read(),r,this.bias?this.bias.read():null):(n=Eo(a,this.kernel.read()),null!=this.bias&&(n=hn(n,this.bias.read())),null!=this.activation&&(n=this.activation.apply(n))),n}))}getConfig(){let e={units:this.units,activation:Ys(this.activation),useBias:this.useBias,kernelInitializer:Te(this.kernelInitializer),biasInitializer:Te(this.biasInitializer),kernelRegularizer:me(this.kernelRegularizer),biasRegularizer:me(this.biasRegularizer),activityRegularizer:me(this.activityRegularizer),kernelConstraint:ze(this.kernelConstraint),biasConstraint:ze(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}};mf.className="Dense",Q.registerClass(mf);var ff=class extends Et{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=zt(e);for(let t of e.slice(1))if(null==t)throw new z(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],ko(e,1)]}call(e,t){return B((()=>{this.invokeCallHook(e,t);let n=St(e);if("channelsFirst"===this.dataFormat&&n.rank>1){let e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Ot(n,e)}return P$(n)}))}getConfig(){let e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);let t=super.getConfig();return Object.assign(e,t),e}};ff.className="Flatten",Q.registerClass(ff);var df=class extends Et{constructor(e){super(e),this.supportsMasking=!0,this.activation=Zs(e.activation)}call(e,t){return B((()=>{this.invokeCallHook(e,t);let n=St(e);return this.activation.apply(n)}))}getConfig(){let e={activation:Ys(this.activation)},t=super.getConfig();return Object.assign(e,t),e}};df.className="Activation",Q.registerClass(df);var hf=class extends Et{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return B((()=>F$(e=St(e),this.n)))}getConfig(){let e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}};hf.className="RepeatVector",Q.registerClass(hf);var gf=class extends Et{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){let n="Total size of new array must be unchanged.",a=t.slice(),r=1,s=null;for(let e=0;e<a.length;++e){let t=a[e];if(this.isUnknown(t)){if(null!==s)throw new z("Can only specifiy one unknown dimension.");s=e}else r*=t}let i=ko(e);if(null!==s){if(0===r||i%r!=0)throw new z(n);a[s]=i/r}else if(i!==r)throw new z(n);return a}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return B((()=>{this.invokeCallHook(e,t);let n=St(e),a=n.shape,r=a.slice(0,1).concat(this.fixUnknownDimension(a.slice(1),this.targetShape));return R(n,r)}))}getConfig(){let e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}};gf.className="Reshape",Q.registerClass(gf);var xf=class extends Et{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);let t=fn(1,e.dims.length+1);if(!y.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new ye({ndim:this.dims.length+1})]}computeOutputShape(e){let t=(e=zt(e)).slice();return this.dims.forEach(((n,a)=>{t[a+1]=e[n]})),t}call(e,t){return Ot(St(e),this.dimsIncludingBatch)}getConfig(){let e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}};xf.className="Permute",Q.registerClass(xf);var yf=class extends Et{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){let n=St(e);return ju(Ws(n,this.maskValue),-1)}call(e,t){return B((()=>{this.invokeCallHook(e,t);let n=St(e),a=ju(Ws(n,this.maskValue),-1,!0);return D(n,J(a,n.dtype))}))}};yf.className="Masking",Q.registerClass(yf);var bf=class extends Et{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(xe(e.inputLength))}this.inputDim=e.inputDim,Qe(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Qe(this.outputDim,"outputDim"),this.embeddingsInitializer=de(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=be(e.embeddingsRegularizer),this.activityRegularizer=be(e.activityRegularizer),this.embeddingsConstraint=Be(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return B((()=>this.maskZero?(e=St(e),Ws(e,It(e))):null))}computeOutputShape(e){if(e=zt(e),null==this.inputLength)return[...e,this.outputDim];let t=xe(this.inputLength);if(t.length!==e.length-1)throw new z(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let a=0;a<t.length;++a){let r=t[a],s=e[a+1];if(null!=r&&null!=s&&r!==s)throw new z(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==r&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return B((()=>{this.invokeCallHook(e,t);let n=St(e);"int32"!==n.dtype&&(n=Qr(n,"int32"));let a=Ay(this.embeddings.read(),R(n,[n.size]));return R(a,zt(this.computeOutputShape(n.shape)))}))}getConfig(){let e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Te(this.embeddingsInitializer),embeddingsRegularizer:me(this.embeddingsRegularizer),activityRegularizer:me(this.activityRegularizer),embeddingsConstraint:ze(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}};bf.className="Embedding",Q.registerClass(bf);var dl=class extends Et{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new vt}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;let n=e.slice(0,e.length-t.length);for(let a=0;a<t.length;++a){let r=e[e.length-t.length+a],s=t[a];if(null==r||null==s||r<0||s<0)n.push(null);else if(1===r)n.push(s);else if(1===s)n.push(r);else{if(r!==s)throw new z("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[zt(e)]),e.length<2)throw new z(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(let n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=To(t),t.length>1)throw new z(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){let a=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,a)}let a=e.map((e=>e.length));-1===e.indexOf(null)&&1===To(a).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return B((()=>{if(this.reshapeRequired){let t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){let a=js(n);for(let n of e){let e=n.rank;for(let t=0;t<a-e;++t)n=il(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(let a of e){let e=a.rank;if(null==e){let e=a.shape,r=e[0],s=e.slice(1).concat([r]),i=R(a,[r].concat(ko(e.slice(1))));i=Ot(i,[1,0]),i=R(i,s),t.push(i),n=!0}else if(e>1){let r=fn(1,e).concat([0]);t.push(Ot(a,r)),n=!0}else t.push(a)}let a=this.mergeFunction(t),r=a.rank;if(n)if(null==r){let e=a.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));a=R(Ot(R(a,[-1,t]),[1,0]),n)}else if(r>1){let e=[r-1].concat(fn(0,r-1));a=Ot(a,e)}return a}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){let a=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,a)}let n=[];for(let t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=To(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return B((()=>{if(null==t)return null;if(!Array.isArray(t))throw new z("`mask` should be an Array");if(!Array.isArray(e))throw new z("`inputs` should be an Array");if(t.length!==e.length)throw new z(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:sr(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Or(n,t[e]);return n}))}},wf=class extends dl{constructor(e){super(e)}mergeFunction(e){return B((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=X(t,e[n]);return t}))}};wf.className="Add",Q.registerClass(wf);var Cf=class extends dl{constructor(e){super(e)}mergeFunction(e){return B((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=D(t,e[n]);return t}))}};Cf.className="Multiply",Q.registerClass(Cf);var If=class extends dl{constructor(e){super(e)}mergeFunction(e){return B((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=X(t,e[n]);return D(1/e.length,t)}))}};If.className="Average",Q.registerClass(If);var vf=class extends dl{constructor(e){super(e)}mergeFunction(e){return B((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Nn(t,e[n]);return t}))}};vf.className="Maximum",Q.registerClass(vf);var Sf=class extends dl{constructor(e){super(e)}mergeFunction(e){return B((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Vi(t,e[n]);return t}))}};Sf.className="Minimum",Q.registerClass(Sf);var Nf=class extends dl{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new z("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(let n of e)if(null!=n){t=!1;break}if(t)return;let n=[];for(let t=0;t<e.length;++t){let a=e[t].slice();a.splice(this.axis,1);let r=!1;for(let e of n)if(y.arraysEqual(e,a)){r=!0;break}r||n.push(a)}if(n.length>1)throw new z("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return B((()=>Tm(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new z("A `Concatenate` layer should be called on a list of inputs.");let t=e,n=t[0].slice(),a=this.axis<0?n.length+this.axis:this.axis;for(let e of t.slice(1)){if(null==n[a]||null==e[a]){n[a]=null;break}n[a]+=e[a]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new z("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new z("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new z(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return B((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;let a=[];for(let n=0;n<e.length;++n)null==t[n]?a.push(J(wr(e[n]),"bool")):t[n].rank<e[n].rank?a.push(sr(t[n],-1)):a.push(t[n]);let r=oe(a,this.axis);return Jp(r,-1,!1)}))}getConfig(){let e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}};function Dh(e,t){for(;e<0;)e+=t;return e}function oY(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new vt("batchDot is not implemented for tensors of 4D or higher rank yet");if(y.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),y.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new vt("batchDot is not implemented for complex64-type Tensors yet.");let a=e.shape.length,r=t.shape.length;null==n&&(n=[a-1,r-2]);let s=n;return B((()=>{let n,i;if(a>r){n=a-r;let e=[];for(let t=0;t<n;++t)e.push(1);t=R(t,t.shape.concat(e))}else if(r>a){n=r-a;let t=[];for(let e=0;e<n;++e)t.push(1);e=R(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?ft(D(e,t),s[0]):ft(D(Ot(e,[1,0]),t),s[1]);else{let n=s[0]!==e.shape.length-1,a=s[1]===t.shape.length-1;i=Lt(e,t,n,a)}if(n>0){let e;e=a>r?a+r-3:a-1;let t=[];for(let a=e;a<e+n;++a)t.push(a);i=Bn(i,t)}return 1===i.shape.length&&(i=sr(i,1)),i}))}Nf.className="Concatenate",Q.registerClass(Nf);var Tf=class extends dl{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){y.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));let t=e[0],n=e[1];if(t.length>3||n.length>3)throw new vt("Dot layer does not support tensors of 4D or higher rank yet.");let a=this.interpretAxes(t,n);if(t[a[0]]!==n[a[1]])throw new z(`Dimension incompatibility: ${t[a[0]]} !== ${n[a[1]]}`)}mergeFunction(e){if(2!==e.length)throw new z(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],a=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Dh(t,e[n].shape.length))):[Dh(this.axes,n.shape.length),Dh(this.axes,a.shape.length)],this.normalize&&(n=Sh(n,t[0]),a=Sh(a,t[1])),oY(n,a,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Dh(this.axes,e.length),Dh(this.axes,t.length)],n}computeOutputShape(e){y.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));let t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new vt("Dot layer does not support tensors of 4D or higher rank yet.");let a=this.interpretAxes(t,n);t.splice(a[0],1),n.splice(a[1],1),n.splice(0,1);let r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){let e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}};Tf.className="Dot",Q.registerClass(Tf);var kf=class extends Et{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return B((()=>{this.invokeCallHook(e,t);let n=St(e);return bu((()=>X(km(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}};kf.className="GaussianNoise",Q.registerClass(kf);var Ef=class extends Et{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return B((()=>{this.invokeCallHook(e,t);let n=St(e);return this.rate>0&&this.rate<1?bu((()=>{let e=Math.sqrt(this.rate/(1-this.rate));return D(n,km(n.shape,1,e))}),(()=>n),t.training||!1):n}))}};Ef.className="GaussianDropout",Q.registerClass(Ef);var _f=class extends Et{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||St(e).shape}computeOutputShape(e){return e}getConfig(){let e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return B((()=>{if(this.rate<1&&this.rate>0){let n=this._getNoiseShape(e);return bu((()=>{let t=St(e),a=-1.7580993408473766,r=un(Gi(n),this.rate);r=Qr(r,"float32");let s=((1-this.rate)*(1+this.rate*a**2))**-.5,i=-s*a*this.rate,o=X(D(t,r),D(X(r,-1),a));return X(D(o,s),i)}),(()=>St(e)),t.training||!1)}return e}))}};function Rh(e,t,n,a,r,s=.001){let i;if(2===e.rank)i=yx(e,t,n,a,r,s);else if(3===e.rank)i=bx(e,t,n,a,r,s);else{if(4!==e.rank)throw new vt(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=wx(e,t,n,a,r,s)}return i}function sY(e,t,n,a,r=.001){return B((()=>{let s=Qu(e,a),i=s.mean,o=s.variance;return[Rh(e,i,o,n,t,r),i,o]}))}function iY(e,t,n,a,r=.001){return B((()=>{let s=Qu(e,a),i=s.mean,o=s.variance,l=[];for(let t of fn(0,e.rank))-1!==a.indexOf(t)?l.push(1):l.push(e.shape[t]);let u=R(i,l),p=R(o,l),h=null==t?null:R(t,l),d=null==n?null:R(n,l);return[Rh(e,u,p,d,h,r),i,o]}))}function aY(e,t,n,a,r=.001){return y.arraysEqual(a.slice().sort(),fn(0,e.rank-1))?sY(e,t,n,a,r):iY(e,t,n,a,r)}_f.className="AlphaDropout",Q.registerClass(_f);var Af=class extends Et{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=de(e.betaInitializer||"zeros"),this.gammaInitializer=de(e.gammaInitializer||"ones"),this.movingMeanInitializer=de(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=de(e.movingVarianceInitializer||"ones"),this.betaConstraint=Be(e.betaConstraint),this.gammaConstraint=Be(e.gammaConstraint),this.betaRegularizer=be(e.betaRegularizer),this.gammaRegularizer=be(e.gammaRegularizer)}build(e){e=zt(e);let t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new z(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new ye({ndim:e.length,axes:{[t]:n}})];let a=[n];this.scale&&(this.gamma=this.addWeight("gamma",a,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",a,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",a,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",a,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return B((()=>{let n=null!=t.training&&t.training,a=St(e),r=a.shape,s=r.length,i=fn(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);let l=So(1,s);l[o]=r[o];let u=i.slice();u.sort();let p=!y.arraysEqual(u,fn(0,s).slice(0,s-1));if(!n)return(()=>{if(p){let e=R(this.movingMean.read(),l),t=R(this.movingVariance.read(),l),n=this.center?R(this.beta.read(),l):null,r=this.scale?R(this.gamma.read(),l):null;return Rh(a,e,t,n,r,this.epsilon)}return Rh(a,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();let[h,d,c]=aY(a,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{B((()=>{let a=1-n,r=e.read(),s=D(ct(r,t),a);e.write(ct(r,s))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,c,this.momentum)})(),h}))}getConfig(){let e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Te(this.betaInitializer),gammaInitializer:Te(this.gammaInitializer),movingMeanInitializer:Te(this.movingMeanInitializer),movingVarianceInitializer:Te(this.movingVarianceInitializer),betaRegularizer:me(this.betaRegularizer),gammaRegularizer:me(this.gammaRegularizer),betaConstraint:ze(this.betaConstraint),gammaConstraint:ze(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}};Af.className="BatchNormalization",Q.registerClass(Af);var $f=class extends Et{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(let e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=de(e.betaInitializer||"zeros"),this.gammaInitializer=de(e.gammaInitializer||"ones"),this.betaRegularizer=be(e.betaRegularizer),this.gammaRegularizer=be(e.gammaRegularizer),this.supportsMasking=!0}build(e){let t=(e=zt(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(let e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==To(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);let n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){let n=St(e),a=n.shape,r=a.length;return B((()=>{let{mean:e,variance:t}=Qu(n,this.axis,!0),s=So(1,r);for(let e of this.axis)s[e]=a[e];let i=e=>null!=e&&e.shape.length!==r?R(e,s):e,o=this.scale?i(this.gamma.read()):null,l=this.center?i(this.beta.read()):null,u=[],p=[];for(let e=0;e<r;++e)-1!==this.axis.indexOf(e)?(u.push(a[e]),p.push(1)):(u.push(1),p.push(a[e]));return e=Fr(e,u),t=Fr(t,u),null!=o&&(o=Fr(o,p)),null!=l&&(l=Fr(l,p)),Rh(n,e,t,l,o,this.epsilon)}))}getConfig(){let e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Te(this.betaInitializer),gammaInitializer:Te(this.gammaInitializer),betaRegularizer:me(this.betaRegularizer),gammaRegularizer:me(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}};function lY(e,t,n){return B((()=>{if(4!==e.rank)throw new z(`temporalPadding expects input tensor to be 4-D, but received a ${e.rank}-D tensor.`);if(null==t&&(t=[[1,1],[1,1]]),2!==t.length||2!==t[0].length||2!==t[1].length)throw new z("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==n&&(n=dn()),"channelsLast"!==n&&"channelsFirst"!==n)throw new z(`Unknown data format: ${n}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let a;return a="channelsFirst"===n?[[0,0],[0,0],t[0],t[1]]:[[0,0],t[0],t[1],[0,0]],pn(e,a)}))}$f.className="LayerNormalization",Q.registerClass($f);var Df=class extends Et{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?dn():e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new z(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new z(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new z(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new ye({ndim:4})]}computeOutputShape(e){let t,n;return e=zt(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return B((()=>lY(St(e),this.padding,this.dataFormat)))}getConfig(){let e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}};function Cb(e,t,n,a,r,s){return B((()=>{Fe(r),N0(s),mn(a),null==n&&(n=[1,1]),null==a&&(a="valid"),null==r&&(r=dn()),null==s&&(s="max"),e=$h(e,r);let i,o="same"===a?"same":"valid";return i="max"===s?su(e,t,n,o):Ql(e,t,n,o),"channelsFirst"===r&&(i=Ot(i,[0,3,1,2])),i}))}function vD(e,t,n,a,r,s){return B((()=>{Fe(r),N0(s),mn(a),null==n&&(n=[1,1,1]),null==a&&(a="valid"),null==r&&(r=dn()),null==s&&(s="max"),e=G0(e,r);let i,o="same"===a?"same":"valid";return i="max"===s?qx(e,t,n,o):xx(e,t,n,o),"channelsFirst"===r&&(i=Ot(i,[0,4,1,2,3])),i}))}Df.className="ZeroPadding2D",Q.registerClass(Df);var gb=class extends Et{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new z(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Qe(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new z(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Qe(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,mn(this.padding),this.inputSpec=[new ye({ndim:3})]}computeOutputShape(e){let t=kn((e=zt(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return B((()=>{this.invokeCallHook(e,t),e=il(St(e),2);let n=this.poolingFunction(St(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Bn(n,[2])}))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}},Rf=class extends gb{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Fe(r),mn(a),Cb(e,t,n,a,r,"max")}};Rf.className="MaxPooling1D",Q.registerClass(Rf);var Ff=class extends gb{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Fe(r),mn(a),Cb(e,t,n,a,r,"avg")}};Ff.className="AveragePooling1D",Q.registerClass(Ff);var xb=class extends Et{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new z(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Qe(this.poolSize,"poolSize"),Qe(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Fe(this.dataFormat),mn(this.padding),this.inputSpec=[new ye({ndim:4})]}computeOutputShape(e){e=zt(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=kn(t,this.poolSize[0],this.padding,this.strides[0]),n=kn(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return B((()=>(this.invokeCallHook(e,t),this.poolingFunction(St(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Of=class extends xb{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Fe(r),mn(a),Cb(e,t,n,a,r,"max")}};Of.className="MaxPooling2D",Q.registerClass(Of);var Pf=class extends xb{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Fe(r),mn(a),Cb(e,t,n,a,r,"avg")}};Pf.className="AveragePooling2D",Q.registerClass(Pf);var yb=class extends Et{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new z(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Qe(this.poolSize,"poolSize"),Qe(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Fe(this.dataFormat),mn(this.padding),this.inputSpec=[new ye({ndim:5})]}computeOutputShape(e){e=zt(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],a="channelsFirst"===this.dataFormat?e[4]:e[3];return t=kn(t,this.poolSize[0],this.padding,this.strides[0]),n=kn(n,this.poolSize[1],this.padding,this.strides[1]),a=kn(a,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,a]:[e[0],t,n,a,e[4]]}call(e,t){return B((()=>(this.invokeCallHook(e,t),this.poolingFunction(St(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){let e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Lf=class extends yb{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Fe(r),mn(a),vD(e,t,n,a,r,"max")}};Lf.className="MaxPooling3D",Q.registerClass(Lf);var Mf=class extends yb{constructor(e){super(e)}poolingFunction(e,t,n,a,r){return Fe(r),mn(a),vD(e,t,n,a,r,"avg")}};Mf.className="AveragePooling3D",Q.registerClass(Mf);var bb=class extends Et{constructor(e){super(e),this.inputSpec=[new ye({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new vt}},zf=class extends bb{constructor(e){super(e||{})}call(e,t){return B((()=>{let t=St(e);return Se(t,1)}))}};zf.className="GlobalAveragePooling1D",Q.registerClass(zf);var Bf=class extends bb{constructor(e){super(e||{})}call(e,t){return B((()=>{let t=St(e);return Sr(t,1)}))}};Bf.className="GlobalMaxPooling1D",Q.registerClass(Bf);var wb=class extends Et{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Fe(this.dataFormat),this.inputSpec=[new ye({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new vt}getConfig(){let e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}},Vf=class extends wb{call(e,t){return B((()=>{let t=St(e);return"channelsLast"===this.dataFormat?Se(t,[1,2]):Se(t,[2,3])}))}};Vf.className="GlobalAveragePooling2D",Q.registerClass(Vf);var Gf=class extends wb{call(e,t){return B((()=>{let t=St(e);return"channelsLast"===this.dataFormat?Sr(t,[1,2]):Sr(t,[2,3])}))}};Gf.className="GlobalMaxPooling2D",Q.registerClass(Gf);var Ib=class extends Et{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){let e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){let a=yn(t.layer,n);delete t.layer;let r={layer:a};return Object.assign(r,t),new e(r)}},Wf=class extends Ib{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=zt(e)).length<3)throw new z(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];let t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){let t=[(e=zt(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),a=e[1];return[n[0],a].concat(n.slice(1))}call(e,t){return B((()=>U0(((e,n)=>[St(this.layer.call(e,t)),[]]),e=St(e),[],!1,null,null,!1,!0)[1]))}};function uY(e){Ki(_$,"BidirectionalMergeMode",e)}Wf.className="TimeDistributed",Q.registerClass(Wf);var cY="concat",Uf=class extends Ib{constructor(e){super(e);let t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=yn(n),t.goBackwards=!0!==t.goBackwards;let a={};if(a.className=e.layer.getClassName(),a.config=t,this.backwardLayer=yn(a),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?cY:e.mergeMode,uY(this.mergeMode),e.weights)throw new vt("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){let t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,a,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState&&(a=r.slice(1)),t=r[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(a).concat(a.slice()):[t].concat(a).concat(a.slice()):Tr(n)}apply(e,t){let n=null==t?null:t.initialState,a=null==t?null:t.constants;null==t&&(t={});let r=W0(e,n,a,this.numConstants);if(e=r.inputs,n=r.initialState,a=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==a)return super.apply(e,t);let s=[],i=[];if(null!=n){let e=n.length;if(e%2>0)throw new z("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);let a=n.map((e=>new ye({shape:e.shape})));this.forwardLayer.stateSpec=a.slice(0,e/2),this.backwardLayer.stateSpec=a.slice(e/2),i.push(...a)}if(null!=a)throw new vt("Support for constants in Bidirectional layers is not implemented yet.");let o=s[0]instanceof tn;for(let e of s)if(e instanceof tn!==o)throw new z("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){let n=[e].concat(s),a=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=a;let o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return B((()=>{let n,a,r,s,i=t.initialState;if(null==i)n=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{let r=i.slice(0,i.length/2),s=i.slice(i.length/2);n=this.forwardLayer.call(e,Object.assign(t,{initialState:r})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:s}))}return this.returnState&&(Array.isArray(n)&&(r=n.slice(1).concat(a.slice(1))),n=n[0],a=a[0]),this.returnSequences&&(a=mr(a,1)),"concat"===this.mergeMode?s=Tm([n,a]):"sum"===this.mergeMode?s=X(n,a):"ave"===this.mergeMode?s=D(.5,X(n,a)):"mul"===this.mergeMode?s=D(n,a):null==this.mergeMode&&(s=[n,a]),this.returnState?null==this.mergeMode?s.concat(r):[s].concat(r):s}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Ks(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Ks(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){let e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){let e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){let n=yn(t.layer);if(delete t.layer,null!=t.numConstants)throw new vt("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");let a=t;return a.layer=n,new e(a)}};Uf.className="Bidirectional",Q.registerClass(Uf);var Hf=class extends Et{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){let e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return B((()=>("float32"!==(e=St(e)).dtype&&(e=Qr(e,"float32")),X(D(e,this.scale),this.offset))))}};Hf.className="Rescaling",Q.registerClass(Hf);var{resizeBilinear:pY,cropAndResize:mY}=so,qf=class extends Et{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,n,a,r,s,i,o){return B((()=>{let l,u=!1,p=[t/s,n/i,(a+t)/s,(r+n)/i],h=[];3===e.rank?(u=!0,l=qe([e])):l=e;for(let e=0;e<l.shape[0];e++)h.push(p);let d=nr(h,[h.length,4]),c=Wi(0,h.length,1,"int32"),f=mY(l,d,c,[a,r],"nearest");return Qr(u?St(dr(f)):f,o)}))}upsize(e,t,n,a){return B((()=>Qr(pY(e,[t,n]),a)))}call(e,t){return B((()=>{let t=St(e),n=t.dtype,a=t.shape,r=a[a.length-3],s=a[a.length-2],i=0;r!==this.height&&(i=Math.floor((r-this.height)/2));let o=0;return s!==this.width&&(o=Math.floor((s-this.width)/2),0===o&&(o=1)),i>=0&&o>=0?this.centerCrop(t,i,o,this.height,this.width,r,s,n):this.upsize(e,this.height,this.width,n)}))}getConfig(){let e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){let t=(e=zt(e)).length-3,n=e.length-2;return e[t]=this.height,e[n]=this.width,e}};function SD(e,t,n,a){let r=St(e);if("int32"!==r.dtype&&(r=Qr(r,"int32")),"int"===t)return r;let s=r.shape;if(0===r.rank&&(r=sr(r,-1)),"oneHot"===t&&1!==r.shape[r.shape.length-1]&&(r=sr(r,-1)),r.rank>2)throw new z(`When outputMode is not int, maximum output rank is 2 Received outputMode ${t} and input shape ${s} which would result in output rank ${r.rank}.`);let i,o=["multiHot","oneHot"].includes(t);if(i=ph(r,void 0!==a&&"count"===t?a:[],n,o),"tfIdf"!==t)return i;if(a)return D(i,a);throw new z("When outputMode is 'tfIdf', weights must be provided.")}qf.className="CenterCrop",Q.registerClass(qf);var Kf=class extends Et{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){let e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return null==(e=zt(e))?[this.numTokens]:"oneHot"===this.outputMode&&1!==e[e.length-1]?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return B((()=>{let n;if("int32"!==(e=St(e)).dtype&&(e=Qr(e,"int32")),void 0!==t.countWeights){if("count"!==this.outputMode)throw new z(`countWeights is not used when outputMode !== count.\n              Received countWeights=${t.countWeights}`);n=St(t.countWeights)}let a=Sr(e),r=el(e),s=Re(this.numTokens,a).bufferSync().get(0),i=un(r,0).bufferSync().get(0);if(!s||!i)throw new z(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return SD(e,this.outputMode,this.numTokens,n)}))}};Kf.className="CategoryEncoding",Q.registerClass(Kf);var dY=["bilinear","nearest"],ND=new Set(dY),jf=class extends Et{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation){if(!ND.has(e.interpolation))throw new z(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);this.interpolation=e.interpolation}else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){let t=(e=zt(e))[2];return[this.height,this.width,t]}getConfig(){let e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return B((()=>{let t=[this.height,this.width];if("bilinear"===this.interpolation)return so.resizeBilinear(e,t,!this.cropToAspectRatio);if("nearest"===this.interpolation)return so.resizeNearestNeighbor(e,t,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...ND]} are supported`)}))}};function hY(e){return new Xs(e)}function gY(e){return new Zm(e)}function xY(e){return new jm(e)}function yY(e){return new Xm(e)}function bY(e){return new Ym(e)}function wY(e){return new Qm(e)}function CY(e){return new Jm(e)}function IY(e){return new Nu(e)}function vY(e){return new ul(e)}function SY(e){return new tf(e)}function NY(e){return new cl(e)}function TY(e){return new ef(e)}function kY(e){return new rf(e)}function EY(e){return new nf(e)}function _Y(e){return new of(e)}function AY(e){return new sf(e)}function $Y(e){return new df(e)}function DY(e){return new mf(e)}function RY(e){return new Tc(e)}function FY(e){return new pf(e)}function OY(e){return new ff(e)}function PY(e){return new hf(e)}function LY(e){return new gf(e)}function MY(e){return new xf(e)}function zY(e){return new bf(e)}function BY(e){return new wf(e)}function VY(e){return new If(e)}function GY(e){return new Nf(e)}function WY(e){return new vf(e)}function UY(e){return new Sf(e)}function HY(e){return new Cf(e)}function qY(e){return new Tf(e)}function KY(e){return new Af(e)}function jY(e){return new $f(e)}function XY(e){return new Df(e)}function H0(e){return new Ff(e)}function YY(e){return H0(e)}function ZY(e){return H0(e)}function q0(e){return new Pf(e)}function JY(e){return q0(e)}function QY(e){return q0(e)}function K0(e){return new Mf(e)}function tZ(e){return K0(e)}function eZ(e){return K0(e)}function rZ(e){return new zf(e)}function nZ(e){return new Vf(e)}function TD(e){return new Bf(e)}function kD(e){return new Gf(e)}function ED(e){return new Rf(e)}function _D(e){return new Of(e)}function oZ(e){return new Lf(e)}function sZ(e){return new lf(e)}function iZ(e){return new vc(e)}function aZ(e){return new uf(e)}function lZ(e){return new ml(e)}function uZ(e){return new af(e)}function cZ(e){return new Ic(e)}function pZ(e){return new cf(e)}function mZ(e){return new Nc(e)}function fZ(e){return new En(e)}function dZ(e){return new Sc(e)}function hZ(e){return new Uf(e)}function gZ(e){return new Wf(e)}jf.className="Resizing",Q.registerClass(jf);var xZ=TD,yZ=kD,bZ=ED,wZ=_D;function CZ(e){return new kf(e)}function IZ(e){return new Ef(e)}function vZ(e){return new _f(e)}function SZ(e){return new yf(e)}function NZ(e){return new Hf(e)}function TZ(e){return new qf(e)}function kZ(e){return new jf(e)}function EZ(e){return new Kf(e)}var $D={};function _Z(e,t){return kh(e,t)}function AZ(e,t){return Uy(e,t)}function $Z(e,t){return Hy(e,t)}function DZ(e,t){return Eh(e,t)}function RZ(e,t){return _h(e,t)}function FZ(e,t){return R0(e,t)}function OZ(e,t){return eD(e,t)}function PZ(e,t){return Th(e,t)}function LZ(e,t){return Gm(e,t)}function MZ(e,t){return Cu(e,t)}function zZ(e,t){return Cu(e,t)}function BZ(e,t){return Cu(e,t)}function VZ(e,t){return Xi(e,t)}function GZ(e,t){return Xi(e,t)}function WZ(e,t){return Xi(e,t)}Wt($D,{MAPE:()=>zZ,MSE:()=>GZ,binaryAccuracy:()=>_Z,binaryCrossentropy:()=>AZ,categoricalAccuracy:()=>DZ,categoricalCrossentropy:()=>RZ,cosineProximity:()=>PZ,mape:()=>BZ,meanAbsoluteError:()=>LZ,meanAbsolutePercentageError:()=>MZ,meanSquaredError:()=>VZ,mse:()=>WZ,precision:()=>FZ,recall:()=>OZ,sparseCategoricalAccuracy:()=>$Z});var DD={};Wt(DD,{modelFromJSON:()=>gD});var RD={};function UZ(e){return new Iu(e)}function HZ(e){return wD(e)}function qZ(e){return CD(e)}Wt(RD,{l1:()=>HZ,l1l2:()=>UZ,l2:()=>qZ});var Sb=class extends ll{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof Gn))throw new Error("model must be a LayersModel, not some other Container");this.model=e}};function vb(e,t){return e<t}function FD(e,t){return e>t}var Nb=class extends Sb{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new vt("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=vb:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=FD:this.monitorFunc=vb,this.monitorFunc===vb&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===vb?1/0:-1/0}async onEpochEnd(e,t){await ji(t);let n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});let t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}};function KZ(e){return new Nb(e)}var ao,OD,jZ={earlyStopping:KZ},XZ=M();XZ.registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(ao||(ao={})),function(e){let t;var n;(n=t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))[n.LEGACY=0]="LEGACY",n[n.V1=1]="V1",n[n.V2=2]="V2"}(OD||(OD={}));var j0={};function ZZ(e,t){let n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};j0[e]=n}function Tb(e){return j0[e]}function JZ(e){delete j0[e]}function I(e,t,n,a,r){let s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){let e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return Cr(t.inputNames[s.inputIndexStart],n,a,r);if("tensors"===s.type)return t.inputNames.slice(e,i).map((e=>Cr(e,n,a,r)));let o=Cr(t.inputNames.slice(e)[0],n,a,r),l=o.dataSync();return"number"===s.type?l[0]:y.toNestedArray(o.shape,l)}let i=t.attrParams[e];return i&&i.value}function Cr(e,t,n,a){let[r,s]=bn(e);if(null!=a){let e=a.getHashTableHandleByName(r);if(null!=e)return e}let i=n.currentContextIds.find((e=>!!t[kb(r,e)]));return void 0!==i?t[kb(r,i)][s]:void 0}function PD(e,t,n){return t[kb(e,n.currentContextId)]}function Qs(e,t){let[n,a,r]=bn(e);return[kb(n,t&&t.currentContextId),a,r]}function kb(e,t){return t?`${e}-${t}`:e}function bn(e){let t=e.split(":");if(1===t.length)return[e,0,void 0];let n=t[0],a=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),a]}function Fh(e,t,n){let a=I("pad",e,t,n);if("explicit"===a){a=I("explicitPaddings",e,t,n);let r=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)r[e][0]=a[2*e],r[e][1]=a[2*e+1];return r}return a}function ti(e){return e.kept?e:an(e)}var X0={};Wt(X0,{json:()=>QZ});var QZ=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Y0={};Wt(Y0,{json:()=>t7});var t7=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Z0={};Wt(Z0,{json:()=>e7});var e7=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcatV2",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListLength",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}]},{tfOpName:"TensorListResize",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"size",type:"number"}]}],J0={};Wt(J0,{json:()=>r7});var r7=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Q0={};Wt(Q0,{json:()=>n7});var n7=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomStandardNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],tN={};Wt(tN,{json:()=>o7});var o7=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],eN={};Wt(eN,{json:()=>s7});var s7=[{tfOpName:"LowerBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"UpperBound",category:"evaluation",inputs:[{start:0,name:"sortedSequence",type:"tensor"},{start:1,name:"values",type:"tensor"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],rN={};Wt(rN,{json:()=>i7});var i7=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],nN={};Wt(nN,{json:()=>a7});var a7=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"InitializeTable",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]},{tfOpName:"InitializeTableV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}]}],oN={};Wt(oN,{json:()=>l7});var l7=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]},{tfOpName:"ImageProjectiveTransformV3",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"transforms",type:"tensor"},{start:2,name:"outputShape",type:"number[]"},{start:3,name:"fillValue",type:"number"}],attrs:[{tfName:"interpolation",name:"interpolation",type:"string"},{tfName:"fill_mode",name:"fillMode",type:"string"}]}],sN={};Wt(sN,{json:()=>u7});var u7=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],iN={};Wt(iN,{json:()=>c7});var c7=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],aN={};Wt(aN,{json:()=>p7});var p7=[{tfOpName:"EuclideanNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",defaultValue:!1}]},{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],lN={};Wt(lN,{json:()=>m7});var m7=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumprod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],uN={};Wt(uN,{json:()=>f7});var f7=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],cN={};Wt(cN,{json:()=>d7});var d7=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],pN={};Wt(pN,{json:()=>h7});var h7=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],mN={};Wt(mN,{json:()=>g7});var g7=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],fN={};Wt(fN,{json:()=>x7});var x7=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}],Oh=class{constructor(){let e=[].concat(...[X0,Y0,Z0,J0,Q0,tN,eN,rN,nN,oN,sN,iN,aN,lN,uN,cN,pN,mN,fN].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}static get Instance(){return this._instance||(this._instance=new this)}transformGraph(e,t={}){let n=e.node,a=[],r=[],s=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?a.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):(null==t.input||0===t.input.length)&&s.push(e[t.name]),e)),{}),o=[],l=[],u={},p={};null!=t&&(u=this.mapSignatureEntries(t.inputs),p=this.mapSignatureEntries(t.outputs));let h=Object.keys(i);h.forEach((e=>{let t=i[e];t.inputNames.forEach(((e,n)=>{let[a,,r]=Qs(e),s=i[a];if(null!=s.outputs){let e=s.outputs.indexOf(r);if(-1!==e){let r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(s),s.children.push(t)}))})),0===Object.keys(p).length?h.forEach((e=>{let t=i[e];0===t.children.length&&l.push(t)})):Object.keys(p).forEach((e=>{let[t]=Qs(e),n=i[t];null!=n&&(n.signatureKey=p[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{let[t]=Qs(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=a;let d={};null!=e.library&&null!=e.library.function&&(d=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));let c={nodes:i,inputs:o,outputs:l,weights:r,placeholders:a,signature:t,functions:d};return s.length>0&&(c.initNodes=s),c}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){let t=Tb(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});let n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.slice(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{let a,r=n.type;switch(n.type){case"string":a=Eb(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Eb(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=Ob(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Ob(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=Ab(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=Ab(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=Fb(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Fb(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=_b(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=_b(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=Lb(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Lb(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=Rb(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Rb(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=Pb(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Pb(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=$b(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=$b(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=Db(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Db(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=LD(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=LD(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t}),{})),n}mapFunction(e){let t=e.nodeDef,n=[],a={};null!=t&&(a=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));let r=[],s=[];e.signature.inputArg.forEach((e=>{let[t]=Qs(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:dN(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),a[t]=n})),Object.keys(a).forEach((e=>{let t=a[e];t.inputNames.forEach(((e,n)=>{let[r,,s]=Qs(e),i=a[r];if(null!=i.outputs){let e=i.outputs.indexOf(s);if(-1!==e){let a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(i),i.children.push(t)}))}));let i=e.ret;e.signature.outputArg.forEach((e=>{let[t,n]=Qs(i[e.name]),r=a[t];null!=r&&(r.defaultOutput=n,s.push(r))}));let o=this.mapArgsToSignature(e);return{nodes:a,inputs:r,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}};function y7(e){let t=M().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}function MD(e,t){let n=Array.isArray(e)?String.fromCharCode.apply(null,e):y7(e);return t?n:n.toLowerCase()}function Eb(e,t,n,a=!1){let r=e[t];return null!=r?MD(r.s,a):n}function _b(e,t,n){let a=e[t];return a?a.b:n}function Ab(e,t,n){let a=e[t]||{},r=null!=a.i?a.i:null!=a.f?a.f:n;return"number"==typeof r?r:parseInt(r,10)}function dN(e){switch("string"==typeof e&&(e=ao[e]),e){case ao.DT_FLOAT:case ao.DT_HALF:return"float32";case ao.DT_INT32:case ao.DT_INT64:case ao.DT_INT8:case ao.DT_UINT8:return"int32";case ao.DT_BOOL:return"bool";case ao.DT_DOUBLE:return"float32";case ao.DT_STRING:return"string";default:return null}}function LD(e,t,n){let a=e[t];return a&&a.func?a.func.name:n}function $b(e,t,n){let a=e[t];return a&&a.type?dN(a.type):n}function Db(e,t,n){let a=e[t];return a&&a.list&&a.list.type?a.list.type.map((e=>dN(e))):n}function zD(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function Rb(e,t,n){let a=e[t];return a&&a.shape?zD(a.shape):n}function Fb(e,t,n){let a=e[t];return a?((a.list.f&&a.list.f.length?a.list.f:a.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function Ob(e,t,n,a=!1){let r=e[t];return r&&r.list&&r.list.s?r.list.s.map((e=>MD(e,a))):n}function Pb(e,t,n){let a=e[t];return a&&a.list&&a.list.shape?a.list.shape.map((e=>zD(e))):n}function Lb(e,t,n){let a=e[t];return a&&a.list&&a.list.b?a.list.b:n}var Mb=class{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return Cr(e,this.tensorMap,this.context)}getAttr(e,t){let n=this.node.rawAttrs[e];if(null!=n.tensor)return Cr(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Ab(this.node.rawAttrs,e,t);if(null!=n.s)return Eb(this.node.rawAttrs,e,t);if(null!=n.b)return _b(this.node.rawAttrs,e,t);if(null!=n.shape)return Rb(this.node.rawAttrs,e,t);if(null!=n.type)return $b(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return Fb(this.node.rawAttrs,e,t);if(null!=n.list.s)return Ob(this.node.rawAttrs,e,t);if(null!=n.list.shape)return Pb(this.node.rawAttrs,e,t);if(null!=n.list.b)return Lb(this.node.rawAttrs,e,t);if(null!=n.list.type)return Db(this.node.rawAttrs,e,t)}return t}},se={};Wt(se,{OP_SCOPE_SUFFIX:()=>AS,abs:()=>Ee,acos:()=>lx,acosh:()=>ux,add:()=>X,addN:()=>BE,all:()=>Jp,any:()=>ju,argMax:()=>Ri,argMin:()=>cx,asin:()=>px,asinh:()=>mx,atan:()=>fx,atan2:()=>dx,atanh:()=>hx,avgPool:()=>Ql,avgPool3d:()=>xx,basicLSTMCell:()=>WE,batchNorm:()=>Oi,batchNorm2d:()=>yx,batchNorm3d:()=>bx,batchNorm4d:()=>wx,batchToSpaceND:()=>tu,bincount:()=>Cx,booleanMaskAsync:()=>l6,broadcastArgs:()=>HE,broadcastTo:()=>Pi,buffer:()=>wt,cast:()=>J,ceil:()=>Ix,clipByValue:()=>vr,clone:()=>an,complex:()=>In,concat:()=>oe,concat1d:()=>vx,concat2d:()=>Sx,concat3d:()=>Nx,concat4d:()=>Tx,conv1d:()=>tm,conv2d:()=>Sn,conv2dTranspose:()=>rm,conv3d:()=>kx,conv3dTranspose:()=>_x,cos:()=>eu,cosh:()=>nm,cosineWindow:()=>gh,cumprod:()=>Zu,cumsum:()=>om,denseBincount:()=>ph,depthToSpace:()=>Ax,depthwiseConv2d:()=>Li,diag:()=>qE,dilation2d:()=>$x,div:()=>pt,divNoNan:()=>Dx,dot:()=>Rx,dropout:()=>p0,einsum:()=>KE,elu:()=>Mi,enclosingPowerOfTwo:()=>m0,equal:()=>Rr,erf:()=>Fx,euclideanNorm:()=>Ox,exp:()=>or,expandDims:()=>sr,expm1:()=>Px,eye:()=>Ju,fft:()=>uu,fill:()=>bo,floor:()=>zi,floorDiv:()=>Zp,fused:()=>pu,gather:()=>Bi,gatherND:()=>x6,greater:()=>Re,greaterEqual:()=>un,ifft:()=>nl,imag:()=>Jl,image:()=>so,inTopKAsync:()=>w6,irfft:()=>ym,isFinite:()=>Lx,isInf:()=>Mx,isNaN:()=>zx,leakyRelu:()=>ru,less:()=>sm,lessEqual:()=>zn,linalg:()=>d0,linspace:()=>YE,localResponseNormalization:()=>Bx,log:()=>Nr,log1p:()=>nu,logSigmoid:()=>Wx,logSoftmax:()=>im,logSumExp:()=>am,logicalAnd:()=>Or,logicalNot:()=>ou,logicalOr:()=>lm,logicalXor:()=>Ux,losses:()=>wX,lowerBound:()=>ZE,matMul:()=>Lt,max:()=>Sr,maxPool:()=>su,maxPool3d:()=>qx,maxPoolWithArgmax:()=>JE,maximum:()=>Nn,mean:()=>Se,meshgrid:()=>QE,min:()=>el,minimum:()=>Vi,mirrorPad:()=>Kx,mod:()=>jx,moments:()=>Qu,movingAverage:()=>c6,mul:()=>D,multiRNNCell:()=>t_,multinomial:()=>e_,neg:()=>Ht,norm:()=>rl,notEqual:()=>Ws,oneHot:()=>$i,ones:()=>pr,onesLike:()=>wr,op:()=>T,outerProduct:()=>r_,pad:()=>pn,pad1d:()=>n_,pad2d:()=>o_,pad3d:()=>s_,pad4d:()=>i_,pool:()=>Xx,pow:()=>ln,prelu:()=>au,print:()=>Qg,prod:()=>Yx,raggedGather:()=>a_,raggedRange:()=>l_,raggedTensorToTensor:()=>u_,rand:()=>c_,randomGamma:()=>k_,randomNormal:()=>rc,randomStandardNormal:()=>E_,randomUniform:()=>Gi,range:()=>Wi,real:()=>tl,reciprocal:()=>ey,relu:()=>Pr,relu6:()=>um,reshape:()=>R,reverse:()=>mr,reverse1d:()=>__,reverse2d:()=>A_,reverse3d:()=>$_,reverse4d:()=>D_,rfft:()=>cu,round:()=>cm,rsqrt:()=>pm,scalar:()=>mt,scatterND:()=>m6,searchSorted:()=>fh,selu:()=>mm,separableConv2d:()=>fm,setdiff1dAsync:()=>R_,sigmoid:()=>Jr,sign:()=>ry,signal:()=>bX,sin:()=>dm,sinh:()=>hm,slice:()=>Rt,slice1d:()=>gm,slice2d:()=>hh,slice3d:()=>xm,slice4d:()=>nc,softmax:()=>lu,softplus:()=>Gs,spaceToBatchND:()=>iu,sparse:()=>CX,sparseToDense:()=>h6,spectral:()=>yX,split:()=>fr,sqrt:()=>ve,square:()=>Mt,squaredDifference:()=>bm,squeeze:()=>Bn,stack:()=>qe,step:()=>Co,stridedSlice:()=>ny,string:()=>IX,sub:()=>ct,sum:()=>ft,tan:()=>oy,tanh:()=>Fi,tensor:()=>nr,tensor1d:()=>Ke,tensor2d:()=>Us,tensor3d:()=>nx,tensor4d:()=>F_,tensor5d:()=>O_,tensor6d:()=>P_,tile:()=>Fr,topk:()=>sy,transpose:()=>Ot,truncatedNormal:()=>wm,unique:()=>iy,unsortedSegmentSum:()=>Cm,unstack:()=>dr,upperBound:()=>L_,variable:()=>ay,where:()=>_e,whereAsync:()=>uy,zeros:()=>Ne,zerosLike:()=>It});var BD=(e,t,n,a=se)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[a.add(I("a",e,t,n),I("b",e,t,n))];case"AddN":return[a.addN(I("tensors",e,t,n))];case"FloorMod":case"Mod":return[a.mod(I("a",e,t,n),I("b",e,t,n))];case"Mul":return[a.mul(I("a",e,t,n),I("b",e,t,n))];case"RealDiv":case"Div":return[a.div(I("a",e,t,n),I("b",e,t,n))];case"DivNoNan":return[a.divNoNan(I("a",e,t,n),I("b",e,t,n))];case"FloorDiv":return[a.floorDiv(I("a",e,t,n),I("b",e,t,n))];case"Sub":return[a.sub(I("a",e,t,n),I("b",e,t,n))];case"Minimum":return[a.minimum(I("a",e,t,n),I("b",e,t,n))];case"Maximum":return[a.maximum(I("a",e,t,n),I("b",e,t,n))];case"Pow":return[a.pow(I("a",e,t,n),I("b",e,t,n))];case"SquaredDifference":return[a.squaredDifference(I("a",e,t,n),I("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},VD=(e,t,n,a=se)=>{switch(e.op){case"Abs":case"ComplexAbs":return[a.abs(I("x",e,t,n))];case"Acos":return[a.acos(I("x",e,t,n))];case"Acosh":return[a.acosh(I("x",e,t,n))];case"Asin":return[a.asin(I("x",e,t,n))];case"Asinh":return[a.asinh(I("x",e,t,n))];case"Atan":return[a.atan(I("x",e,t,n))];case"Atan2":return[a.atan2(I("x",e,t,n),I("y",e,t,n))];case"Atanh":return[a.atanh(I("x",e,t,n))];case"Ceil":return[a.ceil(I("x",e,t,n))];case"Complex":return[a.complex(I("real",e,t,n),I("imag",e,t,n))];case"Cos":return[a.cos(I("x",e,t,n))];case"Cosh":return[a.cosh(I("x",e,t,n))];case"Elu":return[a.elu(I("x",e,t,n))];case"Erf":return[a.erf(I("x",e,t,n))];case"Exp":return[a.exp(I("x",e,t,n))];case"Expm1":return[a.expm1(I("x",e,t,n))];case"Floor":return[a.floor(I("x",e,t,n))];case"Log":return[a.log(I("x",e,t,n))];case"Log1p":return[a.log1p(I("x",e,t,n))];case"Imag":return[a.imag(I("x",e,t,n))];case"Neg":return[a.neg(I("x",e,t,n))];case"Reciprocal":return[a.reciprocal(I("x",e,t,n))];case"Real":return[a.real(I("x",e,t,n))];case"Relu":return[a.relu(I("x",e,t,n))];case"Round":return[a.round(I("x",e,t,n))];case"Selu":return[a.selu(I("x",e,t,n))];case"Sigmoid":return[a.sigmoid(I("x",e,t,n))];case"Sin":return[a.sin(I("x",e,t,n))];case"Sign":return[a.sign(I("x",e,t,n))];case"Sinh":return[a.sinh(I("x",e,t,n))];case"Softplus":return[a.softplus(I("x",e,t,n))];case"Sqrt":return[a.sqrt(I("x",e,t,n))];case"Square":return[a.square(I("x",e,t,n))];case"Tanh":return[a.tanh(I("x",e,t,n))];case"Tan":return[a.tan(I("x",e,t,n))];case"ClipByValue":return[a.clipByValue(I("x",e,t,n),I("clipValueMin",e,t,n),I("clipValueMax",e,t,n))];case"Relu6":return[a.relu6(I("x",e,t,n))];case"Rsqrt":return[a.rsqrt(Cr(e.inputNames[0],t,n))];case"Prod":return[a.prod(I("x",e,t,n),I("axes",e,t,n))];case"LeakyRelu":return[a.leakyRelu(I("x",e,t,n),I("alpha",e,t,n))];case"Prelu":return[a.prelu(I("x",e,t,n),I("alpha",e,t,n))];case"IsNan":return[a.isNaN(Cr(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function Wn(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){y.assert(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let a=0;a<e.length;a++){let r=e[a],s=t[a];y.assert(r<0||s<0||r===s,(()=>n+` Shapes ${e} and ${t} must match`))}}}function GD(e){return!("number"==typeof e||e.some((e=>e<0)))}function Xf(e,t,n){let a=zb(e,n),r=!GD(a);if(r&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${a}`);if(r&&t.forEach((e=>{a=zb(e.shape,a)})),!GD(a))throw new Error(`Non-fully-defined elementShape: ${a}`);return a}function zb(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);let n=[];for(let a=0;a<e.length;++a){let r=e[a],s=t[a];if(r>=0&&s>=0&&r!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[a]=r>=0?r:s}return n}var Bb=class{constructor(e,t,n,a,r,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=a,this.identicalElementShapes=r,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=mt(0),Ae(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.tensor.id))&&t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);let t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);let n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0===this.size()&&(null==this.elementShape||0===this.elementShape.length)&&(this.elementShape=t.shape),Wn(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Ae(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return nr([],[0].concat(this.elementShape));let n=this.readMany(e);return Wn(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),qe(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return nr([],[0].concat(this.elementShape));let t=[];for(let e=0;e<this.size();e++)t.push(e);let n=this.readMany(t);return Wn(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),oe(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);let n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,dr(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0,a=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);let r=0===n?0:t.size/n,s=[];B((()=>{t=R(t,[1,n,r]);for(let n=0;n<e.length;++n){let i=[0,0===n?0:a[n-1],0],o=[1,e[n],r];s[n]=R(Rt(t,i,o),this.elementShape)}return s}));let i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}},hl=class{constructor(e,t,n,a=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);Wn(t,e.shape,"TensorList shape mismatch: "),Ae(e)})),this.idTensor=mt(0),this.maxNumElements=a,Ae(this.idTensor)}get id(){return this.idTensor.id}copy(){return new hl([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{(null==e||!e.has(t.id))&&t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Wn(e,this.elementShape,"TensorList shape mismatch: ");let a=Xf(this.elementShape,this.tensors,e);return B((()=>{let e=this.tensors.map((e=>R(e,a)));return qe(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");let n=Xf(this.elementShape,this.tensors,e),a=this.tensors.pop();return a.kept=!1,Wn(a.shape,e,"TensorList shape mismatch: "),R(a,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Wn(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Ae(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);let t=new hl([],this.elementShape,this.elementDtype,this.maxNumElements);t.tensors.length=e;for(let n=0;n<Math.min(this.tensors.length,e);++n)t.tensors[n]=this.tensors[n];return t}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);Wn(this.tensors[e].shape,t,"TensorList shape mismatch: ");let a=Xf(this.elementShape,this.tensors,t);return R(this.tensors[e],a)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Wn(this.elementShape,t.shape,"TensorList shape mismatch: "),Ae(t),null!=this.tensors[e]&&(this.tensors[e].kept=!1),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Wn(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());let a=Xf(this.elementShape,this.tensors,n);return 0===e.length?nr([],[0].concat(a)):B((()=>{let t=e.map((e=>R(this.tensors[e],a)));return qe(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Wn(this.elementShape,t,"TensorList shape mismatch: ");let n=Xf(this.elementShape,this.tensors,t);return 0===this.size()?nr([],[0].concat(n)):B((()=>{let e=this.tensors.map((e=>R(e,n)));return oe(e,0)}))}};function WD(e,t,n){let a=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);Wn(e.shape.slice(1),t,"TensorList shape mismatch: ");let r=dr(e);return new hl(r,t,a)}function UD(e,t,n,a){return new hl([],e,t,a)}function HD(e,t,n,a){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);let r=Math.max(...t);if(null!=a&&-1!==a&&r>=a)throw new Error(`Max index must be < array size (${r}  vs. ${a})`);let s=new hl([],n,e.dtype,a),i=dr(e,0);return t.forEach(((e,t)=>{s.setItem(e,i[t])})),s}function qD(e,t,n){let a=0,r=t.map((e=>(a+=e,a)));if(a!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${a}, and tensor's shape is: ${e.shape}`);let s=zb(e.shape.slice(1),n),i=0===a?0:e.size/a,o=B((()=>{let n=[];e=R(e,[1,a,i]);for(let a=0;a<t.length;++a){let o=[0,0===a?0:r[a-1],0],l=[1,t[a],i];n[a]=R(Rt(e,o,l),s)}return e.dispose(),n})),l=new hl([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)l.setItem(e,o[e]);return l}var KD=async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{let a=I("thenBranch",e,t,n),r=I("elseBranch",e,t,n),s=I("cond",e,t,n),i=I("args",e,t,n);return(await s.data())[0]?n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{let a=I("body",e,t,n),r=I("cond",e,t,n),s=I("args",e,t,n),i=await n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map((e=>e.id)),l=await i[0].data();i.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&e.dispose()}));let u=s;for(;l[0];){let e=u;u=await n.functionMap[a].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);let t=u.map((e=>e.id));e.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}));let s=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await s[0].data(),s.forEach((e=>{!e.kept&&-1===o.indexOf(e.id)&&-1===t.indexOf(e.id)&&e.dispose()}))}return u}case"LoopCond":return[ti(I("pred",e,t,n))];case"Switch":{let a=I("pred",e,t,n),r=I("data",e,t,n);return r.kept||(r=ti(r)),(await a.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{let a=e.inputNames.find((e=>void 0!==Cr(e,t,n)));return a?[ti(Cr(a,t,n))]:void 0}case"Enter":{let a=I("frameName",e,t,n),r=I("tensor",e,t,n);return n.enterFrame(a),[ti(r)]}case"Exit":{let a=I("tensor",e,t,n);return n.exitFrame(),[ti(a)]}case"NextIteration":{let a=I("tensor",e,t,n);return n.nextIteration(),[ti(a)]}case"TensorArrayV3":{let a=I("size",e,t,n),r=I("dtype",e,t,n),s=I("elementShape",e,t,n),i=I("dynamicSize",e,t,n),o=I("clearAfterRead",e,t,n),l=I("identicalElementShapes",e,t,n),u=I("name",e,t,n),p=new Bb(u,r,a,s,l,i,o);return n.addTensorArray(p),[p.idTensor,mt(1)]}case"TensorArrayWriteV3":{let a=I("tensorArrayId",e,t,n),r=I("index",e,t,n),s=I("tensor",e,t,n),i=n.getTensorArray(a.id);return i.write(r,s),[i.idTensor]}case"TensorArrayReadV3":{let a=I("tensorArrayId",e,t,n),r=I("index",e,t,n);return[n.getTensorArray(a.id).read(r)]}case"TensorArrayGatherV3":{let a=I("tensorArrayId",e,t,n),r=I("indices",e,t,n),s=I("dtype",e,t,n);return[n.getTensorArray(a.id).gather(r,s)]}case"TensorArrayScatterV3":{let a=I("tensorArrayId",e,t,n),r=I("indices",e,t,n),s=I("tensor",e,t,n),i=n.getTensorArray(a.id);return i.scatter(r,s),[i.idTensor]}case"TensorArrayConcatV3":{let a=I("tensorArrayId",e,t,n),r=n.getTensorArray(a.id),s=I("dtype",e,t,n);return[r.concat(s)]}case"TensorArraySplitV3":{let a=I("tensorArrayId",e,t,n),r=I("tensor",e,t,n),s=I("lengths",e,t,n),i=n.getTensorArray(a.id);return i.split(s,r),[i.idTensor]}case"TensorArraySizeV3":{let a=I("tensorArrayId",e,t,n);return[mt(n.getTensorArray(a.id).size(),"int32")]}case"TensorArrayCloseV3":{let a=I("tensorArrayId",e,t,n),r=n.getTensorArray(a.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{let a=I("tensorListId",e,t,n),r=I("index",e,t,n),s=I("tensor",e,t,n),i=n.getTensorList(a.id);return i.setItem(r,s),[i.idTensor]}case"TensorListGetItem":{let a=I("tensorListId",e,t,n),r=I("index",e,t,n),s=I("elementShape",e,t,n),i=I("elementDType",e,t,n);return[n.getTensorList(a.id).getItem(r,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{let a=I("indices",e,t,n),r=HD(I("tensor",e,t,n),a,I("elementShape",e,t,n),I("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{let a,r=I("elementShape",e,t,n),s=I("elementDType",e,t,n);a="TensorListReserve"===e.op?"numElements":"maxNumElements";let i=I(a,e,t,n),o=UD(r,s,i,"TensorListReserve"===e.op?-1:i);return n.addTensorList(o),[o.idTensor]}case"TensorListGather":{let a=I("tensorListId",e,t,n),r=I("indices",e,t,n),s=I("elementShape",e,t,n),i=I("elementDType",e,t,n);return[n.getTensorList(a.id).gather(r,i,s)]}case"TensorListStack":{let a=I("tensorListId",e,t,n),r=I("elementShape",e,t,n),s=I("elementDType",e,t,n),i=I("numElements",e,t,n);return[n.getTensorList(a.id).stack(r,s,i)]}case"TensorListFromTensor":{let a=WD(I("tensor",e,t,n),I("elementShape",e,t,n),I("elementDType",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListConcat":case"TensorListConcatV2":{let a=I("tensorListId",e,t,n),r=n.getTensorList(a.id),s=I("dtype",e,t,n),i=I("elementShape",e,t,n);return[r.concat(s,i)]}case"TensorListPushBack":{let a=I("tensorListId",e,t,n),r=I("tensor",e,t,n),s=n.getTensorList(a.id);return s.pushBack(r),[s.idTensor]}case"TensorListPopBack":{let a=I("tensorListId",e,t,n),r=I("elementShape",e,t,n),s=I("elementDType",e,t,n);return[n.getTensorList(a.id).popBack(r,s)]}case"TensorListSplit":{let a=I("tensor",e,t,n),r=I("elementShape",e,t,n),s=qD(a,I("lengths",e,t,n),r);return n.addTensorList(s),[s.idTensor]}case"TensorListLength":{let a=I("tensorListId",e,t,n);return[mt(n.getTensorList(a.id).size(),"int32")]}case"TensorListResize":{let a=I("tensorListId",e,t,n),r=I("size",e,t,n),s=n.getTensorList(a.id).resize(r);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}};function jD(e,t,n){let[a,r]=I("fusedOps",e,t,n),s="biasadd"===a,i=!s,o="prelu"===r,l="fusedbatchnorm"===a,u=I("numArgs",e,t,n);if(s){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");let p=I("strides",e,t,n),h=Fh(e,t,n),d=I("dataFormat",e,t,n).toUpperCase(),c=I("dilations",e,t,n),[f,m]=I("args",e,t,n);return i&&(m=f,f=void 0),{stride:p,pad:h,dataFormat:d,dilations:c,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:I("leakyreluAlpha",e,t,n)}}var XD=(e,t,n,a=se)=>{switch(e.op){case"Conv1D":{let r=I("stride",e,t,n),s=I("pad",e,t,n),i=I("dataFormat",e,t,n).toUpperCase(),o=I("dilation",e,t,n);return[a.conv1d(I("x",e,t,n),I("filter",e,t,n),r,s,i,o)]}case"Conv2D":{let r=I("strides",e,t,n),s=Fh(e,t,n),i=I("dataFormat",e,t,n).toUpperCase(),o=I("dilations",e,t,n);return[a.conv2d(I("x",e,t,n),I("filter",e,t,n),[r[1],r[2]],s,i,[o[1],o[2]])]}case"_FusedConv2D":{let{stride:r,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:p,leakyreluAlpha:h}=jD(e,t,n);return[a.fused.conv2d({x:I("x",e,t,n),filter:I("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:p,preluActivationWeights:u,leakyreluAlpha:h})]}case"FusedDepthwiseConv2dNative":{let{stride:r,pad:s,dataFormat:i,dilations:o,biasArg:l,preluArg:u,activationFunc:p,leakyreluAlpha:h}=jD(e,t,n);return[a.fused.depthwiseConv2d({x:I("x",e,t,n),filter:I("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:i,dilations:[o[1],o[2]],bias:l,activation:p,preluActivationWeights:u,leakyreluAlpha:h})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{let r=I("outputShape",e,t,n),s=I("strides",e,t,n),i=Fh(e,t,n);return[a.conv2dTranspose(I("x",e,t,n),I("filter",e,t,n),r,[s[1],s[2]],i)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{let r=I("strides",e,t,n),s=Fh(e,t,n),i=I("dilations",e,t,n),o=I("dataFormat",e,t,n).toUpperCase();return[a.depthwiseConv2d(I("input",e,t,n),I("filter",e,t,n),[r[1],r[2]],s,o,[i[1],i[2]])]}case"Conv3D":{let r=I("strides",e,t,n),s=I("pad",e,t,n),i=I("dataFormat",e,t,n).toUpperCase(),o=I("dilations",e,t,n);return[a.conv3d(I("x",e,t,n),I("filter",e,t,n),[r[1],r[2],r[3]],s,i,[o[1],o[2],o[3]])]}case"AvgPool":{let r=I("strides",e,t,n),s=I("pad",e,t,n),i=I("kernelSize",e,t,n);return[a.avgPool(I("x",e,t,n),[i[1],i[2]],[r[1],r[2]],s)]}case"MaxPool":{let r=I("strides",e,t,n),s=I("pad",e,t,n),i=I("kernelSize",e,t,n);return[a.maxPool(I("x",e,t,n),[i[1],i[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{let r=I("strides",e,t,n),s=I("pad",e,t,n),i=I("kernelSize",e,t,n),o=I("includeBatchInIndex",e,t,n),{result:l,indexes:u}=a.maxPoolWithArgmax(I("x",e,t,n),[i[1],i[2]],[r[1],r[2]],s,o);return[l,u]}case"AvgPool3D":{let r=I("strides",e,t,n),s=I("pad",e,t,n),i=I("kernelSize",e,t,n);return[a.avgPool3d(I("x",e,t,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{let r=I("strides",e,t,n),s=I("pad",e,t,n),i=I("kernelSize",e,t,n);return[a.maxPool3d(I("x",e,t,n),[i[1],i[2],i[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{let r=I("strides",e,t,n),s=I("pad",e,t,n),i=I("dilations",e,t,n),o=r[1],l=r[2],u=i[1],p=i[2];return[a.dilation2d(I("x",e,t,n),I("filter",e,t,n),[o,l],s,[u,p],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},YD=(e,t,n,a=se)=>{switch(e.op){case"Fill":{let r=I("shape",e,t,n),s=I("dtype",e,t,n),i=I("value",e,t,n);return[a.fill(r,i,s)]}case"LinSpace":{let r=I("start",e,t,n),s=I("stop",e,t,n),i=I("num",e,t,n);return[a.linspace(r,s,i)]}case"Multinomial":{let r=I("logits",e,t,n),s=I("numSamples",e,t,n),i=I("seed",e,t,n);return[a.multinomial(r,s,i)]}case"OneHot":{let r=I("indices",e,t,n),s=I("depth",e,t,n),i=I("onValue",e,t,n),o=I("offValue",e,t,n),l=I("dtype",e,t,n);return[a.oneHot(r,s,i,o,l)]}case"Ones":return[a.ones(I("shape",e,t,n),I("dtype",e,t,n))];case"OnesLike":return[a.onesLike(I("x",e,t,n))];case"RandomStandardNormal":return[a.randomStandardNormal(I("shape",e,t,n),I("dtype",e,t,n),I("seed",e,t,n))];case"RandomUniform":return[a.randomUniform(I("shape",e,t,n),I("minval",e,t,n),I("maxval",e,t,n),I("dtype",e,t,n))];case"Range":{let r=I("start",e,t,n),s=I("stop",e,t,n),i=I("step",e,t,n);return[a.range(r,s,i,I("dtype",e,t,n))]}case"TruncatedNormal":{let r=I("shape",e,t,n),s=I("mean",e,t,n),i=I("stdDev",e,t,n),o=I("seed",e,t,n);return[a.truncatedNormal(r,s,i,I("dtype",e,t,n),o)]}case"Zeros":return[a.zeros(I("shape",e,t,n),I("dtype",e,t,n))];case"ZerosLike":return[a.zerosLike(I("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function hN(e,t,n){return{boxes:I("boxes",e,t,n),scores:I("scores",e,t,n),maxOutputSize:I("maxOutputSize",e,t,n),iouThreshold:I("iouThreshold",e,t,n),scoreThreshold:I("scoreThreshold",e,t,n),softNmsSigma:I("softNmsSigma",e,t,n)}}var ZD=async(e,t,n,a,r=se)=>{switch(e.op){case"NonMaxSuppressionV5":{let{boxes:a,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=hN(e,t,n),p=await r.image.nonMaxSuppressionWithScoreAsync(a,s,i,o,l,u);return[p.selectedIndices,p.selectedScores]}case"NonMaxSuppressionV4":{let{boxes:a,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=hN(e,t,n),u=I("padToMaxOutputSize",e,t,n),p=await r.image.nonMaxSuppressionPaddedAsync(a,s,i,o,l,u);return[p.selectedIndices,p.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{let{boxes:a,scores:s,maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=hN(e,t,n);return[await r.image.nonMaxSuppressionAsync(a,s,i,o,l)]}case"Where":{let a=r.cast(I("condition",e,t,n),"bool"),s=[await r.whereAsync(a)];return a.dispose(),s}case"ListDiff":return r.setdiff1dAsync(I("x",e,t,n),I("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}},JD=(e,t,n,a=se)=>{switch(e.op){case"LowerBound":{let r=I("sortedSequence",e,t,n),s=I("values",e,t,n);return[a.lowerBound(r,s)]}case"TopKV2":{let r=I("x",e,t,n),s=I("k",e,t,n),i=I("sorted",e,t,n),o=a.topk(r,s,i);return[o.values,o.indices]}case"UpperBound":{let r=I("sortedSequence",e,t,n),s=I("values",e,t,n);return[a.upperBound(r,s)]}case"Unique":{let r=I("x",e,t,n),s=a.unique(r);return[s.values,s.indices]}case"UniqueV2":{let r=I("x",e,t,n),s=I("axis",e,t,n),i=a.unique(r,s);return[i.values,i.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},QD=(e,t,n,a=se)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":let r=I("default",e,t,n);return[Cr(e.name,t,n)||r];case"Placeholder":return[Cr(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[ti(I("x",e,t,n))];case"IdentityN":return I("x",e,t,n).map((e=>ti(e)));case"Shape":return[a.tensor1d(I("x",e,t,n).shape,"int32")];case"ShapeN":return I("x",e,t,n).map((e=>a.tensor1d(e.shape)));case"Size":return[a.scalar(I("x",e,t,n).size,"int32")];case"Rank":return[a.scalar(I("x",e,t,n).rank,"int32")];case"NoOp":return[a.scalar(1)];case"Print":let s=I("x",e,t,n),i=I("data",e,t,n),o=I("message",e,t,n),l=I("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(o);for(let e=0;e<i.length;e++)console.log(Array.prototype.slice.call(i[e].dataSync()).slice(0,l));return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}},Vb=class{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=mt(0),this.tensorMap=new Map,Ae(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return mt(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),B((()=>{let e=dr(t),a=n.length,r=e.length;y.assert(a===r,(()=>`The number of elements doesn't match, keys has ${a} elements, the values has ${r} elements.`));for(let t=0;t<a;t++){let a=n[t],r=e[t];Ae(r),this.tensorMap.set(a,r)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);let n=await e.data();return B((()=>{let e=[];for(let a=0;a<n.length;a++){let r=n[a],s=this.findWithDefault(r,t);e.push(s)}return qe(e)}))}findWithDefault(e,t){let n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}},tR=async(e,t,n,a)=>{switch(e.op){case"HashTable":case"HashTableV2":{let r=a.getHashTableHandleByName(e.name);if(null!=r)return[r];{let r=I("keyDType",e,t,n),s=I("valueDType",e,t,n),i=new Vb(r,s);return a.addHashTable(e.name,i),[i.handle]}}case"InitializeTable":case"InitializeTableV2":case"LookupTableImport":case"LookupTableImportV2":{let r=I("tableHandle",e,t,n,a),s=I("keys",e,t,n),i=I("values",e,t,n);return[await a.getHashTableById(r.id).import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{let r=I("tableHandle",e,t,n,a),s=I("keys",e,t,n),i=I("defaultValue",e,t,n);return[await a.getHashTableById(r.id).find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{let r=I("tableHandle",e,t,n,a);return[a.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},eR=(e,t,n,a=se)=>{switch(e.op){case"ResizeBilinear":{let r=I("images",e,t,n),s=I("size",e,t,n),i=I("alignCorners",e,t,n),o=I("halfPixelCenters",e,t,n);return[a.image.resizeBilinear(r,[s[0],s[1]],i,o)]}case"ResizeNearestNeighbor":{let r=I("images",e,t,n),s=I("size",e,t,n),i=I("alignCorners",e,t,n),o=I("halfPixelCenters",e,t,n);return[a.image.resizeNearestNeighbor(r,[s[0],s[1]],i,o)]}case"CropAndResize":{let r=I("image",e,t,n),s=I("boxes",e,t,n),i=I("boxInd",e,t,n),o=I("cropSize",e,t,n),l=I("method",e,t,n),u=I("extrapolationValue",e,t,n);return[a.image.cropAndResize(r,s,i,o,l,u)]}case"ImageProjectiveTransformV3":{let r=I("images",e,t,n),s=I("transforms",e,t,n),i=I("outputShape",e,t,n),o=I("fillValue",e,t,n),l=I("interpolation",e,t,n),u=I("fillMode",e,t,n);return[a.image.transform(r,s,l.toLowerCase(),u.toLowerCase(),o,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},rR=(e,t,n,a=se)=>{switch(e.op){case"Equal":return[a.equal(I("a",e,t,n),I("b",e,t,n))];case"NotEqual":return[a.notEqual(I("a",e,t,n),I("b",e,t,n))];case"Greater":return[a.greater(I("a",e,t,n),I("b",e,t,n))];case"GreaterEqual":return[a.greaterEqual(I("a",e,t,n),I("b",e,t,n))];case"Less":return[a.less(I("a",e,t,n),I("b",e,t,n))];case"LessEqual":return[a.lessEqual(I("a",e,t,n),I("b",e,t,n))];case"LogicalAnd":return[a.logicalAnd(I("a",e,t,n),I("b",e,t,n))];case"LogicalNot":return[a.logicalNot(I("a",e,t,n))];case"LogicalOr":return[a.logicalOr(I("a",e,t,n),I("b",e,t,n))];case"Select":case"SelectV2":return[a.where(I("condition",e,t,n),I("a",e,t,n),I("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},nR=(e,t,n,a=se)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[a.matMul(I("a",e,t,n),I("b",e,t,n),I("transposeA",e,t,n),I("transposeB",e,t,n))];case"Einsum":return[a.einsum(I("equation",e,t,n),...I("tensors",e,t,n))];case"Transpose":return[a.transpose(I("x",e,t,n),I("perm",e,t,n))];case"_FusedMatMul":let[r,s]=I("fusedOps",e,t,n),i="biasadd"===r,o="prelu"===s,l=I("numArgs",e,t,n),u=I("leakyreluAlpha",e,t,n);if(i){if(o&&2!==l)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&1!==l)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}let[p,h]=I("args",e,t,n);return[a.fused.matMul({a:I("a",e,t,n),b:I("b",e,t,n),transposeA:I("transposeA",e,t,n),transposeB:I("transposeB",e,t,n),bias:p,activation:s,preluActivationWeights:h,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}},oR=(e,t,n,a=se)=>{switch(e.op){case"EuclideanNorm":return[a.euclideanNorm(I("x",e,t,n),I("axis",e,t,n),I("keepDims",e,t,n))];case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[a.batchNorm(I("x",e,t,n),I("mean",e,t,n),I("variance",e,t,n),I("offset",e,t,n),I("scale",e,t,n),I("epsilon",e,t,n))];case"LRN":return[a.localResponseNormalization(I("x",e,t,n),I("radius",e,t,n),I("bias",e,t,n),I("alpha",e,t,n),I("beta",e,t,n))];case"Softmax":return[a.softmax(I("x",e,t,n))];case"LogSoftmax":return[a.logSoftmax(I("x",e,t,n))];case"SparseToDense":return[a.sparseToDense(I("sparseIndices",e,t,n),I("outputShape",e,t,n),I("sparseValues",e,t,n),I("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},sR=(e,t,n,a=se)=>{switch(e.op){case"RaggedGather":{let{outputNestedSplits:r,outputDenseValues:s}=a.raggedGather(I("paramsNestedSplits",e,t,n),I("paramsDenseValues",e,t,n),I("indices",e,t,n),I("outputRaggedRank",e,t,n));return r.concat(s)}case"RaggedRange":{let{rtNestedSplits:r,rtDenseValues:s}=a.raggedRange(I("starts",e,t,n),I("limits",e,t,n),I("splits",e,t,n));return[r,s]}case"RaggedTensorToTensor":return[a.raggedTensorToTensor(I("shape",e,t,n),I("values",e,t,n),I("defaultValue",e,t,n),I("rowPartitionTensors",e,t,n),I("rowPartitionTypes",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},iR=(e,t,n,a=se)=>{switch(e.op){case"Max":{let r=I("axis",e,t,n),s=I("keepDims",e,t,n);return[a.max(I("x",e,t,n),r,s)]}case"Mean":{let r=I("axis",e,t,n),s=I("keepDims",e,t,n);return[a.mean(I("x",e,t,n),r,s)]}case"Min":{let r=I("axis",e,t,n),s=I("keepDims",e,t,n);return[a.min(I("x",e,t,n),r,s)]}case"Sum":{let r=I("axis",e,t,n),s=I("keepDims",e,t,n);return[a.sum(I("x",e,t,n),r,s)]}case"All":{let r=I("axis",e,t,n),s=I("keepDims",e,t,n);return[a.all(I("x",e,t,n),r,s)]}case"Any":{let r=I("axis",e,t,n),s=I("keepDims",e,t,n);return[a.any(I("x",e,t,n),r,s)]}case"ArgMax":{let r=I("axis",e,t,n);return[a.argMax(I("x",e,t,n),r)]}case"ArgMin":{let r=I("axis",e,t,n);return[a.argMin(I("x",e,t,n),r)]}case"Prod":{let r=I("axis",e,t,n),s=I("keepDims",e,t,n);return[a.prod(I("x",e,t,n),r,s)]}case"Cumprod":{let r=I("axis",e,t,n),s=I("exclusive",e,t,n),i=I("reverse",e,t,n);return[a.cumprod(I("x",e,t,n),r,s,i)]}case"Cumsum":{let r=I("axis",e,t,n),s=I("exclusive",e,t,n),i=I("reverse",e,t,n);return[a.cumsum(I("x",e,t,n),r,s,i)]}case"Bincount":let r=I("x",e,t,n),s=I("weights",e,t,n),i=I("size",e,t,n);return[a.bincount(r,s,i)];case"DenseBincount":{let r=I("x",e,t,n),s=I("weights",e,t,n),i=I("size",e,t,n),o=I("binaryOutput",e,t,n);return[a.denseBincount(r,s,i,o)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},aR=(e,t,n,a=se)=>{switch(e.op){case"ConcatV2":case"Concat":{let r=I("n",e,t,n),s=I("axis",e,t,n),i=I("tensors",e,t,n);return i=i.slice(0,r),[a.concat(i,s)]}case"Gather":{let r=I("x",e,t,n),s=I("indices",e,t,n);return[a.gather(r,a.cast(s,"int32"),0)]}case"GatherV2":{let r=I("axis",e,t,n),s=I("batchDims",e,t,n),i=I("x",e,t,n),o=I("indices",e,t,n);return[a.gather(i,a.cast(o,"int32"),r,s)]}case"Reverse":{let r=I("dims",e,t,n),s=[];for(let e=0;e<r.length;e++)r[e]&&s.push(e);let i=I("x",e,t,n);return[a.reverse(i,s)]}case"ReverseV2":{let r=I("axis",e,t,n),s=I("x",e,t,n);return[a.reverse(s,r)]}case"Slice":{let r=I("begin",e,t,n),s=I("size",e,t,n);return[a.slice(I("x",e,t,n),r,s)]}case"StridedSlice":{let r=I("begin",e,t,n),s=I("end",e,t,n),i=I("strides",e,t,n),o=I("beginMask",e,t,n),l=I("endMask",e,t,n),u=I("ellipsisMask",e,t,n),p=I("newAxisMask",e,t,n),h=I("shrinkAxisMask",e,t,n),d=I("x",e,t,n);return[a.stridedSlice(d,r,s,i,o,l,u,p,h)]}case"Pack":return B((()=>{let r=I("axis",e,t,n),s=I("tensors",e,t,n),i=s[0].shape,o=a.squeeze(s[0]).shape,l=s.map((e=>{let t=y.arraysEqual(e.shape,i);if(!t&&!y.arraysEqual(a.squeeze(e).shape,o))throw new Error("the input tensors shape does not match");return t?e:a.reshape(e,i)}));return[a.stack(l,r)]}));case"Unpack":{let r=I("axis",e,t,n),s=I("tensor",e,t,n);return a.unstack(s,r)}case"Tile":{let r=I("reps",e,t,n);return[a.tile(I("x",e,t,n),r)]}case"Split":case"SplitV":{let r=I("axis",e,t,n),s=I("numOrSizeSplits",e,t,n),i=I("x",e,t,n);return a.split(i,s,r)}case"ScatterNd":{let r=I("indices",e,t,n),s=I("values",e,t,n),i=I("shape",e,t,n);return[a.scatterND(r,s,i)]}case"GatherNd":{let r=I("x",e,t,n),s=I("indices",e,t,n);return[a.gatherND(r,s)]}case"SparseToDense":{let r=I("sparseIndices",e,t,n),s=I("outputShape",e,t,n),i=I("sparseValues",e,t,n),o=I("defaultValue",e,t,n);return[a.sparseToDense(r,i,s,i.dtype===o.dtype?o:a.cast(o,i.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}},lR=(e,t,n,a=se)=>{switch(e.op){case"SparseFillEmptyRows":{let{outputIndices:r,outputValues:s,emptyRowIndicator:i,reverseIndexMap:o}=a.sparse.sparseFillEmptyRows(I("indices",e,t,n),I("values",e,t,n),I("denseShape",e,t,n),I("defaultValue",e,t,n));return[r,s,i,o]}case"SparseReshape":{let{outputIndices:r,outputShape:s}=a.sparse.sparseReshape(I("inputIndices",e,t,n),I("inputShape",e,t,n),I("newShape",e,t,n));return[r,s]}case"SparseSegmentMean":return[a.sparse.sparseSegmentMean(I("data",e,t,n),I("indices",e,t,n),I("segmentIds",e,t,n))];case"SparseSegmentSum":return[a.sparse.sparseSegmentSum(I("data",e,t,n),I("indices",e,t,n),I("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},uR=(e,t,n,a=se)=>{switch(e.op){case"FFT":return[a.fft(I("x",e,t,n))];case"IFFT":return[a.ifft(I("x",e,t,n))];case"RFFT":return[a.rfft(I("x",e,t,n))];case"IRFFT":return[a.irfft(I("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},cR=(e,t,n,a=se)=>{switch(e.op){case"StringNGrams":{let{nGrams:r,nGramsSplits:s}=a.string.stringNGrams(I("data",e,t,n),I("dataSplits",e,t,n),I("separator",e,t,n),I("nGramWidths",e,t,n),I("leftPad",e,t,n),I("rightPad",e,t,n),I("padWidth",e,t,n),I("preserveShortSequences",e,t,n));return[r,s]}case"StringSplit":{let{indices:r,values:s,shape:i}=a.string.stringSplit(I("input",e,t,n),I("delimiter",e,t,n),I("skipEmpty",e,t,n));return[r,s,i]}case"StringToHashBucketFast":return[a.string.stringToHashBucketFast(I("input",e,t,n),I("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}},pR=(e,t,n,a=se)=>{switch(e.op){case"Cast":return[a.cast(I("x",e,t,n),I("dtype",e,t,n))];case"ExpandDims":{let r=I("axis",e,t,n);return[a.expandDims(I("x",e,t,n),r)]}case"Squeeze":{let r=I("axis",e,t,n);return[a.squeeze(I("x",e,t,n),r)]}case"Reshape":return[a.reshape(I("x",e,t,n),I("shape",e,t,n))];case"MirrorPad":return[a.mirrorPad(I("x",e,t,n),I("padding",e,t,n),I("mode",e,t,n))];case"PadV2":case"Pad":return[a.pad(I("x",e,t,n),I("padding",e,t,n),I("constantValue",e,t,n))];case"SpaceToBatchND":{let r=I("blockShape",e,t,n),s=I("paddings",e,t,n);return[a.spaceToBatchND(I("x",e,t,n),r,s)]}case"BatchToSpaceND":{let r=I("blockShape",e,t,n),s=I("crops",e,t,n);return[a.batchToSpaceND(I("x",e,t,n),r,s)]}case"DepthToSpace":{let r=I("blockSize",e,t,n),s=I("dataFormat",e,t,n).toUpperCase();return[a.depthToSpace(I("x",e,t,n),r,s)]}case"BroadcastTo":return[a.broadcastTo(I("x",e,t,n),I("shape",e,t,n))];case"BroadcastArgs":return[a.broadcastArgs(I("s0",e,t,n),I("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}};function gN(e,t,n,a,r=B){let s=((e,t,n)=>{switch(e.category){case"arithmetic":return r((()=>BD(e,t,n)));case"basic_math":return r((()=>VD(e,t,n)));case"control":return KD(e,t,n);case"convolution":return r((()=>XD(e,t,n)));case"creation":return r((()=>YD(e,t,n)));case"dynamic":return ZD(e,t,n);case"evaluation":return r((()=>JD(e,t,n)));case"image":return r((()=>eR(e,t,n)));case"graph":return r((()=>QD(e,t,n)));case"logical":return r((()=>rR(e,t,n)));case"matrices":return r((()=>nR(e,t,n)));case"normalization":return r((()=>oR(e,t,n)));case"ragged":return r((()=>sR(e,t,n)));case"reduction":return r((()=>iR(e,t,n)));case"slice_join":return r((()=>aR(e,t,n)));case"sparse":return r((()=>lR(e,t,n)));case"spectral":return r((()=>uR(e,t,n)));case"string":return r((()=>cR(e,t,n)));case"transformation":return r((()=>pR(e,t,n)));case"hash_table":return tR(e,t,n,a);case"custom":let s=Tb(e.op);if(s&&s.customExecutor)return s.customExecutor(new Mb(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return y.isPromise(s)?s.then((e=>[].concat(e))):[].concat(s)}var Ph=class{constructor(e={},t={},n={},a={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=a,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){let e=[];for(let t=0;t<this.contexts.length-1;t++){let n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;let e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(let t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(let t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}};function xN(e,t,n,a){let r=new Set,s=[],i=null,o=null,l=new Set,u=Object.keys(e).map((e=>bn(e)[0])),p=[];null!=a&&(p=a.map((e=>bn(e.name)[0])));let h=[...t];for(;h.length>0;){let e=h.pop();if((yN(e)||G7(e)||W7(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>r.has(e)))),r.add(e.name),null==n[e.name]&&-1===u.indexOf(e.name)&&-1===p.indexOf(e.name)){if(0===e.inputs.length){s.push(e.name);continue}e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),h.push(e))}))}}return{inputs:e,outputs:t,usedNodes:r,missingInputs:s,dynamicNode:i,syncInputs:o}}function mR(e,t,n){let{usedNodes:a,inputs:r}=n,s=[],i=Object.keys(r).map((e=>bn(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{a.has(e.name)&&s.push(e)})),e.weights.forEach((e=>{a.has(e.name)&&s.push(e)})),null!=o&&o.forEach((e=>{a.has(e.name)&&s.push(e)}));let l=new Set,u=[];for(;s.length>0;){let e=s.pop();l.add(e.name),t[e.name]||u.push(e),e.children.forEach((e=>{!l.has(e.name)&&a.has(e.name)&&e.inputs.every((e=>l.has(e.name)))&&s.push(e)}))}return u}var z7=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],B7=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],V7=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function yN(e){return z7.indexOf(e.op)>=0}function G7(e){return B7.indexOf(e.op)>=0}function W7(e){return V7.indexOf(e.op)>=0}var kc=class{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.keepIntermediateTensors=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new kc(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){let t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{let t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){let n=e.map((e=>e.name)).sort(),a=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+a.join(this.SEPERATOR)}compile(e,t){let n=xN(e,t,this.weightMap,this._initNodes),{missingInputs:a,dynamicNode:r,syncInputs:s}=n;if(null!=r)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(a.length>0){let n=t.map((e=>e.name)),r=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${r}]. Missing the following inputs: [${a}]`)}return mR(this.graph,this.weightMap,n)}cloneAndKeepTensor(e){if(null==e)return null;let t=e.clone();return Ae(t),t}cloneTensorList(e){return e?e.map((e=>this.cloneAndKeepTensor(e))):null}cloneTensorMap(e){return Object.fromEntries(Object.entries(e).map((([e,t])=>[e,this.cloneTensorList(t)])))}execute(e,t){this.disposeIntermediateTensors(),e=this.mapInputs(e);let n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);let a=n.map((e=>this.graph.nodes[bn(e)[0]])),r=t.map((e=>bn(e)[0])),s=r.map((e=>this.graph.nodes[e]));0===s.length&&(s=this._outputs);let i=this.getCompilationKey(a,s),o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));try{this.keepIntermediateTensors=M().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}let l={},u={};return B((()=>{let n=new Ph(this.weightMap,l,u,this.functionExecutorMap),a=Object.assign({},this.weightMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap)),Object.keys(e).forEach((t=>{let[n,r]=bn(t),s=[];s[r]=e[t],a[n]=s,this.keepIntermediateTensors&&(this.clonedTensorsMap[n]=this.cloneTensorList(s))}));let s=this.getFrozenTensorIds(a),i={};for(let e=0;e<o.length;e++){let t=o[e];if(!a[t.name]){let e=gN(t,a,n,this._resourceManager);if(y.isPromise(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);a[t.name]=e,this.keepIntermediateTensors&&(this.clonedTensorsMap[t.name]=this.cloneTensorList(e)),this.checkTensorForDisposal(t.name,t,a,n,s,r,i)}}return null==this.parent&&n.dispose(s),t.map((e=>Cr(e,a,n)))}))}getFrozenTensorIds(e){let t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,a,r,s,i){"control"===t.category||-1!==s.indexOf(e)||(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){let t=PD(e.name,n,a);null!=t&&t.forEach((e=>{if(e&&!e.kept&&!r.has(e.id)){let t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){!this.clonedTensorsMap||(Object.values(this.clonedTensorsMap).forEach((e=>{for(let t of e)t&&!t.isDisposed&&t.dispose()})),this.clonedTensorsMap=null)}getIntermediateTensors(){return this.clonedTensorsMap}async _executeAsync(e,t,n=!1,a={},r={}){this.disposeIntermediateTensors(),n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepIntermediateTensors=M().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){this.keepIntermediateTensors=!1,console.warn(e.message)}let s=new Ph(this.weightMap,a,r,this.functionExecutorMap);this.keepIntermediateTensors&&(this.clonedTensorsMap=this.cloneTensorMap(this.weightMap));let i=await this.executeWithControlFlow(e,s,t,n),o=t.map((e=>Cr(e,i,s))),l=o.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id)),p=new Set([...l,...u,...this.weightIds]);return Object.values(i).forEach((e=>{e.forEach((e=>{e&&!e.isDisposed&&!p.has(e.id)&&e.dispose()}))})),null==this.parent&&s.dispose(p),o}async executeFunctionAsync(e,t,n){let a=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(a,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,a){let r=Object.keys(e),s=r.map((e=>this.graph.nodes[bn(e)[0]])),i=n.map((e=>bn(e)[0])),o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);let{usedNodes:l,missingInputs:u,dynamicNode:p,syncInputs:h}=xN(e,o,this.weightMap,this._initNodes),d=[...s,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),c=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{let[n,a]=bn(t),r=[];r[a]=e[t],c[n]=r}));let f={},m=this.getFrozenTensorIds(c),g={};for(;d.length>0;){let e=this.processStack(s,d,t,c,g,m,i,f,l);await Promise.all(e)}null==p&&!a&&console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");let y=o.filter((e=>!yN(e)&&!Cr(e.name,c,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=p&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${r}]. Consider providing the following inputs: [${u}]. ${e}`)}return c}processStack(e,t,n,a,r,s,i,o,l){let u=[];for(;t.length>0;){let e=t.pop();n.currentContext=e.contexts;let p="";if("Enter"===e.node.op&&I("isConstant",e.node,a,n)&&([p]=Qs(e.node.name,n)),null==a[e.node.name]){let h=gN(e.node,a,n,this._resourceManager);p||([p]=Qs(e.node.name,n));let d=n.currentContext;y.isPromise(h)?u.push(h.then((u=>(a[p]=u,this.keepIntermediateTensors&&(this.clonedTensorsMap[p]=this.cloneTensorList(u)),n.currentContext=d,this.checkTensorForDisposal(p,e.node,a,n,s,i,o),this.processChildNodes(e.node,t,n,a,r,l),u)))):(a[p]=h,this.keepIntermediateTensors&&(this.clonedTensorsMap[p]=this.cloneTensorList(h)),this.checkTensorForDisposal(p,e.node,a,n,s,i,o),this.processChildNodes(e.node,t,n,a,r,l))}else this.processChildNodes(e.node,t,n,a,r,l)}return u}processChildNodes(e,t,n,a,r,s){e.children.forEach((e=>{let[i]=Qs(e.name,n);r[i]||!s.has(e.name)||("Merge"===e.op?e.inputNames.some((e=>!!Cr(e,a,n)))&&(r[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!Cr(e,a,n)))&&(r[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{let n=e[t],[a]=bn(t),r=this.graph.nodes[a];if(r.attrParams.shape&&r.attrParams.shape.value){let e=r.attrParams.shape.value,t=e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t));y.assert(t,(()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}r.attrParams.dtype&&r.attrParams.dtype.value&&y.assert(n.dtype===r.attrParams.dtype.value,(()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){var t,n;let a={};for(let r in e){let s=null===(n=null===(t=this._signature)||void 0===t?void 0:t.inputs)||void 0===n?void 0:n[r];null!=s?a[s.name]=e[r]:a[r]=e[r]}return a}checkInputs(e){let t=Object.keys(e).filter((e=>{let[t]=bn(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>{var t,n;let a=null===(n=null===(t=this._signature)||void 0===t?void 0:t.outputs)||void 0===n?void 0:n[e];return null!=a?a.name:e}),{})}checkOutputs(e){e.forEach((e=>{let[t]=bn(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}},Gb=class{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(let e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(let e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}},U7="?tfjs-format=file",H7="model.json",Lh=class{constructor(e,t={},n=$r){this.modelUrl=e,this.loadOptions=t,this.version="n/a",this.io=n,null==t&&(this.loadOptions={}),this.resourceManager=new Gb}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}get modelStructuredOutputKeys(){return this.structuredOutputKeys}findIOHandler(){let e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=this.io.browserHTTPRequest(e,this.loadOptions);else{let t=this.io.getLoadHandlers(e,this.loadOptions);if(0===t.length)t.push(this.io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");let e=this.handler.load();return y.isPromise(e)?e.then((e=>this.loadSync(e))):this.loadSync(e)}loadSync(e){this.artifacts=e;let t=this.artifacts.modelTopology,n=this.artifacts.signature;if(null!=this.artifacts.userDefinedMetadata){let e=this.artifacts.userDefinedMetadata;null!=e.signature&&(n=e.signature),null!=e.structuredOutputKeys&&(this.structuredOutputKeys=e.structuredOutputKeys)}this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;let a=this.io.decodeWeights(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new kc(Oh.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(a),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){let t=Oh.Instance.transformGraph(e.modelInitializer);this.initializer=new kc(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializerSignature=e.initializerSignature}return!0}async save(e,t){if("string"==typeof e){let t=this.io.getSaveHandlers(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}addStructuredOutputNames(e){if(this.structuredOutputKeys){let t={};return(e instanceof Ft?[e]:e).forEach(((e,n)=>t[this.structuredOutputKeys[n]]=e)),t}return e}predict(e,t){let n=this.execute(e,this.outputNodes);return this.addStructuredOutputNames(n)}async predictAsync(e,t){let n=await this.executeAsync(e,this.outputNodes);return this.addStructuredOutputNames(n)}normalizeInputs(e){var t;if(!(e instanceof Ft||Array.isArray(e))){let n=null===(t=this.signature)||void 0===t?void 0:t.inputs;if(null!=n)for(let t in n){let a=n[t];null!=a.resourceId&&(e[t]=this.resourceIdToCapturedInput[a.resourceId])}return e}e=Array.isArray(e)?e:[e];let n=Object.keys(this.resourceIdToCapturedInput).length;if(e.length+n!==this.inputNodes.length)throw new Error(`Input tensor count mismatch, the graph model has ${this.inputNodes.length-n} non-resource placeholders, while there are ${e.length} input tensors provided.`);let a=0;return this.inputNodes.reduce(((t,n)=>{var r,s,i;let o=null===(i=null===(s=null===(r=this.signature)||void 0===r?void 0:r.inputs)||void 0===s?void 0:s[n])||void 0===i?void 0:i.resourceId;return t[n]=null!=o?this.resourceIdToCapturedInput[o]:e[a++],t}),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}executeInitializerGraph(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.execute({},[]):this.initializer.execute({},Object.keys(this.initializerSignature.outputs))}async executeInitializerGraphAsync(){return null==this.initializer?[]:null==this.initializerSignature?this.initializer.executeAsync({},[]):this.initializer.executeAsync({},Object.keys(this.initializerSignature.outputs))}setResourceIdToCapturedInput(e){if(this.resourceIdToCapturedInput={},this.initializerSignature){let t=this.initializerSignature.outputs,n=Object.keys(t);for(let a=0;a<n.length;a++){let r=t[n[a]];this.resourceIdToCapturedInput[r.resourceId]=e[a]}}}execute(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(this.executeInitializerGraph()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){null==this.resourceIdToCapturedInput&&this.setResourceIdToCapturedInput(await this.executeInitializerGraphAsync()),e=this.normalizeInputs(e),t=this.normalizeOutputs(t);let n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&(this.initializer.dispose(),this.resourceIdToCapturedInput&&Nt(this.resourceIdToCapturedInput)),this.resourceManager.dispose()}};async function q7(e,t={},n=$r){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&"string"==typeof e&&(e=j7(e));let a=new Lh(e,t,n);return await a.load(),a}function K7(e){if(null==e)throw new Error("modelUrl in loadGraphModelSync() cannot be null. Please provide model artifacts or an IOHandler that loads the model");let t;if(e instanceof Array){let[n,a]=e;if(!n)throw new Error("modelJSON must be the first element of the array");if(!(a&&a instanceof ArrayBuffer))throw new Error("An ArrayBuffer of weights must be the second element of the array");if(!("modelTopology"in n))throw new Error("Model JSON is missing 'modelTopology'");if(!("weightsManifest"in n))throw new Error("Model JSON is missing 'weightsManifest'");let r=$r.getWeightSpecs(n.weightsManifest),s=$r.getModelArtifactsForJSONSync(n,r,a);t=$r.fromMemorySync(s)}else if("load"in e)t=e;else{if(!("modelTopology"in e&&"weightSpecs"in e&&"weightData"in e))throw new Error("Unknown model format");t=$r.fromMemorySync(e)}let n=new Lh(t);return n.load(),n}function j7(e){return e.endsWith("/")||(e+="/"),`${e}${H7}${U7}`}var fR="4.1.0",RR={};Wt(RR,{CSVDataset:()=>Jf,Dataset:()=>ei,FileDataSource:()=>nd,TextLineDataset:()=>Zf,URLDataSource:()=>od,array:()=>vR,csv:()=>ER,func:()=>_R,generator:()=>AR,microphone:()=>DR,version_data:()=>zN,webcam:()=>$R,zip:()=>SR});var IR=_l(dh()),bR=_l(dh());function dR(e,t){return Wb(e,t)}function Wb(e,t,n=new Map,a=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(a.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);let r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(Tu(e)){let r=Array.isArray(e)?[]:{};a.add(e);for(let s in e){let i=Wb(e[s],t,n,a);r[s]=i}return a.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,r.value),r.value}function hR(e,t=wN){return gR(e,t)}function gR(e,t,n=new Set){let a=e[0];if(n.has(a))throw new Error("Circular references are not supported.");let r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(Tu(a)){let r=Array.isArray(a)?[]:{};n.add(a);for(let s in a){let a=gR(e.map((e=>e[s])),t,n);r[s]=a}return n.delete(a),r}throw new Error(`Can't recurse into non-iterable type: ${a}`)}return r.value}function wN(e){return null===e?null:Tu(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function Ub(e,t){let n=new Map;Wb(e,t,n);for(let e of Array.from(n.keys())){let t=n.get(e);if(y.isPromise(t)){let a=await t;n.set(e,a)}}return Wb(e,t,n)}function Tu(e){let t=!1;if(M().get("IS_BROWSER"))t=e instanceof TextDecoder;else{let{StringDecoder:n}=bN();t=e instanceof n}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof Ft)&&!(e instanceof Promise)&&!t)}function xR(e){return null==e||X7(e)||Array.isArray(e)||"object"==typeof e&&e instanceof Ft||y.isTypedArray(e)}function X7(e){return null===e||"object"!=typeof e&&"function"!=typeof e}function yR(e){return dR(e,Y7)}function Y7(e){return e instanceof Ft?{value:e.clone(),recurse:!1}:Tu(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}var Yf=class{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(let t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);let e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");let t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}},Ec=class extends Yf{constructor(){super(Ec.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){let e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}};function RN(e){return new CN(e)}function Mh(e){return new IN(e)}function wR(e,t){return new qb(e,t)}function CR(e,t=gl.FAIL){return new $N(e,t)}Ec.INITIAL_CAPACITY=32;var gl,tr=class{async toArray(){let e=[],t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){let e=this.prefetch(100),t=[],n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new _N(this,e)}filter(e){return new kN(this,e)}map(e){return new EN(this,e)}mapAsync(e){return new Hb(this,e)}serialMapAsync(e){return new Hb(this,e).serial()}flatmap(e){return new AN(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new TN(this,e,t)}columnMajorBatch(e,t=!0,n=wN){return this.rowMajorBatch(e,t).map((e=>hR(e,n)))}concatenate(e,t){return new qb(RN([this,e]),t)}take(e){return e<0||null==e?this:new NN(this,e)}skip(e){return e<0||null==e?this:new SN(this,e)}prefetch(e){return new Kb(this,e)}shuffle(e,t){return new DN(this,e,t)}serial(){return new vN(this)}},CN=class extends tr{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};let e=this.items[this.trav];return this.trav++,{value:yR(e),done:!1}}},IN=class extends tr{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}},vN=class extends tr{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}},SN=class extends tr{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){let e=await this.upstream.next();if(e.done)return e;Nt(e.value)}return this.upstream.next()}},NN=class extends tr{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}},TN=class extends tr{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){let e=[];for(;e.length<this.batchSize;){let t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}},kN=class extends tr{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){let e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Nt(e.value)}}},EN=class extends tr{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=yo.getTensorsInContainer(e.value),n=this.transform(e.value),a=yo.getTensorsInContainer(n);for(let e of t)yo.isTensorInList(e,a)||e.dispose();return{value:n,done:!1}}},_N=class extends tr{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}},Hb=class extends tr{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){let e=await this.upstream.next();if(e.done)return{value:null,done:!0};let t=yo.getTensorsInContainer(e.value),n=await this.transform(e.value),a=yo.getTensorsInContainer(n);for(let e of t)yo.isTensorInList(e,a)||e.dispose();return{value:n,done:!1}}},_c=class extends tr{constructor(){super(),this.outputQueue=new Ec,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}},AN=class extends _c{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){let e=await this.upstream.next();if(e.done)return!1;let t=yo.getTensorsInContainer(e.value),n=this.transform(e.value),a=yo.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(let e of t)yo.isTensorInList(e,a)||e.dispose();return!0}},qb=class extends tr{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){let e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}let t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}};!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(gl||(gl={}));var $N=class extends tr{constructor(e,t=gl.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0,a=await Ub(this.iterators,(function(e){return e instanceof tr?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case gl.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case gl.SHORTEST:return{value:null,done:!0};case gl.LONGEST:}return this.count++,{value:a,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}},Kb=class extends tr{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Yf(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){let e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}},DN=class extends Kb{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=bR.alea(n||y.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){let e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}},ei=class{constructor(){this.size=null}batch(e,t=!0){let n,a=this;return y.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),n=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),_n((async()=>(await a.iterator()).columnMajorBatch(e,t,Z7)),n)}concatenate(e){let t,n=this;return t=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,_n((async()=>(await n.iterator()).concatenate(await e.iterator())),t)}filter(e){let t,n=this;return t=this.size===1/0?1/0:null,_n((async()=>(await n.iterator()).filter((t=>B((()=>e(t)))))),t)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){let t=this;return _n((async()=>(await t.iterator()).map((t=>B((()=>e(t)))))),this.size)}mapAsync(e){let t=this;return _n((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");let t=this;return _n((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){let t,n=this;return t=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,_n((async()=>wR(Mh((async()=>({value:await n.iterator(),done:!1}))).take(e))),t)}skip(e){let t,n=this;return t=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,_n((async()=>(await n.iterator()).skip(e)),t)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);let a=this,r=IR.alea(t||y.now().toString());return _n((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await a.iterator()).shuffle(e,t.toString())}),this.size)}take(e){let t,n=this;return t=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,_n((async()=>(await n.iterator()).take(e)),t)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}};function _n(e,t=null){return new class extends ei{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function vR(e){return _n((async()=>RN(e)),e.length)}function SR(e){if(!Tu(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(let n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return _n((async()=>CR(await Ub(e,(e=>{if(e instanceof ei)return{value:e.iterator(),recurse:!1};if(Tu(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),gl.SHORTEST)),t)}function Z7(e){return null===e?null:xR(e[0])?{value:J7(e),recurse:!1}:{value:null,recurse:!0}}function J7(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Ft?qe(e):nr(e)}ei.MAX_BUFFER_SIZE=1e4;var Zf=class extends ei{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}},jb='"',zh=Symbol("out"),NR=Symbol("field"),Xb=Symbol("quote"),FN=Symbol("quoteafterquote"),TR=Symbol("quoteinquote"),Jf=class extends ei{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new Zf(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(y.assert(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){let e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&y.assert(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);let t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(y.assert(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(let e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){let e=await(await this.base.iterator()).next();if(e.done)throw new Error("No data was found for CSV parsing.");let t=e.value;return this.parseRow(t,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){let t=this.parseRow(e),n={},a={};for(let r=0;r<this.fullColumnNames.length;r++){let s=this.fullColumnNames[r],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){let o=t[r],l=null;if(""===o)if(i&&void 0!==i.default)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);l=void 0}else{let e=Number(o);if(isNaN(e))l=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:l=e;break;case"int32":l=Math.floor(e);break;case"bool":l=this.getBoolean(o)}else l=e}i&&i.isLabel?a[s]=l:n[s]=l}}return 0===Object.keys(a).length?n:{xs:n,ys:a}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){let n=[],a=0,r=e.length,s=zh;for(let t=0;t<r;t++)switch(s){case zh:switch(e.charAt(t)){case jb:a=t+1,s=Xb;break;case this.delimiter:if(a=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=zh;break;default:s=NR,a=t}break;case NR:e.charAt(t)===this.delimiter&&(n.push(e.substring(a,t)),s=zh,a=t+1);break;case Xb:e.charAt(t)===jb&&(s=FN);break;case FN:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(a,t-1)),s=zh,a=t+1;break;case jb:s=Xb;break;default:s=TR}break;case TR:e.charAt(t)===jb&&(s=Xb)}if(s===FN?n.push(e.substring(a,r-1)):n.push(e.substring(a)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}},Qf=class extends tr{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;let t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(!M().get("IS_BROWSER"))throw new Error("microphone API is only supported in browser environment.");let t=new Qf(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");let e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;let t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t,n=await this.getAudioData();if(this.includeSpectrogram){let t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){let e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){let e=[],t=[],n=0;return new Promise((a=>{let r=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&a({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(r),a({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){let t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,a)=>n.set(e,a*t))),n}getTensorFromAudioDataArray(e,t){let n=new Float32Array(y.sizeFromShape(t));return n.set(e,n.length-e.length),nr(n,t)}},td=class extends tr{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Ke([0],"int32"),this.webcamConfig.centerCrop){let e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,a=(1-t)/2,r=n+e,s=t+a;this.cropBox=Us([a,n,s,r],[1,4])}else this.cropBox=Us([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(!M().get("IS_BROWSER"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}let n=new td(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&y.assert("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=ox.fromPixels(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return B((()=>{let t,n=sr(J(e,"float32"),0);t=so.cropAndResize(n,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");let a=t.shape;return R(t,a.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}},ed=class{},Bh=class extends tr{split(e){return new ON(this,e)}},ON=class extends Bh{constructor(e,t){super(),this.upstream=e,this.impl=new PN(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},PN=class extends _c{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){let e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);let t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(let e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}},Yb=class extends tr{decodeUTF8(){return new LN(this)}},LN=class extends Bh{constructor(e){super(),this.upstream=e,this.impl=new MN(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}},MN=class extends _c{constructor(e){if(super(),this.upstream=e,M().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{let{StringDecoder:e}=bN();this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){let e,t,n=await this.upstream.next();return!n.done&&(e=n.value,t=M().get("IS_BROWSER")?this.decoder.decode(e,{stream:!0}):this.decoder.write(Buffer.from(e.buffer)),this.outputQueue.push(t),!0)}},rd=class extends Yb{constructor(e,t={}){super(),this.file=e,this.options=t,y.assert(e instanceof Uint8Array||!!M().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){return this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size)?{value:null,done:!0}:{value:await new Promise(((e,t)=>{let n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{let a=new FileReader;a.onload=n=>{let r=a.result;if(r instanceof ArrayBuffer&&(r=new Uint8Array(r)),!(r instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(r)},a.onabort=e=>t(new Error("Aborted")),a.onerror=e=>t(new Error(e.type));let r=this.file.slice(this.offset,n);a.readAsArrayBuffer(r)}this.offset=n})),done:!1}}};async function kR(e,t={},n){let a,r;"string"==typeof e?a=e:(a=e.url,r=Q7(e));let s=await(n||y.fetch)(a,r);if(s.ok){let e=new Uint8Array(await s.arrayBuffer());return new rd(e,t)}throw new Error(s.statusText)}var Q7=e=>({method:e.method,headers:e.headers,body:e.body,mode:e.mode,credentials:e.credentials,cache:e.cache,redirect:e.redirect,referrer:e.referrer,integrity:e.integrity});function Zb(e){return"string"==typeof e&&"file://"===e.slice(0,7)}var nd=class extends ed{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(Zb(this.input)&&M().get("IS_NODE")){let e=Jb();this.input=e.readFileSync(this.input.slice(7))}return new rd(this.input,this.options)}},od=class extends ed{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return Zb(this.url)?new nd(this.url,this.fileOptions).iterator():kR(this.url,this.fileOptions)}};function ER(e,t={}){return new Jf(new od(e),t)}function _R(e){let t=Mh(e);return _n((async()=>t))}function AR(e){return _n((async()=>{let t=await e();return Mh((()=>t.next()))}))}async function $R(e,t){return td.create(e,t)}async function DR(e){return Qf.create(e)}var zN="4.1.0";function tt(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&y.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}var tJ=qr.whereImpl,ku=class extends Bo{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new aa(this,Mn())}nextDataId(){return ku.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,M().get("IS_NODE")&&S.warn("\n============================\nHi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. \n============================"));let a={id:this.nextDataId()};return this.data.set(a,{values:e,dtype:n,refCount:1}),a}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&y.isString(n[0])){let r=n.map((e=>y.encodeString(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return{dataId:a,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,a,r){this.data.set(e,{values:t,dtype:a,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){let{dtype:t,complexTensorInfos:n}=this.data.get(e);if("complex64"===t){let e=this.readSync(n.real.dataId),t=this.readSync(n.imag.dataId);return S.mergeRealAndImagArrays(e,t)}return this.data.get(e).values}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map((e=>y.decodeString(e)));return wt(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return wt(e.shape,e.dtype,t)}makeOutput(e,t,n){return Mn().makeTensorFromTensorInfo(this.makeTensorInfo(t,n,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;let{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){let t=y.now();return e(),{kernelMs:y.now()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){tt([e],"where");let t=this.readSync(e.dataId);return tJ(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}};ku.nextDataId=0;var fw={};function BN(e){let t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}Wt(fw,{addImpl:()=>GN,bincountImpl:()=>ad,bincountReduceImpl:()=>Qb,castImpl:()=>VN,ceilImpl:()=>WN,concatImpl:()=>Ac,equalImpl:()=>UN,expImpl:()=>qN,expm1Impl:()=>jN,floorImpl:()=>XN,gatherNdImpl:()=>tw,gatherV2Impl:()=>ew,greaterEqualImpl:()=>ZN,greaterImpl:()=>YN,lessEqualImpl:()=>QN,lessImpl:()=>JN,linSpaceImpl:()=>rw,logImpl:()=>tT,maxImpl:()=>nw,maximumImpl:()=>eT,minimumImpl:()=>rT,multiplyImpl:()=>Vh,negImpl:()=>nT,notEqualImpl:()=>oT,prodImpl:()=>sT,raggedGatherImpl:()=>ow,raggedRangeImpl:()=>sw,raggedTensorToTensorImpl:()=>iw,rangeImpl:()=>Dc,rsqrtImpl:()=>iT,scatterImpl:()=>xl,sigmoidImpl:()=>lF,simpleAbsImpl:()=>BN,sliceImpl:()=>Rc,sparseFillEmptyRowsImpl:()=>aw,sparseReshapeImpl:()=>lw,sparseSegmentReductionImpl:()=>cd,sqrtImpl:()=>pF,squaredDifferenceImpl:()=>lT,stridedSliceImpl:()=>uw,stringNGramsImpl:()=>Fc,stringSplitImpl:()=>Oc,stringToHashBucketFastImpl:()=>Pc,subImpl:()=>cT,tileImpl:()=>cw,topKImpl:()=>pw,transposeImpl:()=>ld,uniqueImpl:()=>mw});var eJ=e=>{let{x:t}=e.inputs,n=e.backend;tt(t,"abs");let a=new Float32Array(y.sizeFromShape(t.shape));return a=BN(n.data.get(t.dataId).values),n.makeOutput(a,t.shape,t.dtype)},FR={kernelName:ui,backendName:"cpu",kernelFunc:eJ};function Qt(e){return(t,n,a,r,s)=>{let i=S.assertAndGetBroadcastShape(t,n),o=i.length,l=y.computeStrides(i),u=y.sizeFromShape(i),p=y.getTypedArrayFromDType(s,u),h=t.length,d=n.length,c=y.computeStrides(t),f=y.computeStrides(n),m=S.getBroadcastDims(t,i),g=S.getBroadcastDims(n,i);if(m.length+g.length===0)for(let t=0;t<p.length;++t)p[t]=e(a[t%a.length],r[t%r.length]);else for(let t=0;t<p.length;++t){let n=y.indexToLoc(t,o,l),s=n.slice(-h);m.forEach((e=>s[e]=0));let i=y.locToIndex(s,h,c),u=n.slice(-d);g.forEach((e=>u[e]=0));let b=y.locToIndex(u,d,f);p[t]=e(a[i],r[b])}return[p,i]}}function Ir(e){let{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(a.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(a.shape,"float32",s),imag:n.makeTensorInfo(r.shape,"float32",i)},o}var OR={kernelName:mp,backendName:"cpu",kernelFunc:Ir};function sd(e,t,n="float32"){if("complex64"===n)return Ir({inputs:{real:sd(e,t,"float32"),imag:sd(e,t,"float32")},backend:e});let a=y.makeZerosTypedArray(y.sizeFromShape(t),n);return e.makeTensorInfo(t,n,a)}function Xr(e){let{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}var PR={kernelName:mo,backendName:"cpu",kernelFunc:Xr};function $o(e){let{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.real,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}var LR={kernelName:Fp,backendName:"cpu",kernelFunc:$o};function VN(e,t,n,a){if("int32"===a)return[t,"int32",Int32Array.from(e)];if("bool"===a){let a=y.toTypedArray([0],n),[r,s]=Qt(((e,t)=>e!==t?1:0))(t,[],e,a,"bool");return[s,"bool",r]}throw new Error(`Error in Cast: failed to cast ${n} to ${a}`)}function Do(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dtype:s}=a;if("complex64"===s){if("complex64"===r.dtype)return Xr({inputs:{x:r},backend:n});let e=sd(n,r.shape,r.dtype),t=Do({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),a=Ir({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),a}if("complex64"===r.dtype){let e=$o({inputs:{input:r},backend:n}),t=Do({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!y.hasEncodingLoss(r.dtype,s)){let e=Xr({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}let i=n.data.get(r.dataId).values,[o,l,u]=VN(i,r.shape,r.dtype,s);return n.makeTensorInfo(o,l,u)}var MR={kernelName:co,backendName:"cpu",kernelFunc:Do};function ie(e,t,n,a){return null==n?({inputs:n,backend:r})=>{let{a:s,b:i}=n,o=r;tt([s,i],e);let l=o.data.get(s.dataId).values,u=o.data.get(i.dataId).values,p="string"===s.dtype?S.fromUint8ToStringArray(l):l,h="string"===s.dtype?S.fromUint8ToStringArray(u):u,d=a||s.dtype,[c,f]=t(s.shape,i.shape,p,h,d);return o.makeTensorInfo(f,d,c)}:({inputs:e,backend:r})=>{let{a:s,b:i}=e,o=r;if("complex64"===s.dtype||"complex64"===i.dtype){let e=Do({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),a=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,l=o.data.get(a.dataId).values,u=o.data.get(r.dataId).values,p=Do({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(p.dataId),d=h.complexTensorInfos.real,c=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,m=o.data.get(c.dataId).values,[g,y,b]=n(s.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(b,"float32",g),v=o.makeTensorInfo(b,"float32",y),w=Ir({inputs:{real:x,imag:v},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(p),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(v),w}{let e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,r=a||s.dtype,[l,u]=t(s.shape,i.shape,e,n,r);return o.makeTensorInfo(u,r,l)}}}function id(e){return(t,n,a,r,s,i)=>{let o=S.assertAndGetBroadcastShape(t,n),l=y.sizeFromShape(o),u=o.length,p=y.computeStrides(o),h=y.getTypedArrayFromDType("float32",l),d=y.getTypedArrayFromDType("float32",l),c=S.getBroadcastDims(t,o),f=S.getBroadcastDims(n,o),m=S.mergeRealAndImagArrays(a,r),g=S.mergeRealAndImagArrays(s,i),b=t.length,x=y.computeStrides(t),v=n.length,w=y.computeStrides(n);if(c.length+f.length===0)for(let t=0;t<h.length;t++){let n=t%m.length,a=t%g.length,r=e(m[2*n],m[2*n+1],g[2*a],g[2*a+1]);h[t]=r.real,d[t]=r.imag}else for(let t=0;t<h.length;t++){let n=y.indexToLoc(t,u,p),a=n.slice(-b);c.forEach((e=>a[e]=0));let r=y.locToIndex(a,b,x),s=n.slice(-v);f.forEach((e=>s[e]=0));let i=y.locToIndex(s,v,w),o=e(m[2*r],m[2*r+1],g[2*i],g[2*i+1]);h[t]=o.real,d[t]=o.imag}return[h,d,o]}}var GN=Qt(((e,t)=>e+t)),rJ=id(((e,t,n,a)=>({real:e+n,imag:t+a}))),Zi=ie(Qn,GN,rJ),zR={kernelName:Qn,backendName:"cpu",kernelFunc:Zi};function ad(e,t,n,a,r){let s=y.sizeFromShape(a),i=y.makeZerosTypedArray(r,n);for(let n=0;n<e.length;n++){let a=e[n];if(a<0)throw new Error("Input x must be non-negative!");a>=r||(i[a]+=s>0?t[n]:1)}return i}function Qb(e,t,n,a=!1){let r=e.shape[0],s=e.shape[1],i=wt([r,n],t.dtype);for(let o=0;o<r;o++)for(let r=0;r<s;r++){let s=e.get(o,r);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(a?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,r),o,s):i.set(i.get(o,s)+1,o,s))}return i}function wn(e){return(t,n,a)=>{let r=y.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)r[n]=e(t[n],a);return r}}function _t(e,t,n){return({inputs:a,attrs:r,backend:s})=>{let{x:i}=a;if(tt(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=y.sizeFromShape(i.shape),p=n||i.dtype,h=y.getArrayFromDType(p,u);for(let e=0;e<u;++e)h[e]=t(l[e],r);return o.makeTensorInfo(i.shape,p,h)}}function Ro(e,t,n){return({inputs:a,attrs:r,backend:s})=>{let{x:i}=a;if(tt(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");let o=s,l=o.data.get(i.dataId).values,u=n||i.dtype,p=t(l,u,r);return o.makeTensorInfo(i.shape,u,p)}}var WN=wn((e=>Math.ceil(e))),nJ=Ro(Ko,WN),BR={kernelName:Ko,backendName:"cpu",kernelFunc:nJ};function Ac(e,t,n,a){let r=y.getArrayFromDType(n,y.sizeFromShape(t));if(a&&"string"!==n){let t=0;e.forEach((e=>{let n=y.sizeFromShape(e.shape);r.set(e.vals,t),t+=n}))}else{let a=0;e.forEach((e=>{let s="string"===n?S.fromUint8ToStringArray(e.vals):e.vals,i=0;for(let n=0;n<e.shape[0];++n){let o=n*t[1]+a;for(let t=0;t<e.shape[1];++t)r[o+t]=s[i++]}a+=e.shape[1]}))}return r}var UN=Qt(((e,t)=>e===t?1:0)),HN=ie(Ia,UN,null,"bool"),VR={kernelName:Ia,backendName:"cpu",kernelFunc:HN},qN=wn((e=>Math.exp(e))),KN=Ro(rs,qN,"float32"),GR={kernelName:rs,backendName:"cpu",kernelFunc:KN},jN=wn((e=>Math.expm1(e))),oJ=Ro(va,jN),WR={kernelName:va,backendName:"cpu",kernelFunc:oJ},XN=wn((e=>Math.floor(e))),sJ=Ro(ns,XN),UR={kernelName:ns,backendName:"cpu",kernelFunc:sJ};function tw(e,t,n,a,r,s,i,o,l){let u=wt([a,s],n);for(let n=0;n<a;n++){let a=[],p=0;for(let t=0;t<r;t++){let s=e[n*r+t];p+=s*i[t],a.push(s)}if(p<0||p>=l/s)throw new Error(`Invalid indices: ${a} does not index into ${o}`);for(let e=0;e<s;e++)u.values[n*s+e]=t.get(...t.indexToLoc(p*s+e))}return u}function ew(e,t,n){let a=wt(n,e.dtype);for(let n=0;n<a.size;++n){let r=a.indexToLoc(n).slice(),s=r[0],i=r[2],o=t.locToIndex([s,i]);r[2]=t.values[o];let l=e.locToIndex(r);0<=l&&l<e.values.length&&(a.values[n]=e.values[l])}return a}var YN=Qt(((e,t)=>e>t?1:0)),iJ=ie(Ta,YN,null,"bool"),HR={kernelName:Ta,backendName:"cpu",kernelFunc:iJ},ZN=Qt(((e,t)=>e>=t?1:0)),aJ=ie(is,ZN,null,"bool"),qR={kernelName:is,backendName:"cpu",kernelFunc:aJ},JN=Qt(((e,t)=>e<t?1:0)),lJ=ie(_a,JN,null,"bool"),KR={kernelName:_a,backendName:"cpu",kernelFunc:lJ},QN=Qt(((e,t)=>e<=t?1:0)),uJ=ie(Aa,QN,null,"bool"),jR={kernelName:Aa,backendName:"cpu",kernelFunc:uJ};function rw(e,t,n){let a=(t-e)/(n-1),r=y.makeZerosTypedArray(n,"float32");r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+a;return r}var tT=wn((e=>Math.log(e))),cJ=Ro(us,tT),XR={kernelName:us,backendName:"cpu",kernelFunc:cJ};function nw(e,t,n,a){let r=y.getTypedArrayFromDType(a,y.sizeFromShape(n));for(let n=0;n<r.length;++n){let a=n*t,s=e[a];for(let n=0;n<t;++n){let t=e[a+n];(Number.isNaN(t)||t>s)&&(s=t)}r[n]=s}return r}var eT=Qt(((e,t)=>Math.max(e,t))),pJ=ie(ps,eT),YR={kernelName:ps,backendName:"cpu",kernelFunc:pJ},rT=Qt(((e,t)=>Math.min(e,t))),mJ=ie(hs,rT),ZR={kernelName:hs,backendName:"cpu",kernelFunc:mJ},Vh=Qt(((e,t)=>e*t)),fJ=id(((e,t,n,a)=>({real:e*n-t*a,imag:e*a+t*n}))),$c=ie(xs,Vh,fJ),JR={kernelName:xs,backendName:"cpu",kernelFunc:$c};function nT(e,t,n){let a=y.createScalarValue(-1,n);return Vh([],t,a,e,n)}function dJ(e){let{inputs:t,backend:n}=e,{x:a}=t;tt(a,"neg");let r=n.data.get(a.dataId).values,[s,i]=nT(r,a.shape,a.dtype);return n.makeTensorInfo(i,a.dtype,s)}var QR={kernelName:di,backendName:"cpu",kernelFunc:dJ},oT=Qt(((e,t)=>e!==t?1:0)),hJ=ie(Pa,oT,null,"bool"),tF={kernelName:Pa,backendName:"cpu",kernelFunc:hJ};function ld(e,t,n,a,r){let s=t.length,i=y.sizeFromShape(t),o=y.computeStrides(t),l=y.computeStrides(r),u=y.getTypedArrayFromDType(n,y.sizeFromShape(r));for(let t=0;t<i;++t){let n=y.indexToLoc(t,s,o),r=new Array(n.length);for(let e=0;e<r.length;e++)r[e]=n[a[e]];u[y.locToIndex(r,s,l)]=e[t]}return u}function Ve(e){let{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{perm:s}=n;tt(r,"transpose");let i=r.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=r.shape[s[e]];let l=ld(a.data.get(r.dataId).values,r.shape,r.dtype,s,o);return{dataId:a.write(l,o,r.dtype),shape:o,dtype:r.dtype}}var eF={kernelName:eo,backendName:"cpu",kernelFunc:Ve};function sT(e,t,n,a){let[r,s]=S.computeOutAndReduceShapes(e,a),i=ar(t,"int32"),o=y.makeZerosTypedArray(y.sizeFromShape(r),i),l=y.sizeFromShape(s);for(let e=0;e<o.length;++e){let t=e*l,a=1;for(let e=0;e<l;++e)a*=n[t+e];o[e]=a}return{outVals:o,outShape:r,outDtype:i}}function gJ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;tt(r,"prod");let o=r.shape.length,l=y.parseAxisParam(s,r.shape),u=S.getAxesPermutation(l,o),p=l,h=r,d=[];null!=u&&(h=Ve({inputs:{x:r},backend:n,attrs:{perm:u}}),d.push(h),p=S.getInnerMostAxes(p.length,o));let c=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=sT(h.shape,h.dtype,c,p),b=m;return i&&(b=S.expandShapeToKeepDim(m,l)),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(b,g,f)}var rF={kernelName:Is,backendName:"cpu",kernelFunc:gJ};function xJ(e,t,n){e.forEach(((e,a)=>{if(e<0||e>=n){let r=y.indexToLoc(a,t.length,y.computeStrides(t)).join(",");throw new Error(`indices[${r}] = ${e} is not in [0, ${n})`)}}))}function yJ(e,t){for(let n=0;n<e.length;++n){let a=e[n],r=n===e.length-1?t:e[n+1].length;if(0===a.length)throw new Error("Ragged splits may not be empty");if(a[0]<0)throw new Error("Ragged splits must be non-negative");if(a[a.length-1]>r)throw new Error("Ragged splits must not point past values");for(let e=1;e<a.length;++e)if(a[e-1]>a[e])throw new Error("Ragged splits must be sorted in ascending order")}}function bJ(e,t,n,a){let r=[],s=0,i=t.length-1+n.length,o=new Array(i).fill(null).map((()=>[0]));yJ(n,a);let l=1;for(let e=0;e<t.length-1;++e){l*=t[e];let n=t[e+1];for(let t=1;t<l+1;++t)o[e].push(t*n)}for(let a=0;a<e.length;++a){let i=e[a],l=e[a]+1;for(let e=0;e<n.length;++e){let a=n[e],r=e+t.length-1;if(r>=0){let e=o[r],t=e[e.length-1]-a[i];for(let e=i;e<l;++e)o[r].push(a[e+1]+t)}i=a[i],l=a[l]}l!==i&&(r.push([i,l]),s+=l-i)}return{outSplits:o,valueSlices:r,numValues:s}}function wJ(e){let t=[];for(let n=0;n<e.length;++n){let a=e[n].length,r=y.getArrayFromDType("int32",a);t.push(r),e[n].forEach(((e,t)=>r[t]=e))}return t}function nF(e,t){let n=e.slice(0,t);for(;n.length<t;)n.push(1);for(let a=t;a<e.length;a++)n[t-1]*=e[a];return n}function CJ(e,t,n,a,r,s){let i=nF(t,2)[1],o=nF(s,2)[1],l=0;for(let t of n)for(let n=t[0];n<t[1];++n){for(let t=0;t<a;++t)r[l*o+t]=e[n*i+t];++l}}function IJ(e,t,n,a,r){let s=t.slice();s[0]=r;let i=y.getArrayFromDType(n,y.sizeFromShape(s)),o=e.length;return CJ(e,t,a,0===o?0:o/t[0],i,s),[i,s]}function ow(e,t,n,a,r,s,i,o){if(0===e.length)throw new Error("paramsNestedSplits must be non empty");if(0===t[0].length)throw new Error("Split tensors must not be scalars");if(xJ(s,i,t[0][0]-1),0===a.length)throw new Error("params.rank must be nonzero");let l=a[0],{outSplits:u,valueSlices:p,numValues:h}=bJ(s,i,e,l),d=wJ(u),c=IJ(n,a,r,p,h);return[d,c[0],c[1]]}var oF=2147483647;function sw(e,t,n,a,r,s,i){if(t.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(i.length>1)throw new Error("deltas must be a scalar or vector");let o=0===t.length,l=0===r.length,u=0===i.length,p=[];o||p.push(t[0]),l||p.push(r[0]),u||p.push(i[0]);for(let e=1;e<p.length;++e)if(p[e]!==p[e-1])throw new Error("starts, limits, and deltas must have the same shape");let h=0===p.length?1:p[0],d=y.getArrayFromDType("int32",h+1);d[0]=0;for(let t=0;t<h;++t){let n,r=o?e[0]:e[t],i=l?a[0]:a[t],p=u?s[0]:s[t];if(0===p)throw new Error("Requires delta != 0");if(p>0&&i<r||p<0&&i>r)n=0;else if(n=Math.ceil(Math.abs((i-r)/p)),n>oF)throw new Error(`Requires ((limit - start) / delta) <= ${oF}`);d[t+1]=d[t]+n}let c=d[h],f=y.getArrayFromDType(n,c),m=0;for(let t=0;t<h;++t){let n=d[t+1]-d[t],a=o?e[0]:e[t],r=u?s[0]:s[t];for(let e=0;e<n;++e)f[m++]=a,a+=r}return[d,f]}var Fo=S.RowPartitionType,ud=class{constructor(e,t,n,a,r,s,i,o,l,u){this.shape=e,this.shapeShape=t,this.values=n,this.valuesShape=a,this.valuesDType=r,this.defaultValue=s,this.defaultValueShape=i,this.rowPartitionValues=o,this.rowPartitionValuesShapes=l,this.rowPartitionTypes=S.getRowPartitionTypesHelper(u),this.raggedRank=S.getRaggedRank(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===Fo.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===Fo.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){let t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case Fo.VALUE_ROWIDS:return ud.getMaxWidthValueRowID(t);case Fo.ROW_SPLITS:return ud.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${Fo[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){let t=e.length;if(0===t||1===t)return 0;let n=0;for(let a=0;a<t-1;++a){let t=e[a+1]-e[a];t>n&&(n=t)}return n}static getMaxWidthValueRowID(e){let t=e.length;if(0===t)return 0;let n=0,a=e[0],r=0;for(let s=1;s<t;++s){let t=e[s];t!==a&&(a=t,r=Math.max(s-n,r),n=s)}return Math.max(t-n,r)}tensorShapeFromTensor(e,t,n=!0){if(0===t.length){if(-1===e[0])return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return iF(e,n)}calculateOutputSize(e){let t=this.valuesShape,n=this.defaultValueShape;S.validateDefaultValueShape(n,t);let a=this.tensorShapeFromTensor(this.shape,this.shapeShape),r=S.combineRaggedTensorToTensorShapes(this.raggedRank,a,t);r[0]<0&&(r[0]=e);for(let e=1;e<=this.raggedRank;++e)r[e]<0&&(r[e]=this.getMaxWidth(e));return r}calculateFirstParentOutputIndex(e,t,n){let a=Math.min(e,n),r=[],s=0;for(let e=0;e<a;++e,s+=t)r.push(s);for(let t=a;t<e;++t)r.push(-1);return y.assert(r.length===e,(()=>"Final length of result must be equal to firstDimension.")),r}calculateOutputIndexRowSplit(e,t,n,a){let r=e.length,s=[];for(let i=0;i<r-1;++i){let r=e[i+1]-e[i],o=Math.min(a,r),l=t[i];-1===l&&(o=0);for(let e=0;e<o;++e)s.push(l),l+=n;for(let e=0;e<r-o;++e)s.push(-1)}if(r>0&&s.length!==e[r-1])throw new Error("Invalid row split size.");return s}calculateOutputIndexValueRowID(e,t,n,a){let r=e.length,s=[];if(0===r)return[];let i=0,o=e[0];if(o>=t.length)throw new Error(`Got currentValueRowId=${o}, which is not less than ${t.length}`);let l=t[o];s.push(l);for(let u=1;u<r;++u){let r=e[u];if(r===o)l>=0&&(++i,i<a?l+=n:l=-1);else{if(i=0,o=r,r>=t.length)throw new Error(`Got nextValueRowId=${r} which is not less than ${t.length}`);l=t[r]}s.push(l)}if(s.length!==e.length)throw new Error("Invalid row ids.");return s}calculateOutputIndex(e,t,n,a){let r=this.getRowPartitionTensor(e),s=this.getRowPartitionTypeByDimension(e);switch(s){case Fo.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,n,a);case Fo.ROW_SPLITS:if(r.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(r,t,n,a);default:throw new Error(`Unsupported partition type: ${Fo[s]}`)}}getFirstDimensionSize(){let e=this.rowPartitionValues[0];if(0===this.rowPartitionTypes.length)throw new Error("No row_partition_types given.");let t=this.rowPartitionTypes[0];switch(t){case Fo.FIRST_DIM_SIZE:return e[0];case Fo.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case Fo.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${Fo[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");let e=this.getFirstDimensionSize(),t=this.calculateOutputSize(e),n=new Array(this.raggedRank+1);n[n.length-1]=1;for(let e=n.length-2;e>=0;--e)n[e]=n[e+1]*t[e+1];let a=iF(t,!1),r=y.getArrayFromDType(this.valuesDType,y.sizeFromShape(a));if(n[0]*t[0]>0){let s=this.calculateFirstParentOutputIndex(e,n[0],t[0]);for(let e=1;e<=this.raggedRank;++e)s=this.calculateOutputIndex(e-1,s,n[e],t[e]);this.setOutput(this.raggedRank,s,r,a)}return[a,r]}setOutput(e,t,n,a){if(0===n.length)return;let r=this.values,s=n,i=a.slice();i=i.slice(e+1);let o=y.sizeFromShape(i),l=t.length,u=this.defaultValue;if(u.length!==o&&1!==u.length){let e=this.defaultValueShape;B((()=>{let t=R(u,e);u=Pi(t,i).dataSync()}))}let p=0,h=0,d=0;for(let e=0;e<=l;++e){let a=e<l?t[e]:-1;if(a!==d){if(h<d){let e=r.subarray(p*o);sF(s.subarray(h*o),e,(d-h)*o)}if(e>=l){let e=n.length;a=Math.floor(e/o)}if(a>d)if(1===this.defaultValue.length)s.subarray(d*o,a*o).fill(this.defaultValue[0]),d=a;else for(;a>d;)sF(s.slice(d*o),u,o),++d;a<0?(p=e+1,h=d):(p=e,h=d,d=h+1)}else++d}}};function sF(e,t,n){for(let a=0;a<n;a++)e[a]=t[a]}function iF(e,t){let n=[];for(let a of e){if(a<0){if(!t)throw new Error(`Dimension ${a} must be >= 0`);if(a<-1)throw new Error(`Dimension ${a} must be >= -1`);a=-1}n.push(a)}return n}function iw(e,t,n,a,r,s,i,o,l,u){return new ud(e,t,n,a,r,s,i,o,l,u).compute()}function Dc(e,t,n,a){if(e===t||e<t&&n<0||t<e&&n>1)return y.makeZerosTypedArray(0,a);let r=Math.abs(Math.ceil((t-e)/n)),s=y.makeZerosTypedArray(r,a);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}var iT=wn((e=>1/Math.sqrt(e))),vJ=Ro(As,iT),aF={kernelName:As,backendName:"cpu",kernelFunc:vJ};function xl(e,t,n,a,r,s,i,o,l,u){let p=[a/r,r],h=e.values,d=t.values;if(0===a)return wt(n,t.dtype);let c=wt(p,t.dtype);"string"==typeof l||"number"==typeof l?c.values.fill(l):"boolean"==typeof l&&c.values.fill(+l);for(let e=0;e<s;e++){let s=[],l=0;for(let t=0;t<i;t++){let n=h[e*i+t];s.push(n),l+=n*o[t]}if(l<0||l>=a/r)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<r;n++)u?c.values[l*r+n]+=d[e*r+n]:c.values[l*r+n]=0===t.rank?d[0]:d[e*r+n]}return c}var lF=wn((e=>1/(1+Math.exp(-e)))),aT=_t(Ds,(e=>1/(1+Math.exp(-e)))),uF={kernelName:Ds,backendName:"cpu",kernelFunc:aT};function Rc(e,t,n,a,r){let s=Me.isSliceContinous(a,t,n),i=y.sizeFromShape(n),o=y.computeStrides(a);if(s){let n=Me.computeFlatOffset(t,o);return"string"===r?e.slice(n,n+i):e.subarray(n,n+i)}let l=wt(a,r,"string"===r?S.fromUint8ToStringArray(e):e),u=wt(n,r);for(let e=0;e<u.size;++e){let n=u.indexToLoc(e),a=n.map(((e,n)=>e+t[n]));u.set(l.get(...a),...n)}return"string"===r?S.fromStringArrayToUint8(u.values):u.values}function Oo(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:i}=a;tt(r,"slice");let[o,l]=Me.parseSliceParams(r,s,i);Me.assertParamsValid(r,o,l);let u=Rc(n.data.get(r.dataId).values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}var cF={kernelName:bi,backendName:"cpu",kernelFunc:Oo};function aw(e,t,n,a,r,s,i){let o=t[0],l=s[0],u=new Array(l),p=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(S.getSparseFillEmptyRowsIndicesDenseShapeMismatch(o));return[y.getArrayFromDType(n,0),[0,h],y.getArrayFromDType(r,0),u,p]}let d=!0,c=0,f=new Array(l).fill(0);for(let t=0;t<o;++t){let n=e[t*h];if(n<0)throw new Error(S.getSparseFillEmptyRowsNegativeIndexErrorMessage(t,n));if(n>=l)throw new Error(S.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(t,n,l));++f[n],d=d&&n>=c,c=n}let m=!0;for(let e=0;e<l;++e){let t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&d){let t=e,n=a;for(let e=0;e<o;++e)p[e]=e;return[t,[o,h],n,u,p]}{let t=f[l-1],s=y.getArrayFromDType(n,t*h),d=y.getArrayFromDType(r,t),c=new Array(l).fill(0);for(let t=0;t<o;++t){let n=e[t*h],r=c[n],i=(0===n?0:f[n-1])+r;c[n]++;for(let n=0;n<h;++n)s[i*h+n]=e[t*h+n];d[i]=a[t],p[t]=i}for(let e=0;e<l;++e)if(0===c[e]){let t=0===e?0:f[e-1];s[t*h+0]=e;for(let e=1;e<h;++e)s[t*h+e]=0;d[t]=i}return[s,[t,h],d,u,p]}}function lw(e,t,n,a,r){let s=y.sizeFromShape(a),i=t[0],o=r.length,l=[],u=1,p=-1;for(let e=0;e<o;++e){let t=r[e];if(-1===t){if(-1!==p)throw new Error(S.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(p,e));p=e,l.push(1)}else{if(t<0)throw new Error(S.getSparseReshapeNegativeOutputDimErrorMessage(e,t));u*=t,l.push(t)}}if(-1!==p){if(u<=0)throw new Error(S.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage());let e=Math.trunc(s/u);if(u*e!==s)throw new Error(S.getSparseReshapeInputOutputMultipleErrorMessage(a,l));l[p]=e}if(y.sizeFromShape(l)!==s)throw new Error(S.getSparseReshapeInputOutputMismatchErrorMessage(a,l));let h=a.length,d=[];if(h>0){d[h-1]=1;for(let e=h-2;e>=0;--e)d[e]=d[e+1]*a[e+1]}let c=[];if(o>0){c[o-1]=1;for(let e=o-2;e>=0;--e)c[e]=c[e+1]*l[e+1]}let f=y.getArrayFromDType(n,i*o);for(let t=0;t<i;++t){let n=0;for(let a=0;a<h;++a)n+=e[t*h+a]*d[a];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/c[e]),n%=c[e]}return[f,[i,o],l]}function cd(e,t,n,a,r,s=!1,i=0){let o=a.length,l=[t[0],e.length/t[0]],u=l[1],p=o>0?r[o-1]+1:0;if(p<0)throw new Error(S.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let h=t.slice();h[0]=p;let d=h.reduce(((e,t)=>e*t),1),c=y.getArrayFromDType(n,d);if(0===o)return p>0&&c.fill(i),[c,h];if(p<=0)throw new Error(S.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let f=0,m=1,g=0,b=r[f];for(;;){let t=0;if(m<o){if(t=r[m],b===t){++m;continue}if(b>=t)throw new Error(S.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage())}if(b<0||b>=p)throw new Error(S.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(b,p));b>g&&c.fill(i,g*u,b*u);for(let t=f;t<m;++t){let n=a[t];if(n<0||n>=l[0])throw new Error(S.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(t,a[t],l[0]));for(let t=0;t<u;t++)c[b*u+t]+=e[n*u+t]}if(s)for(let e=0;e<u;e++)c[b*u+e]/=m-f;if(f=m,++m,g=b+1,b=t,m>o)break}return g<p&&c.fill(i,g*u,p*u),[c,h]}var pF=wn((e=>Math.sqrt(e))),SJ=_t(Rs,(e=>Math.sqrt(e))),mF={kernelName:Rs,backendName:"cpu",kernelFunc:SJ},lT=Qt(((e,t)=>{let n=e-t;return n*n})),NJ=ie(Ps,lT),fF={kernelName:Ps,backendName:"cpu",kernelFunc:NJ};function uw(e,t,n,a){let r=wt(e,t.dtype);for(let e=0;e<r.size;e++){let s=r.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+a[e];r.set(t.get(...i),...s)}return r}var uT=class{constructor(e,t,n,a,r,s){this.separator=y.encodeString(e),this.nGramWidths=t,this.leftPad=y.encodeString(n),this.rightPad=y.encodeString(a),this.padWidth=r,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){let n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,a,r,s){for(let i=0;i<r;++i){let o=this.getPadWidth(s),l=Math.max(0,o-i),u=Math.max(0,o-(r-(i+1))),p=s-(l+u),h=t+(l>0?0:i-o),d=0;d+=l*this.leftPad.length;for(let t=0;t<p;++t)d+=e[h+t].length;d+=u*this.rightPad.length,d+=(l+u+p-1)*this.separator.length,n[a+i]=new Uint8Array(d);let c=n[a+i],f=0,m=e=>e.forEach((e=>c[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<p-1;++t)m(e[h+t]),m(this.separator);if(p>0){m(e[h+p-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){let n=e.length,a=t.length;if(a>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<a;++r){let a=t[r]>=e;if(a=a&&t[r]<=n,!a)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}let r=a-1,s=y.getArrayFromDType("int32",a);if(0===n||0===a){let e=new Array(n);for(let e=0;e<=r;++e)s[e]=0;return[e,s]}s[0]=0;for(let e=1;e<=r;++e){let n=t[e]-t[e-1],a=0;this.nGramWidths.forEach((e=>{a+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===a&&(a=1),s[e]=s[e-1]+a}let i=new Array(s[r]);for(let n=0;n<r;++n){let a=t[n],r=s[n];if(this.nGramWidths.forEach((s=>{let o=t[n+1]-t[n],l=this.getNumNGrams(o,s);this.createNGrams(e,a,i,r,l,s),r+=l})),this.preserveShort&&r===s[n]){let s=t[n+1]-t[n];if(0===s)continue;let o=s+2*this.padWidth,l=1;this.createNGrams(e,a,i,r,l,o)}}return[i,s]}};function Fc(e,t,n,a,r,s,i,o){return new uT(n,a,r,s,i,o).compute(e,t)}function TJ(e,t,n,a){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)a.push(e.subarray(t,t+1));return}if(1===t.length){let r=t[0],s=e.indexOf(r);for(;-1!==s;){let t=e.subarray(0,s);(!n||0!==t.length)&&a.push(t),s=(e=e.subarray(s+1)).indexOf(r)}return void((!n||0!==e.length)&&a.push(e))}let r=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){let t=e.subarray(r,s);(!n||0!==t.length)&&a.push(t),r=s+1}}function Oc(e,t,n){let a=e.length,r=[],s=0,i=0,o=new Array(a);for(let l=0;l<a;++l){let a=r.length;TJ(e[l],t,n,r);let u=r.length-a;o[l]=u,s+=u,i=Math.max(i,u)}let l=y.getArrayFromDType("int32",2*s),u=new Array(s),p=[a,i],h=0;for(let e=0;e<a;++e)for(let t=0;t<o[e];++t)l[2*h]=e,l[2*h+1]=t,u[h]=r[h],++h;return[l,u,p]}function Pc(e,t){let n=y.getArrayFromDType("int32",e.length);for(let a=0;a<e.length;++a)n[a]=y.fingerPrint64(e[a]).modulo(t).getLowBitsUnsigned();return n}var cT=Qt(((e,t)=>e-t)),kJ=id(((e,t,n,a)=>({real:e-n,imag:t-a}))),Gh=ie(Ls,cT,kJ),dF={kernelName:Ls,backendName:"cpu",kernelFunc:Gh};function cw(e,t){let n=new Array(e.rank);for(let a=0;a<n.length;a++)n[a]=e.shape[a]*t[a];let a=wt(n,e.dtype);for(let t=0;t<a.values.length;++t){let n=a.indexToLoc(t),r=new Array(e.rank);for(let t=0;t<r.length;t++)r[t]=n[t]%e.shape[t];let s=e.locToIndex(r);a.values[t]=e.values[s]}return a}var Wh=(e,t)=>{let n=t.value-e.value;return 0===n?e.index-t.index:n};function hF(e,t,n=0,a=e.length-1){for(;a>n;){if(a-n>600){let r=a-n+1,s=t-n+1,i=Math.log(r),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(r-o)/r)*Math.sign(s-r/2);hF(e,t,Math.max(n,Math.floor(t-s*o/r+l)),Math.min(a,Math.floor(t+(r-s)*o/r+l)))}let r=e[t],s=n,i=a;for(y.swap(e,n,t),Wh(e[a],r)>0&&y.swap(e,n,a);s<i;){for(y.swap(e,s,i),s++,i--;Wh(e[s],r)<0;)s+=1;for(;Wh(e[i],r)>0;)i-=1}0===Wh(e[n],r)?y.swap(e,n,i):(i+=1,y.swap(e,i,a)),i<=t&&(n=i+1),t<=i&&(a=i-1)}}function pw(e,t,n,a,r){let s=t[t.length-1],[i,o]=[e.length/s,s],l=y.getTypedArrayFromDType(n,i*a),u=y.getTypedArrayFromDType("int32",i*a);for(let t=0;t<i;t++){let n=t*o,s=e.subarray(n,n+o),i=new Array(s.length);s.forEach(((e,t)=>i[t]={value:e,index:t})),a<i.length&&(hF(i,a),i=i.slice(0,a)),r&&i.sort(Wh);let p=t*a,h=l.subarray(p,p+a),d=u.subarray(p,p+a);for(let e=0;e<a;e++)h[e]=i[e].value,d[e]=i[e].index}let p=t.slice();return p[p.length-1]=a,[wt(p,n,l),wt(p,"int32",u)]}function mw(e,t,n,a){let r=y.parseAxisParam(t,n)[0],s=[1,n[0],1];for(let e=0;e<r;e++)s[0]*=n[e];s[1]=n[r];for(let e=r+1;e<n.length;e++)s[2]*=n[e];let i={},o=new Int32Array(n[r]),l=new pe(s,a,e),u=[],p=1===s[0]&&1===s[2];for(let t=0;t<n[r];t++){let n;if(p)n=e[t].toString();else{let e=[];for(let n=0;n<s[0];n++)for(let a=0;a<s[2];a++)e.push(l.get(n,t,a));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{let e=Object.keys(i).length;i[n]=e,o[t]=e,u.push(t)}}let h=s.slice();h[1]=Object.keys(i).length;let d=new pe(h,a);u.forEach(((e,t)=>{for(let n=0;n<s[0];n++)for(let a=0;a<s[2];a++)d.set(l.get(n,e,a),n,t,a)}));let c=n.slice();return c[r]=h[1],{outputValues:d.values,outputShape:c,indices:o}}Yp("cpu",(()=>new ku),1);var pT=_t(es,(e=>e>=0?e:Math.exp(e)-1)),gF={kernelName:es,backendName:"cpu",kernelFunc:pT};function mT(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a;tt([r],"leakyRelu");let i=y.sizeFromShape(r.shape),o=n.data.get(r.dataId).values,l=y.getTypedArrayFromDType("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(r.shape,"float32",l)}var xF={kernelName:ls,backendName:"cpu",kernelFunc:mT},_J=Qt(((e,t)=>e<0?t*e:e));function fT(e){let{inputs:t,backend:n}=e,{x:a,alpha:r}=t;tt([a,r],"prelu");let s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,[o,l]=_J(a.shape,r.shape,s,i,"float32");return n.makeTensorInfo(l,"float32",o)}var yF={kernelName:Cs,backendName:"cpu",kernelFunc:fT},dT=_t(Ss,(e=>Math.max(0,e))),bF={kernelName:Ss,backendName:"cpu",kernelFunc:dT},hT=_t(ks,(e=>Math.min(Math.max(0,e),6))),wF={kernelName:ks,backendName:"cpu",kernelFunc:hT};function Lc(e,t,n,a,r){if("linear"===n)return Xr({inputs:{x:t},backend:e});if("relu"===n)return dT({inputs:{x:t},backend:e});if("elu"===n)return pT({inputs:{x:t},backend:e});if("relu6"===n)return hT({inputs:{x:t},backend:e});if("prelu"===n)return fT({inputs:{x:t,alpha:a},backend:e});if("leakyrelu"===n)return mT({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return aT({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function Yt(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,i=y.sizeFromShape(r.shape),o=y.inferFromImplicitShape(s,i),l=y.sizeFromShape(o);y.assert(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(r.dataId);let u=n.data.get(r.dataId);if(null!=u.complexTensorInfos){let e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}var CF={kernelName:xi,backendName:"cpu",kernelFunc:Yt};function gT(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=a;tt([r,s],"matMul");let l=r.shape.length,u=s.shape.length,p=i?r.shape[l-2]:r.shape[l-1],h=o?s.shape[u-1]:s.shape[u-2],d=i?r.shape[l-1]:r.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=r.shape.slice(0,-2),m=s.shape.slice(0,-2),g=y.sizeFromShape(f),b=y.sizeFromShape(m),x=Wr.assertAndGetBroadcastShape(r.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,c]);y.assert(p===h,(()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${r.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));let v=o?[b,c,h]:[b,h,c],w=Yt({inputs:{x:r},backend:n,attrs:{shape:i?[g,p,d]:[g,d,p]}}),k=Yt({inputs:{x:s},backend:n,attrs:{shape:v}}),I=i?w.shape[1]:w.shape[2],S=i?w.shape[2]:w.shape[1],N=o?k.shape[1]:k.shape[2],T=Math.max(g,b),C=n.data.get(w.dataId).values,E=n.data.get(k.dataId).values,_=y.computeStrides(w.shape),$=y.computeStrides(k.shape),[A,R,F]=i?[_[0],1,_[1]]:[_[0],_[1],1],[D,M,O]=o?[1,$[1],$[0]]:[$[1],1,$[0]],z=S*N,L=wt([T,S,N],w.dtype),P=L.values,B=n.blockSize;for(let e=0;e<T;e++)for(let t=0;t<S;t+=B)for(let n=0;n<N;n+=B)for(let a=0;a<I;a+=B){let r=Math.min(t+B,S),s=Math.min(n+B,N),i=Math.min(a+B,I);for(let o=t;o<r;o++)for(let t=n;t<s;t++){let n=0;for(let r=a;r<i;r++){let a=Math.min(e,g-1)*A,s=Math.min(e,b-1)*O;n+=C[a+o*R+r*F]*E[r*D+t*M+s]}P[e*z+(o*N+t)]+=n}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(k),n.makeTensorInfo(x,L.dtype,L.values)}var IF={kernelName:qo,backendName:"cpu",kernelFunc:gT};function AJ(e){let t,n,a,{inputs:r,backend:s,attrs:i}=e,{a:o,b:l,bias:u,preluActivationWeights:p}=r,{transposeA:h,transposeB:d,activation:c,leakyreluAlpha:f}=i,m=[];t=gT({inputs:{a:o,b:l},attrs:{transposeA:h,transposeB:d},backend:s}),u&&(n=Zi({inputs:{a:t,b:u},backend:s}),m.push(t),t=n),c&&(a=Lc(s,t,c,p,f),m.push(t),t=a);for(let e of m)s.disposeIntermediateTensorInfo(e);return t}var vF={kernelName:Si,backendName:"cpu",kernelFunc:AJ},$J=_t(ua,(e=>Math.acos(e))),SF={kernelName:ua,backendName:"cpu",kernelFunc:$J},DJ=_t(ca,(e=>Math.acosh(e))),NF={kernelName:ca,backendName:"cpu",kernelFunc:DJ};function RJ(e){let{inputs:t,backend:n}=e,a=t;tt(t,"addN");let r=a.map((e=>n.data.get(e.dataId).values)),s=wt(a[0].shape,a[0].dtype),i=s.values;for(let e=0;e<a.length;e++){let t=r[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}var TF={kernelName:Wo,backendName:"cpu",kernelFunc:RJ};function FJ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;tt(r,"all");let o=y.parseAxisParam(s,r.shape),l=o,u=S.getAxesPermutation(l,r.shape.length),p=r;null!=u&&(p=Ve({inputs:{x:r},backend:n,attrs:{perm:u}}),l=S.getInnerMostAxes(l.length,r.shape.length)),S.assertAxesAreInnerMostDims("all",l,p.shape.length);let[h,d]=S.computeOutAndReduceShapes(p.shape,l),c=y.sizeFromShape(d),f=y.makeZerosTypedArray(y.sizeFromShape(h),p.dtype),m=n.data.get(p.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let a=m[t+e];n=n&&a}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(p);let g=n.makeTensorInfo(h,p.dtype,f);if(i){let e=Yt({inputs:{x:g},backend:n,attrs:{shape:S.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}var kF={kernelName:pa,backendName:"cpu",kernelFunc:FJ};function OJ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;tt(r,"any");let o=y.parseAxisParam(s,r.shape),l=o,u=S.getAxesPermutation(l,r.shape.length),p=r;null!=u&&(p=Ve({inputs:{x:r},backend:n,attrs:{perm:u}}),l=S.getInnerMostAxes(l.length,r.shape.length)),S.assertAxesAreInnerMostDims("any",l,p.shape.length);let[h,d]=S.computeOutAndReduceShapes(p.shape,l),c=y.sizeFromShape(d),f=y.makeZerosTypedArray(y.sizeFromShape(h),p.dtype),m=n.data.get(p.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let a=m[t+e];n=n||a}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(p);let g=n.makeTensorInfo(h,p.dtype,f);if(i){let e=Yt({inputs:{x:g},backend:n,attrs:{shape:S.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}var EF={kernelName:ma,backendName:"cpu",kernelFunc:OJ};function PJ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;tt(r,"argMax");let i=y.parseAxisParam(s,r.shape),o=S.getAxesPermutation(i,r.shape.length),l=r,u=[];null!=o&&(l=Ve({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=S.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],S.assertAxesAreInnerMostDims("argMax",i,l.shape.length);let[p,h]=S.computeOutAndReduceShapes(l.shape,i),d=y.sizeFromShape(p),c=y.makeZerosTypedArray(d,"int32"),f=y.sizeFromShape(h),m=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*f,n=m[t],a=0;for(let e=0;e<f;++e){let r=m[t+e];r>n&&(n=r,a=e)}c[e]=a}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(p,"int32",c)}var _F={kernelName:Uo,backendName:"cpu",kernelFunc:PJ};function LJ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a;tt(r,"argMin");let i=y.parseAxisParam(s,r.shape),o=S.getAxesPermutation(i,r.shape.length),l=r,u=[];null!=o&&(l=Ve({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=S.getInnerMostAxes(i.length,l.shape.length)),i=[i[0]],S.assertAxesAreInnerMostDims("argMin",i,l.shape.length);let[p,h]=S.computeOutAndReduceShapes(l.shape,i),d=y.sizeFromShape(p),c=y.makeZerosTypedArray(d,"int32"),f=y.sizeFromShape(h),m=n.data.get(l.dataId).values;for(let e=0;e<c.length;++e){let t=e*f,n=m[t],a=0;for(let e=0;e<f;++e){let r=m[t+e];r<n&&(n=r,a=e)}c[e]=a}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(p,"int32",c)}var AF={kernelName:Al,backendName:"cpu",kernelFunc:LJ},MJ=_t(fa,(e=>Math.asin(e))),$F={kernelName:fa,backendName:"cpu",kernelFunc:MJ},zJ=_t(da,(e=>Math.asinh(e))),DF={kernelName:da,backendName:"cpu",kernelFunc:zJ},BJ=_t(ha,(e=>Math.atan(e))),RF={kernelName:ha,backendName:"cpu",kernelFunc:BJ},VJ=Qt(((e,t)=>Math.atan2(e,t))),GJ=ie(xa,VJ),FF={kernelName:xa,backendName:"cpu",kernelFunc:GJ},WJ=_t(ga,(e=>Math.atanh(e))),OF={kernelName:ga,backendName:"cpu",kernelFunc:WJ};function pd(e,t,n,a,r,s){let i=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,p=r.effectiveFilterHeight,h=r.effectiveFilterWidth,d=r.padInfo.top,c=r.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=wt(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let t=0;t<r.batchSize;++t){let n=t*y,m=t*a[0];for(let t=0;t<r.inChannels;++t)for(let y=0;y<r.outHeight;++y){let v=y*i-d,w=Math.max(0,v),k=Math.min(r.inHeight,p+v),I=n+y*b;for(let n=0;n<r.outWidth;++n){let i=n*o-c,p=Math.max(0,i),d=Math.min(r.inWidth,h+i),y=f,b=0,v=0;for(let n=w;n<k;n+=l){let r=m+n*a[1];for(let n=p;n<d;n+=u){let i=e[r+n*a[2]+t];"max"===s&&i>y?y=i:"avg"===s&&(b+=i,v++)}if(isNaN(y))break}g[I+n*x+t]="avg"===s?b/v:y}}}return m}function dw(e,t,n,a,r=!1,s=!1){let i=wt(a.outShape,"int32"),o=a.strideHeight,l=a.strideWidth,u=a.dilationHeight,p=a.dilationWidth,h=a.effectiveFilterHeight,d=a.effectiveFilterWidth,c=a.padInfo.top,f=a.padInfo.left,m=wt(t,n,e);for(let e=0;e<a.batchSize;++e)for(let t=0;t<a.inChannels;++t)for(let n=0;n<a.outHeight;++n){let g=n*o-c,y=g;for(;y<0;)y+=u;let b=Math.min(a.inHeight,h+g);for(let o=0;o<a.outWidth;++o){let h=o*l-f,c=h;for(;c<0;)c+=p;let x=Math.min(a.inWidth,d+h),v=Number.NEGATIVE_INFINITY,w=-1;for(let n=y;n<b;n+=u){let i=n-g;for(let o=c;o<x;o+=p){let l=o-h,u=m.get(e,n,o,t);u>v&&(v=u,w=r?s?((e*a.inHeight+n)*a.inWidth+o)*a.inChannels+t:(n*a.inWidth+o)*a.inChannels+t:i*d+l)}}i.set(w,e,n,o,t)}}return i}function hw(e,t,n,a,r,s){let i=r.strideDepth,o=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,p=r.dilationHeight,h=r.dilationWidth,d=r.effectiveFilterDepth,c=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=wt(r.outShape,n),v=x.values,w=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],S=r.outShape[4];for(let t=0;t<r.batchSize;++t){let n=t*w,x=t*a[0];for(let t=0;t<r.inChannels;++t)for(let w=0;w<r.outDepth;++w){let N=w*i-m,T=N;for(;T<0;)T+=u;let C=Math.min(r.inDepth,d+N),E=n+w*k;for(let n=0;n<r.outHeight;++n){let i=n*o-g,d=i;for(;d<0;)d+=p;let m=Math.min(r.inHeight,c+i),w=E+n*I;for(let n=0;n<r.outWidth;++n){let i=n*l-y,o=i;for(;o<0;)o+=h;let c=Math.min(r.inWidth,f+i),g=w+n*S,k=b,I=0,N=0;for(let n=T;n<C;n+=u){let r=x+n*a[1];for(let n=d;n<m;n+=p){let i=r+n*a[2];for(let n=o;n<c;n+=h){let r=e[i+n*a[3]+t];if("max"===s&&r>k?k=r:"avg"===s&&(I+=r,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}v[g+t]="avg"===s?I/N:k}}}}return x}function PF(e,t){let n=wt(t.outShape,"int32"),a=t.strideDepth,r=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,p=t.effectiveFilterHeight,h=t.effectiveFilterWidth,d=t.padInfo.front,c=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){let b=y*a-d,x=b;for(;x<0;)x+=i;let v=Math.min(t.inDepth,u+b);for(let a=0;a<t.outHeight;++a){let u=a*r-c,d=u;for(;d<0;)d+=o;let w=Math.min(t.inHeight,p+u);for(let r=0;r<t.outWidth;++r){let c=r*s-f,k=c;for(;k<0;)k+=l;let I=Math.min(t.inWidth,h+c),S=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<v;t+=i){let n=t-b;for(let a=d;a<w;a+=o){let r=a-u;for(let s=k;s<I;s+=l){let i=s-c,o=e.get(m,t,a,s,g);o>=S&&(S=o,N=n*p*h+r*p+i)}}}n.set(N,m,y,a,r,g)}}}return n}function UJ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;tt(r,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a;y.assert(S.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u,p=S.computePool2DInfo(r.shape,s,i,1,o,l);if(1===p.filterWidth&&1===p.filterHeight&&y.arraysEqual(p.inShape,p.outShape))u=Xr({inputs:{x:r},backend:n});else{let e=n.data.get(r.dataId).values,t=y.computeStrides(r.shape),a=pd(e,r.shape,r.dtype,t,p,"avg");u=n.makeTensorInfo(p.outShape,r.dtype,a.values)}return u}var LF={kernelName:Ho,backendName:"cpu",kernelFunc:UJ};function HJ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=a;tt(r,"avgPool3d");let p=S.computePool3DInfo(r.shape,s,i,1,o,l,u),h=hw(n.data.get(r.dataId).values,r.shape,r.dtype,y.computeStrides(r.shape),p,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}var MF={kernelName:$l,backendName:"cpu",kernelFunc:HJ};function qJ(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a;tt([r,s],"avgPool3DGrad");let p=S.computePool3DInfo(s.shape,i,o,1,l,u),h=p.strideDepth,d=p.strideHeight,c=p.strideWidth,f=p.filterDepth,m=p.filterHeight,g=p.filterWidth,y=p.dilationDepth,b=p.dilationHeight,x=p.dilationWidth,v=p.effectiveFilterDepth,w=p.effectiveFilterHeight,k=p.effectiveFilterWidth,I=v-1-p.padInfo.front,N=k-1-p.padInfo.left,T=w-1-p.padInfo.top,C=wt(s.shape,"float32"),E=1/(f*m*g),_=n.bufferSync(r);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inDepth;++n)for(let a=0;a<p.inHeight;++a)for(let r=0;r<p.inWidth;++r){let s=n-I,i=a-T,o=r-N,l=0;for(let n=0;n<v;n+=y){let a=(s+n)/h;if(!(a<0||a>=p.outDepth||Math.floor(a)!==a))for(let n=0;n<w;n+=b){let r=(i+n)/d;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let n=0;n<k;n+=x){let s=(o+n)/c;s<0||s>=p.outWidth||Math.floor(s)!==s||(l+=_.get(e,a,r,s,t))}}}C.set(l*E,e,n,a,r,t)}return n.makeTensorInfo(C.shape,C.dtype,C.values)}var zF={kernelName:up,backendName:"cpu",kernelFunc:qJ};function KJ(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s;tt([r,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=a,p=S.computePool2DInfo(i.shape,o,l,1,u),h=p.strideHeight,d=p.strideWidth,c=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.effectiveFilterHeight,b=p.effectiveFilterWidth,x=b-1-p.padInfo.left,v=y-1-p.padInfo.top,w=wt(i.shape,"float32"),k=1/(c*f),I=n.data.get(r.dataId).values,N=wt(r.shape,"float32",I);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inHeight;++n)for(let a=0;a<p.inWidth;++a){let r=n-v,s=a-x,i=0;for(let n=0;n<y;n+=m){let a=(r+n)/h;if(!(a<0||a>=p.outHeight||Math.floor(a)!==a))for(let n=0;n<b;n+=g){let r=(s+n)/d;r<0||r>=p.outWidth||Math.floor(r)!==r||(i+=N.get(e,a,r,t))}}w.set(i*k,e,n,a,t)}return n.makeTensorInfo(w.shape,w.dtype,w.values)}var BF={kernelName:lp,backendName:"cpu",kernelFunc:KJ};function jJ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,scale:s,offset:i,mean:o,variance:l}=t;y.assert(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),y.assert(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),y.assert(null==s||o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),tt([r,o,l,s,i],"batchNorm");let{varianceEpsilon:u}=a;null==u&&(u=.001);let p=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,d=n.data.get(l.dataId).values,c=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(p.length),g=f.length,b=c.length,x=d.length,v=h.length,w=0,k=0,I=0,S=0;for(let e=0;e<p.length;++e)m[e]=f[w++]+(p[e]-h[k++])*c[I++]/Math.sqrt(d[S++]+u),w>=g&&(w=0),k>=v&&(k=0),I>=b&&(I=0),S>=x&&(S=0);return n.makeTensorInfo(r.shape,r.dtype,m)}var VF={kernelName:ss,backendName:"cpu",kernelFunc:jJ};function XJ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:i}=a;tt([r],"batchToSpaceND");let o=s.reduce(((e,t)=>e*t)),l=S.getReshaped(r.shape,s,o),u=S.getPermuted(l.length,s.length),p=S.getReshapedPermuted(r.shape,s,o),h=S.getSliceBeginCoords(i,s.length),d=S.getSliceSize(p,i,s.length),c=Yt({inputs:{x:r},backend:n,attrs:{shape:l}}),f=Ve({inputs:{x:c},backend:n,attrs:{perm:u}}),m=Yt({inputs:{x:f},backend:n,attrs:{shape:p}}),g=Oo({inputs:{x:m},backend:n,attrs:{begin:h,size:d}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var GF={kernelName:ci,backendName:"cpu",kernelFunc:XJ};function YJ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i}=a,o=ad(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}var WF={kernelName:cp,backendName:"cpu",kernelFunc:YJ};function ZJ(e){let{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.data.get(a.dataId).values,i=n.data.get(r.dataId).values,o=S.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var UF={kernelName:pp,backendName:"cpu",kernelFunc:ZJ},JJ=_t(po,((e,t)=>{let n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),HF={kernelName:po,backendName:"cpu",kernelFunc:JJ},QJ=e=>{let{x:t}=e.inputs,n=e.backend,a=new Float32Array(y.sizeFromShape(t.shape)),r=n.data.get(t.dataId),s=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){let t=o[e],n=l[e];a[e]=Math.hypot(t,n)}return n.makeOutput(a,t.shape,"float32")},qF={kernelName:Dl,backendName:"cpu",kernelFunc:QJ};function Ji(e){let{inputs:t,backend:n}=e,{input:a}=t,r=n.data.get(a.dataId).complexTensorInfos.imag,s=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,s)}var KF={kernelName:Sp,backendName:"cpu",kernelFunc:Ji};function Eu(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=y.parseAxisParam(r,t[0].shape)[0],i=t.map((e=>e.shape));S.assertParamsConsistent(i,s);let o=S.computeOutShape(t.map((e=>e.shape)),s);if(0===y.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter((e=>y.sizeFromShape(e.shape)>0));if(1===l.length)return Xr({inputs:{x:l[0]},backend:n});if("complex64"===l[0].dtype){let e=l.map((e=>$o({inputs:{input:e},backend:n}))),t=l.map((e=>Ji({inputs:{input:e},backend:n}))),a=Eu({inputs:e,backend:n,attrs:{axis:s}}),r=Eu({inputs:t,backend:n,attrs:{axis:s}}),i=Ir({inputs:{real:a,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),i}let u=l.map((e=>{let t=[-1,y.sizeFromShape(e.shape.slice(s))];return Yt({inputs:{x:e},backend:n,attrs:{shape:t}})})),p=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));o=S.computeOutShape(u.map((e=>e.shape)),1);let h=1===u[0].shape[0],d=Ac(p,o,t[0].dtype,h),c=S.computeOutShape(l.map((e=>e.shape)),s),f=n.makeTensorInfo(c,t[0].dtype,d);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}var jF={kernelName:pi,backendName:"cpu",kernelFunc:Eu};function xT(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:p}=a;tt([r,s],"conv2d");let h=S.convertConv2DDataFormat(l),d=S.computeConv2DInfo(r.shape,s.shape,i,u,o,p,!1,h),c=d.filterHeight,f=d.filterWidth,m=d.dilationHeight,g=d.dilationWidth,b=d.padInfo.left,x=d.padInfo.top,v="channelsLast"===d.dataFormat,w=new pe(d.outShape,r.dtype),k=y.computeStrides(r.shape),I=y.computeStrides(s.shape),N=k[0],T=v?k[1]:k[2],C=v?k[2]:1,E=v?1:k[1],_=w.strides[0],$=v?w.strides[1]:w.strides[2],A=v?w.strides[2]:1,R=v?1:w.strides[1],F=n.data.get(r.dataId).values,D=n.data.get(s.dataId).values,M=w.values;for(let e=0;e<d.batchSize;++e){let t=e*N,n=e*_;for(let e=0;e<d.outHeight;++e){let a=n+e*$,r=e*d.strideHeight-x;for(let e=0;e<c;++e){let n=r+e*m;if(n<0||n>=d.inHeight)continue;let s=e*I[0],i=t+n*T;for(let e=0;e<d.outWidth;++e){let t=a+e*A,n=e*d.strideWidth-b;for(let e=0;e<f;++e){let a=n+e*g;if(a<0||a>=d.inWidth)continue;let r=i+a*C,o=s+e*I[1];for(let e=0;e<d.inChannels;++e){let n=F[r+e*E];for(let e=0;e<d.outChannels;++e)M[t+e*R]+=n*D[o+e];o+=d.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,M)}var XF={kernelName:jo,backendName:"cpu",kernelFunc:xT};function tQ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:p}=a;tt([r,s],"conv2dBackpropFilter");let h=S.convertConv2DDataFormat(l),d=S.computeConv2DInfo(r.shape,p,i,1,o,u,!1,h),{strideHeight:c,strideWidth:f,filterHeight:m,filterWidth:g}=d,y="channelsLast"===d.dataFormat,b=new pe(d.filterShape,"float32"),x=d.padInfo.left,v=d.padInfo.top,w=n.data.get(r.dataId).values,k=n.data.get(s.dataId).values,I=new pe(r.shape,r.dtype,w),N=new pe(s.shape,s.dtype,k);for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((v-e)/c)),n=Math.min(d.outHeight,(d.inHeight+v-e)/c);for(let a=0;a<g;++a){let r=Math.max(0,Math.ceil((x-a)/f)),s=Math.min(d.outWidth,(d.inWidth+x-a)/f);for(let i=0;i<d.inChannels;++i)for(let o=0;o<d.outChannels;++o){let l=0;for(let u=0;u<d.batchSize;++u)for(let p=t;p<n;++p){let t=e+p*c-v;for(let e=r;e<s;++e){let n=a+e*f-x;l+=y?I.get(u,t,n,i)*N.get(u,p,e,o):I.get(u,i,t,n)*N.get(u,o,p,e)}}b.set(l,e,a,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var YF={kernelName:fp,backendName:"cpu",kernelFunc:tQ};function eQ(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:p}=a;tt([r,s],"conv2dBackpropInput");let h=y.computeStrides(s.shape),d=y.computeStrides(r.shape),c=S.convertConv2DDataFormat(u),f=S.computeConv2DInfo(i,s.shape,o,1,l,p,!1,c),m=new pe(f.inShape,"float32"),g=m.values,b=n.data.get(r.dataId).values,x=n.data.get(s.dataId).values,[v,w,k]=h,{batchSize:I,filterHeight:N,filterWidth:T,inChannels:C,inHeight:E,inWidth:_,outChannels:$,outHeight:A,outWidth:R,strideHeight:F,strideWidth:D}=f;c=f.dataFormat;let M=N-1-f.padInfo.top,O=T-1-f.padInfo.left,z="channelsLast"===c,L=m.strides[0],P=z?m.strides[1]:m.strides[2],B=z?m.strides[2]:1,W=z?1:m.strides[1],V=d[0],U=z?d[1]:d[2],G=z?d[2]:1,H=z?1:d[1];for(let e=0;e<I;++e)for(let t=0;t<C;++t)for(let n=0;n<E;++n){let a=n-M,r=Math.max(0,Math.ceil(a/F)),s=Math.min(A,(N+a)/F);for(let i=0;i<_;++i){let o=i-O,l=Math.max(0,Math.ceil(o/D)),u=Math.min(R,(T+o)/D),p=0;for(let n=r;n<s;++n){let r=n*F-a;for(let a=l;a<u;++a){let s=V*e+U*n+G*a,i=v*(N-1-r)+w*(T-1-(a*D-o))+k*t;for(let e=0;e<$;++e)p+=b[s+H*e]*x[i+e]}}g[L*e+P*n+B*i+W*t]=p}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}var ZF={kernelName:Xo,backendName:"cpu",kernelFunc:eQ};function rQ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l}=a;tt([r,s],"conv3d");let u=S.computeConv3DInfo(r.shape,s.shape,i,l,o),{filterDepth:p,filterHeight:h,filterWidth:d,dilationDepth:c,dilationHeight:f,dilationWidth:m,padInfo:g}=u,b=g.front,x=g.left,v=g.top,w=new pe(u.outShape,r.dtype),k=n.data.get(r.dataId).values,I=n.data.get(s.dataId).values,N=w.values,T=y.computeStrides(r.shape),C=y.computeStrides(s.shape);for(let e=0;e<u.batchSize;++e){let t=e*T[0],n=e*w.strides[0];for(let e=0;e<u.outDepth;++e){let a=n+e*w.strides[1],r=e*u.strideDepth-b;for(let e=0;e<p;++e){let n=r+e*c;if(n<0||n>=u.inDepth)continue;let s=e*C[0],i=t+n*T[1];for(let e=0;e<u.outHeight;++e){let t=a+e*w.strides[2],n=e*u.strideHeight-v;for(let e=0;e<h;++e){let a=n+e*f;if(a<0||a>=u.inHeight)continue;let r=s+e*C[1],o=i+a*T[2];for(let e=0;e<u.outWidth;++e){let n=t+e*u.outChannels,a=e*u.strideWidth-x;for(let e=0;e<d;++e){let t=a+e*m;if(t<0||t>=u.inWidth)continue;let s=r+e*C[2],i=o+t*u.inChannels,l=s;for(let e=0;e<u.inChannels;++e){let t=k[i+e];for(let e=0;e<u.outChannels;++e)N[n+e]+=t*I[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}var JF={kernelName:Rl,backendName:"cpu",kernelFunc:rQ};function nQ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,filterShape:l}=a;tt([r,s],"conv3dBackpropFilterV2");let u=y.computeStrides(r.shape),p=y.computeStrides(s.shape),h=S.computeConv3DInfo(r.shape,l,i,1,o),d=h.strideDepth,c=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,b=h.filterWidth,x=new pe(h.filterShape,"float32"),v=x.values,[w,k,I,N]=x.strides,T=n.data.get(s.dataId).values,[C,E,_,$]=p,A=n.data.get(r.dataId).values,[R,F,D,M]=u,O=h.padInfo.front,z=h.padInfo.left,L=h.padInfo.top;for(let e=0;e<m;++e){let t=Math.max(0,Math.ceil((O-e)/d)),n=Math.min(h.outDepth,(h.inDepth+O-e)/d),a=e*w;for(let r=0;r<g;++r){let s=Math.max(0,Math.ceil((L-r)/c)),i=Math.min(h.outHeight,(h.inHeight+L-r)/c),o=r*k+a;for(let a=0;a<b;++a){let l=Math.max(0,Math.ceil((z-a)/f)),u=Math.min(h.outWidth,(h.inWidth+z-a)/f),p=a*I+o;for(let o=0;o<h.inChannels;++o){let m=o*N+p;for(let p=0;p<h.outChannels;++p){let g=0;for(let m=0;m<h.batchSize;++m){let h=m*R,y=m*C;for(let m=t;m<n;++m){let t=(e+m*d-O)*F+h,n=m*E+y;for(let e=s;e<i;++e){let s=(r+e*c-L)*D+t,i=e*_+n;for(let e=l;e<u;++e){let t=e*$+i;g+=A[(a+e*f-z)*M+s+o]*T[t+p]}}}}v[m+p]=g}}}}}return n.makeTensorInfo(x.shape,x.dtype,x.values)}var QF={kernelName:dp,backendName:"cpu",kernelFunc:nQ};function oQ(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:i,strides:o,inputShape:l}=a;tt([r],"conv3dBackpropInputV2");let u=y.computeStrides(r.shape),p=y.computeStrides(s.shape),h=S.computeConv3DInfo(l,s.shape,o,1,i),d=new pe(h.inShape,"float32"),c=d.values,[f,m,g,b]=d.strides,x=n.data.get(r.dataId).values,[v,w,k,I]=u,N=n.data.get(s.dataId).values,[T,C,E,_]=p,{batchSize:$,filterDepth:A,filterHeight:R,filterWidth:F,inChannels:D,inDepth:M,inHeight:O,inWidth:z,outChannels:L,outDepth:P,outHeight:B,outWidth:W,strideDepth:V,strideHeight:U,strideWidth:G}=h,H=A-1-h.padInfo.front,q=R-1-h.padInfo.top,j=F-1-h.padInfo.left;for(let e=0;e<$;++e)for(let t=0;t<D;++t)for(let n=0;n<M;++n){let a=n-H,r=Math.max(0,Math.ceil(a/V)),s=Math.min(P,(A+a)/V);for(let i=0;i<O;++i){let o=i-q,l=Math.max(0,Math.ceil(o/U)),u=Math.min(B,(R+o)/U);for(let p=0;p<z;++p){let h=p-j,d=Math.max(0,Math.ceil(h/G)),y=Math.min(W,(F+h)/G),S=0;for(let n=r;n<s;++n){let r=n*V-a;for(let a=l;a<u;++a){let s=a*U-o;for(let i=d;i<y;++i){let o=v*e+w*n+k*a+I*i,l=T*(A-1-r)+C*(R-1-s)+E*(F-1-(i*G-h))+_*t;for(let e=0;e<L;++e)S+=x[o+e]*N[l+e]}}}c[f*e+m*n+g*i+b*p+t]=S}}}return n.makeTensorInfo(d.shape,d.dtype,d.values)}var tO={kernelName:hp,backendName:"cpu",kernelFunc:oQ},sQ=_t(Yo,(e=>Math.cos(e))),eO={kernelName:Yo,backendName:"cpu",kernelFunc:sQ},iQ=_t(Zo,(e=>Math.cosh(e))),rO={kernelName:Zo,backendName:"cpu",kernelFunc:iQ};function aQ(e){let{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=a,[p,h,d,c]=r.shape,f=s.shape[0],[m,g]=o,b=wt([f,m,g,c],"float32"),x=n.data.get(s.dataId).values,v=n.data.get(i.dataId).values,w=n.data.get(r.dataId).values,k=y.computeStrides(r.shape),I=y.computeStrides(b.shape);for(let e=0;e<f;e++){let t=4*e,n=x[t],a=x[t+1],r=x[t+2],s=x[t+3],i=v[e];if(i>=p)continue;let o=m>1?(r-n)*(h-1)/(m-1):0,f=g>1?(s-a)*(d-1)/(g-1):0;for(let t=0;t<m;t++){let p=m>1?n*(h-1)+t*o:.5*(n+r)*(h-1);if(p<0||p>h-1)for(let n=0;n<g;n++)for(let a=0;a<c;a++){let r=a+n*I[2]+t*I[1]+e*I[0];b.values[r]=u}else if("bilinear"===l){let n=Math.floor(p),r=Math.ceil(p),o=p-n;for(let l=0;l<g;l++){let p=g>1?a*(d-1)+l*f:.5*(a+s)*(d-1);if(p<0||p>d-1){for(let n=0;n<c;n++){let a=n+l*I[2]+t*I[1]+e*I[0];b.values[a]=u}continue}let h=Math.floor(p),m=Math.ceil(p),y=p-h;for(let a=0;a<c;a++){let s=a+h*k[2]+n*k[1]+i*k[0],u=w[s];s=a+m*k[2]+n*k[1]+i*k[0];let p=w[s];s=a+h*k[2]+r*k[1]+i*k[0];let d=w[s];s=a+m*k[2]+r*k[1]+i*k[0];let c=u+(p-u)*y,f=d+(w[s]-d)*y;s=a+l*I[2]+t*I[1]+e*I[0],b.values[s]=c+(f-c)*o}}}else for(let n=0;n<g;++n){let r=g>1?a*(d-1)+n*f:.5*(a+s)*(d-1);if(r<0||r>d-1){for(let a=0;a<c;a++){let r=a+n*I[2]+t*I[1]+e*I[0];b.values[r]=u}continue}let o=Math.round(r),l=Math.round(p);for(let a=0;a<c;a++){let r=a+o*k[2]+l*k[1]+i*k[0],s=a+n*I[2]+t*I[1]+e*I[0];b.values[s]=w[r]}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}var nO={kernelName:ba,backendName:"cpu",kernelFunc:aQ};function lQ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a;tt(r,"cumprod");let l=S.getAxesPermutation([s],r.shape.length),u=r;null!=l&&(u=Ve({inputs:{x:r},backend:n,attrs:{perm:l}}));let p=S.getInnerMostAxes(1,r.shape.length)[0];if(p!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${p}`);let h=ar(u.dtype,"int32"),d=y.makeOnesTypedArray(y.sizeFromShape(u.shape),h),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<c.length;e+=f)for(let t=0;t<f;t++){let n=m(e,t);if(0===t)d[n]=i?1:c[n];else{let a=m(e,t-1);d[n]=i?c[a]*d[a]:c[n]*d[a]}}let g=n.makeTensorInfo(u.shape,h,d);if(null!=l){let e=Ve({inputs:{x:g},backend:n,attrs:{perm:S.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}var oO={kernelName:ya,backendName:"cpu",kernelFunc:lQ};function uQ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a;tt(r,"cumsum");let l=S.getAxesPermutation([s],r.shape.length),u=r;null!=l&&(u=Ve({inputs:{x:r},backend:n,attrs:{perm:l}}));let p=S.getInnerMostAxes(1,r.shape.length)[0];if(p!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${p}`);let h=ar(u.dtype,"int32"),d=y.makeZerosTypedArray(y.sizeFromShape(u.shape),h),c=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<c.length;e+=f)for(let t=0;t<f;t++){let n=m(e,t);if(0===t)d[n]=i?0:c[n];else{let a=m(e,t-1);d[n]=i?c[a]+d[a]:c[n]+d[a]}}let g=n.makeTensorInfo(u.shape,h,d);if(null!=l){let e=Ve({inputs:{x:g},backend:n,attrs:{perm:S.getUndoAxesPermutation(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}var sO={kernelName:Jo,backendName:"cpu",kernelFunc:uQ};function cQ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i,binaryOutput:o}=a;if(1===r.shape.length){let e=ad(n.data.get(r.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===r.shape.length){let e=Qb(n.bufferSync(r),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var iO={kernelName:gp,backendName:"cpu",kernelFunc:cQ};function pQ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:i}=a;y.assert("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));let o=r.shape[0],l=r.shape[1],u=r.shape[2],p=r.shape[3],h=l*s,d=u*s,c=p/(s*s),f=n.data.get(r.dataId).values,m=new Float32Array(o*h*d*c),g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){let n=Math.floor(t/s),a=t%s;for(let t=0;t<d;++t){let r=Math.floor(t/s),i=(a*s+t%s)*c;for(let t=0;t<c;++t){let a=t+i+p*(r+u*(n+l*e));m[g++]=f[a]}}}return n.makeTensorInfo([o,h,d,c],r.dtype,m)}var aO={kernelName:wa,backendName:"cpu",kernelFunc:pQ};function yT(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=a;tt([r,s],"depthwiseConv2DNative");let p=y.computeStrides(r.shape),h=y.computeStrides(s.shape),d=l;null==d&&(d=[1,1]),y.assert(S.eitherStridesOrDilationsAreOne(i,d),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${d}'`));let c=S.computeConv2DInfo(r.shape,s.shape,i,d,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:b,padInfo:x}=c,v=x.left,w=x.top,k=c.outChannels/c.inChannels,I=new pe(c.outShape,r.dtype),N=n.data.get(r.dataId).values,T=n.data.get(s.dataId).values,C=I.values;for(let e=0;e<c.batchSize;++e){let t=e*p[0],n=e*I.strides[0];for(let e=0;e<c.outHeight;++e){let a=n+e*I.strides[1],r=e*c.strideHeight-w;for(let e=0;e<f;++e){let n=r+e*g;if(n<0||n>=c.inHeight)continue;let s=e*h[0],i=t+n*p[1];for(let e=0;e<c.outWidth;++e){let t=a+e*I.strides[2],n=e*c.strideWidth-v;for(let e=0;e<m;++e){let a=n+e*b;if(a<0||a>=c.inWidth)continue;let r=s+e*h[1],o=i+a*c.inChannels,l=t,u=r;for(let e=0;e<c.inChannels;++e){let t=N[o+e];for(let e=0;e<k;++e)C[l+e]+=t*T[u+e];l+=k,u+=k}}}}}}return n.makeTensorInfo(I.shape,I.dtype,I.values)}var lO={kernelName:Qo,backendName:"cpu",kernelFunc:yT};function mQ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:p}=a;tt([r,s],"depthwiseConv2dNativeBackpropFilter");let h=S.computeConv2DInfo(r.shape,p,i,o,l,u,!0),{strideHeight:d,strideWidth:c,filterHeight:f,filterWidth:m}=h,g=new pe(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,v=n.data.get(r.dataId).values,w=new pe(r.shape,r.dtype,v),k=n.data.get(s.dataId).values,I=new pe(s.shape,s.dtype,k);for(let e=0;e<f;++e){let t=Math.max(0,Math.ceil((b-e)/d)),n=Math.min(h.outHeight,(h.inHeight+b-e)/d);for(let a=0;a<m;++a){let r=Math.max(0,Math.ceil((y-a)/c)),s=Math.min(h.outWidth,(h.inWidth+y-a)/c);for(let i=0;i<h.outChannels;++i){let o=Math.trunc(i/x),l=i%x,u=0;for(let l=0;l<h.batchSize;++l)for(let p=t;p<n;++p){let t=e+p*d-b;for(let e=r;e<s;++e){let n=a+e*c-y;u+=w.get(l,t,n,o)*I.get(l,p,e,i)}}g.set(u,e,a,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}var uO={kernelName:xp,backendName:"cpu",kernelFunc:mQ};function fQ(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:p}=a;tt([r,s],"depthwiseConv2DNativeBackpropInput");let h=y.computeStrides(r.shape),d=y.computeStrides(s.shape),c=S.computeConv2DInfo(p,s.shape,i,o,l,u,!0),f=new pe(c.inShape,"float32"),m=f.values,[g,b,x]=f.strides,v=n.data.get(r.dataId).values,[w,k,I]=h,N=n.data.get(s.dataId).values,[T,C,E]=d,{batchSize:_,filterHeight:$,filterWidth:A,inChannels:R,inHeight:F,inWidth:D,outChannels:M,outHeight:O,outWidth:z,strideHeight:L,strideWidth:P}=c,B=$-1-c.padInfo.top,W=A-1-c.padInfo.left,V=M/R;for(let e=0;e<_;++e)for(let t=0;t<R;++t)for(let n=0;n<F;++n){let a=n-B,r=Math.max(0,Math.ceil(a/L)),s=Math.min(O,($+a)/L);for(let i=0;i<D;++i){let o=i-W,l=Math.max(0,Math.ceil(o/P)),u=Math.min(z,(A+o)/P),p=0;for(let n=r;n<s;++n){let r=n*L-a;for(let a=l;a<u;++a){let s=w*e+k*n+I*a,i=T*($-1-r)+C*(A-1-(a*P-o))+E*t;for(let e=0;e<V;++e)p+=v[s+(t*V+e)]*N[i+e]}}m[g*e+b*n+x*i+t]=p}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}var cO={kernelName:yp,backendName:"cpu",kernelFunc:fQ};function dQ(e){let{inputs:t,backend:n}=e,{x:a}=t,r=y.sizeFromShape(a.shape),s=n.data.get(a.dataId).values,i=wt([r,r],a.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*r+e]=s[e];let l=[...a.shape,...a.shape];return n.makeTensorInfo(l,i.dtype,i.values)}var pO={kernelName:bp,backendName:"cpu",kernelFunc:dQ},mO={kernelName:Fl,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:a,filter:r}=e,{strides:s,pad:i,dilations:o}=n,l=t,u=l.data.get(a.dataId).values,p=a.shape.length,h=l.data.get(r.dataId).values,d=r.shape.length,{batchSize:c,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:x,padInfo:v,strideHeight:w,strideWidth:k,filterHeight:I,filterWidth:N,dilationHeight:T,dilationWidth:C,outShape:E}=S.computeDilation2DInfo(a.shape,r.shape,s,i,"NHWC",o),_=y.sizeFromShape(E),$=E.length,A=y.getArrayFromDType(a.dtype,_);for(let e=0;e<c;++e)for(let t=0;t<b;++t){let n=t*w-v.top;for(let s=0;s<x;++s){let i=s*k-v.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<I;++t){let s=n+t*T;if(s>=0&&s<f)for(let n=0;n<N;++n){let c=i+n*C;if(c>=0&&c<m){let i=y.locToIndex([e,s,c,o],p,y.computeStrides(a.shape)),f=y.locToIndex([t,n,o],d,y.computeStrides(r.shape)),m=u[i]+h[f];m>l&&(l=m)}}}A[y.locToIndex([e,t,s,o],$,y.computeStrides(E))]=l}}}return{dataId:l.write(y.toTypedArray(A,a.dtype),E,a.dtype),shape:E,dtype:a.dtype}}},fO={kernelName:Yd,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:a,filter:r,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,p=y.toNestedArray(a.shape,u.data.get(a.dataId).values),h=y.toNestedArray(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:N,dilationWidth:T,outShape:C}=S.computeDilation2DInfo(a.shape,r.shape,i,o,"NHWC",l);y.assert(s.rank===C.length,(()=>`Error in ${Yd}, dy must have the same rank as output ${C.length}, but got ${s.rank}`));let E=y.toNestedArray(C,u.data.get(s.dataId).values),_=y.makeZerosNestedTypedArray(r.shape,r.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){let n=t*v-x.top;for(let a=0;a<b;++a){let r=a*w-x.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<k;++t){let a=n+t*N;if(a>=0&&a<c)for(let n=0;n<I;++n){let u=r+n*T;if(u>=0&&u<f){let r=p[e][a][u][s]+h[t][n][s];r>i&&(i=r,o=t,l=n)}}}_[o][l][s]+=E[e][t][a][s]}}}return{dataId:u.write(y.toTypedArray(_,a.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},dO={kernelName:Xd,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{let{x:a,filter:r,dy:s}=e,{strides:i,pad:o,dilations:l}=n,u=t,p=y.toNestedArray(a.shape,u.data.get(a.dataId).values),h=y.toNestedArray(r.shape,u.data.get(r.dataId).values),{batchSize:d,inHeight:c,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:x,strideHeight:v,strideWidth:w,filterHeight:k,filterWidth:I,dilationHeight:N,dilationWidth:T,outShape:C}=S.computeDilation2DInfo(a.shape,r.shape,i,o,"NHWC",l);y.assert(s.rank===C.length,(()=>`Error in ${Xd}, dy must have the same rank as output ${C.length}, but got ${s.rank}`));let E=y.toNestedArray(C,u.data.get(s.dataId).values),_=y.makeZerosNestedTypedArray(a.shape,a.dtype);for(let e=0;e<d;++e)for(let t=0;t<g;++t){let n=t*v-x.top;for(let a=0;a<b;++a){let r=a*w-x.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=r<0?0:r;for(let t=0;t<k;++t){let a=n+t*N;if(a>=0&&a<c)for(let n=0;n<I;++n){let u=r+n*T;if(u>=0&&u<f){let r=p[e][a][u][s]+h[t][n][s];r>i&&(i=r,o=a,l=u)}}}_[e][o][l][s]+=E[e][t][a][s]}}}return{dataId:u.write(y.toTypedArray(_,a.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}};function yl(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:s}=n,{axis:i,keepDims:o}=r;tt(s,"sum"),t="bool"===s.dtype?Do({inputs:{x:s},backend:a,attrs:{dtype:"int32"}}):Xr({inputs:{x:s},backend:a});let l=t.shape.length,u=y.parseAxisParam(i,t.shape),p=S.getAxesPermutation(u,l),h=u,d=t;null!=p&&(d=Ve({inputs:{x:t},backend:a,attrs:{perm:p}}),h=S.getInnerMostAxes(h.length,l)),S.assertAxesAreInnerMostDims("sum",h,d.shape.length);let[c,f]=S.computeOutAndReduceShapes(d.shape,h),m=sd(a,c,S.upcastType(d.dtype,"int32")),g=y.sizeFromShape(f),b=a.data.get(m.dataId).values,x=a.data.get(d.dataId).values;for(let e=0;e<b.length;++e){let t=e*g,n=0;for(let e=0;e<g;++e)n+=x[t+e];b[e]=n}if(o){let e=m;m=Yt({inputs:{x:m},backend:a,attrs:{shape:S.expandShapeToKeepDim(m.shape,u)}}),a.disposeIntermediateTensorInfo(e)}return a.disposeIntermediateTensorInfo(t),null!=p&&a.disposeIntermediateTensorInfo(d),m}var hO={kernelName:Fs,backendName:"cpu",kernelFunc:yl};function hQ(e){let{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:i,summedDims:o,idDims:l}=S.decodeEinsumEquation(r,s.length);S.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:p}=S.getEinsumComputePath(o,l),h=p.length,d=null,c=i.length,f=[];for(let e=0;e<h;++e){for(let t of p[e]){let e,{permutationIndices:a,expandDims:r}=S.getEinsumPermutation(c,l[t]);S.isIdentityPermutation(a)?e=s[t]:(e=Ve({inputs:{x:s[t]},backend:n,attrs:{perm:a}}),f.push(e));let i=e.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);y.arraysEqual(e.shape,i)||(e=Yt({inputs:{x:e},backend:n,attrs:{shape:i}}),f.push(e)),null===d?d=e:(d=$c({inputs:{a:e,b:d},backend:n}),f.push(d))}e<h-1&&(u[e]>=0&&(d=yl({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-c),keepDims:!1}}),f.push(d)),c--)}for(let e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}var gO={kernelName:wp,backendName:"cpu",kernelFunc:hQ};function gQ(e){let{inputs:t,backend:n}=e,{dy:a,y:r}=t;tt([a,r],"eluGrad");let s=new Float32Array(y.sizeFromShape(r.shape)),i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values;for(let e=0;e<i.length;++e){let t=i[e];s[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(r.shape,"float32",s)}var xO={kernelName:Cp,backendName:"cpu",kernelFunc:gQ},xQ=S.ERF_P,yQ=S.ERF_A1,bQ=S.ERF_A2,wQ=S.ERF_A3,CQ=S.ERF_A4,IQ=S.ERF_A5,vQ=_t(Ca,(e=>{let t=Math.sign(e),n=Math.abs(e),a=1/(1+xQ*n);return t*(1-((((IQ*a+CQ)*a+wQ)*a+bQ)*a+yQ)*a*Math.exp(-n*n))})),yO={kernelName:Ca,backendName:"cpu",kernelFunc:vQ};function md(e){let{inputs:t,backend:n,attrs:a}=e,{input:r}=t,{dim:s}=a,i=r.shape.length,o=r.shape.slice(),l=s;return s<0&&(y.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),Yt({inputs:{x:r},backend:n,attrs:{shape:o}})}var bO={kernelName:mi,backendName:"cpu",kernelFunc:md},SQ=Qt(((e,t)=>e/t)),Uh=ie(ts,SQ),Hh={kernelName:ts,backendName:"cpu",kernelFunc:Uh};function gw(e,t,n){let a=e.shape,r=a[0],s=a[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[r,s],p=y.sizeFromShape(u),h=y.getTypedArrayFromDType("float32",p),d=y.getTypedArrayFromDType("float32",p);for(let e=0;e<r;e++){let a=Oo({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),r=Oo({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=Ir({inputs:{real:a,imag:r},backend:n}),{real:u,imag:p}=NQ(i,t,n),c=S.mergeRealAndImagArrays(u,p);for(let t=0;t<s;t++){let n=S.getComplexWithIndex(c,t);h[e*s+t]=n.real,d[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i)}let c=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",d),m=Ir({inputs:{real:c,imag:f},backend:n});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}function NQ(e,t,n){let a=y.sizeFromShape(e.shape),r=n.data.get(e.dataId),s=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(TQ(a)){let r=bT(s,i,a,t,n),o=[e.shape[0],e.shape[1]];if(t){let e=n.makeTensorInfo(o,"float32",r.real),t=n.makeTensorInfo(o,"float32",r.imag),s=n.makeTensorInfo([],"float32",y.createScalarValue(a,"float32")),i=Xr({inputs:{x:s},backend:n}),l=Hh.kernelFunc({inputs:{a:e,b:s},backend:n}),u=Hh.kernelFunc({inputs:{a:t,b:i},backend:n}),p=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:p,imag:h}}return r}{let e=kQ(S.mergeRealAndImagArrays(s,i),a,t);return S.splitRealAndImagArrays(e)}}function TQ(e){return 0==(e&e-1)}function bT(e,t,n,a,r){if(1===n)return{real:e,imag:t};let s=S.mergeRealAndImagArrays(e,t),i=n/2,o=S.complexWithEvenIndex(s),l=o.real,u=o.imag,p=[l.length],h=r.makeTensorInfo(p,"float32",l),d=r.makeTensorInfo(p,"float32",u),c=Ir({inputs:{real:h,imag:d},backend:r}),f=S.complexWithOddIndex(s),m=f.real,g=f.imag,y=[m.length],b=r.makeTensorInfo(y,"float32",m),x=r.makeTensorInfo(y,"float32",g),v=Ir({inputs:{real:b,imag:x},backend:r}),w=bT(l,u,i,a,r),k=w.real,I=w.imag,N=[k.length],T=r.makeTensorInfo(N,"float32",k),C=r.makeTensorInfo(N,"float32",I),E=Ir({inputs:{real:T,imag:C},backend:r}),_=bT(m,g,i,a,r),$=_.real,A=_.imag,R=[$.length],F=r.makeTensorInfo(R,"float32",$),D=r.makeTensorInfo(R,"float32",A),M=Ir({inputs:{real:F,imag:D},backend:r}),O=S.exponents(n,a),z=[O.real.length],L=r.makeTensorInfo(z,"float32",O.real),P=r.makeTensorInfo(z,"float32",O.imag),B=Ir({inputs:{real:L,imag:P},backend:r}),W=$c({inputs:{a:B,b:M},backend:r}),V=Zi({inputs:{a:E,b:W},backend:r}),U=Gh({inputs:{a:E,b:W},backend:r}),G=$o({inputs:{input:V},backend:r}),H=$o({inputs:{input:U},backend:r}),q=Ji({inputs:{input:V},backend:r}),j=Ji({inputs:{input:U},backend:r}),K=Eu({inputs:[G,H],backend:r,attrs:{axis:0}}),X=Eu({inputs:[q,j],backend:r,attrs:{axis:0}}),Q=r.data.get(K.dataId).values,J=r.data.get(X.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(c),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(v),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(E),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(M),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(K),r.disposeIntermediateTensorInfo(X),{real:Q,imag:J}}function kQ(e,t,n){let a=new Float32Array(2*t);for(let r=0;r<t;r++){let s=0,i=0;for(let a=0;a<t;a++){let o=S.exponent(r*a,t,n),l=S.getComplexWithIndex(e,a);s+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(s/=t,i/=t),S.assignToTypedArray(a,s,i,r)}return a}function EQ(e){let{inputs:t,backend:n}=e,{input:a}=t,r=y.sizeFromShape(a.shape),s=a.shape[a.shape.length-1],i=Yt({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),o=gw(i,!1,n),l=Yt({inputs:{x:o},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}var wO={kernelName:Ip,backendName:"cpu",kernelFunc:EQ};function qh(e){let{backend:t,attrs:n}=e,{shape:a,value:r,dtype:s}=n,i=s||y.inferDtype(r),o=y.getArrayFromDType(i,y.sizeFromShape(a));return _Q(o,r,i),t.makeTensorInfo(a,i,o)}var CO={kernelName:Ol,backendName:"cpu",kernelFunc:qh};function _Q(e,t,n){e.fill(t)}var IO={kernelName:Sa,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:a}=e,r=n,s=y.getTypedArrayFromDType(a.dtype,y.sizeFromShape(a.shape)),[i,o,l,u]=a.shape,p=r.data.get(a.dataId).values;for(let e=0;e<i;e++){let t=e*l*o*u;for(let e=0;e<o;e++){let n=e*(l*u);for(let e=0;e<l;e++){let a=e*u;for(let r=0;r<u;r++){let i=Math.round(l-e-1),o=t+n+a+r,h=p[o];i>=0&&i<l&&(h=p[t+n+i*u+r]),s[o]=h}}}}return{dataId:r.write(s,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},AQ=Qt(((e,t)=>Math.floor(e/t))),$Q=ie(os,AQ,null,"int32"),vO={kernelName:os,backendName:"cpu",kernelFunc:$Q};function DQ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:p,dilations:h,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=a,m=xT({inputs:{x:r,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:p,dilations:h,dimRoundingMode:d}});if(i){let e=m;if("NCHW"===p&&1===i.shape.length&&1!==i.shape[0]){let e=Yt({inputs:{x:i},backend:n,attrs:{shape:[i.shape[0],1,1]}});m=Zi({inputs:{a:m,b:e},backend:n}),n.disposeIntermediateTensorInfo(e)}else m=Zi({inputs:{a:m,b:i},backend:n});n.disposeIntermediateTensorInfo(e)}if(c){let e=m;if("NCHW"===p&&"prelu"===c&&1===o.shape.length&&1!==o.shape[0]){let e=Yt({inputs:{x:o},backend:n,attrs:{shape:[o.shape[0],1,1]}});m=Lc(n,m,c,e,f),n.disposeIntermediateTensorInfo(e)}else m=Lc(n,m,c,o,f);n.disposeIntermediateTensorInfo(e)}return m}var SO={kernelName:Ni,backendName:"cpu",kernelFunc:DQ};function RQ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:p,dilations:h,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=a,m=yT({inputs:{x:r,filter:s},backend:n,attrs:{strides:l,pad:u,dataFormat:p,dilations:h,dimRoundingMode:d}});if(i){let e=m;m=Zi({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(c){let e=m;m=Lc(n,m,c,o,f),n.disposeIntermediateTensorInfo(e)}return m}var NO={kernelName:Ti,backendName:"cpu",kernelFunc:RQ};function FQ(e){let{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=y.sizeFromShape(a.shape),i=r.shape,o=i[i.length-1],[l,u,p,h]=S.prepareAndValidate(a,r);if(0===u)return n.makeTensorInfo(l,a.dtype,[]);let d=tw(n.data.get(r.dataId).values,n.bufferSync(a),a.dtype,u,o,p,h,a.shape,s);return n.makeTensorInfo(l,a.dtype,d.values)}var TO={kernelName:Na,backendName:"cpu",kernelFunc:FQ};function OQ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:i,batchDims:o}=a;tt([r,s],"gatherV2");let l=y.parseAxisParam(i,r.shape)[0],u=n.data.get(s.dataId).values,p=r.shape[l];for(let e=0;e<u.length;++e){let t=u[e];y.assert(t<=p-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${p-1}]`))}let h=o;null==o&&(h=0);let d=y.sizeFromShape(s.shape),c=S.segment_util.collectGatherOpShapeInfo(r,s,l,h),f=Yt({inputs:{x:r},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),m=Yt({inputs:{x:s},backend:n,attrs:{shape:[c.batchSize,d/c.batchSize]}}),g=[c.batchSize,c.outerSize,d/c.batchSize,c.sliceSize],b=n.bufferSync(m),x=ew(n.bufferSync(f),b,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(c.outputShape,x.dtype,x.values)}var kO={kernelName:fi,backendName:"cpu",kernelFunc:OQ};function PQ(e){let{inputs:t,backend:n}=e,{input:a}=t,r=y.sizeFromShape(a.shape),s=a.shape[a.shape.length-1],i=Yt({inputs:{x:a},backend:n,attrs:{shape:[r/s,s]}}),o=gw(i,!0,n),l=Yt({inputs:{x:o},backend:n,attrs:{shape:a.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}var EO={kernelName:vp,backendName:"cpu",kernelFunc:PQ},LQ=_t(ka,(e=>Number.isFinite(e)?1:0),"bool"),_O={kernelName:ka,backendName:"cpu",kernelFunc:LQ},MQ=_t(Ea,(e=>Math.abs(e)===1/0?1:0),"bool"),AO={kernelName:Ea,backendName:"cpu",kernelFunc:MQ},zQ=_t(as,(e=>Number.isNaN(e)?1:0),"bool"),$O={kernelName:as,backendName:"cpu",kernelFunc:zQ};function BQ(e){let{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,i=rw(a,r,s);return t.makeTensorInfo([i.length],"float32",i)}var DO={kernelName:Np,backendName:"cpu",kernelFunc:BQ},VQ=_t($a,(e=>Math.log1p(e))),RO={kernelName:$a,backendName:"cpu",kernelFunc:VQ},GQ=Qt(((e,t)=>e&&t)),WQ=ie(Da,GQ,null,"bool"),FO={kernelName:Da,backendName:"cpu",kernelFunc:WQ},UQ=_t(Ra,(e=>e?0:1),"bool"),OO={kernelName:Ra,backendName:"cpu",kernelFunc:UQ},HQ=Qt(((e,t)=>e||t)),qQ=ie(Fa,HQ,null,"bool"),PO={kernelName:Fa,backendName:"cpu",kernelFunc:qQ};function KQ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=a;tt(r,"LRN");let u=r.shape[3],p=u-1,h=n.data.get(r.dataId).values,d=y.sizeFromShape(r.shape),c=new Float32Array(d);function f(e){let t=e%u,n=e-t+Math.max(0,t-s),a=e-t+Math.min(t+s,p),r=0;for(;n<=a;n++){let e=h[n];r+=e*e}return r}for(let e=0;e<d;e++){let t=f(e),n=h[e]*Math.pow(i+o*t,-l);c[e]=n}return n.makeTensorInfo(r.shape,r.dtype,c)}var LO={kernelName:Pl,backendName:"cpu",kernelFunc:KQ};function jQ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:p}=a;tt(i,"LRNGrad");let h=y.sizeFromShape(i.shape),d=i.shape[3],c=n.data.get(i.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(h),b=h;for(let e=0;e<b;e++){let t=e%d,n=e-t+Math.max(0,t-o),a=e-t+Math.min(d,t+o+1),r=0;for(let e=n;e<a;e++)r+=Math.pow(f[e],2);r=u*r+l;for(let t=n;t<a;t++){let n=-2*u*p*f[t]*m[e]/r;e===t&&(n+=Math.pow(r,-p)),n*=c[e],g[t]+=n}}return n.makeTensorInfo(i.shape,r.dtype,g)}var MO={kernelName:Tp,backendName:"cpu",kernelFunc:jQ};function wT(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:i}=a,o=n,l=r.shape,u=l.length,p=y.parseAxisParam(s,l),h=p,d=S.getAxesPermutation(h,u),c=o.data.get(r.dataId).values;if(null!=d){let e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[d[t]];c=ld(c,l,r.dtype,d,e),h=S.getInnerMostAxes(h.length,u),l=e}tt(r,"max"),S.assertAxesAreInnerMostDims("max",h,u);let[f,m]=S.computeOutAndReduceShapes(l,h),g=nw(c,y.sizeFromShape(m),f,r.dtype),b=o.write(g,f,r.dtype),x=f;return i&&(x=S.expandShapeToKeepDim(f,p)),{dataId:b,shape:x,dtype:r.dtype}}var zO={kernelName:cs,backendName:"cpu",kernelFunc:wT};function XQ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;tt(r,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a;y.assert(S.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u,p=S.computePool2DInfo(r.shape,s,i,1,o,l);if(1===p.filterWidth&&1===p.filterHeight&&y.arraysEqual(p.inShape,p.outShape))u=Xr({inputs:{x:r},backend:n});else{let e=n.data.get(r.dataId).values,t=y.computeStrides(r.shape),a=pd(e,r.shape,r.dtype,t,p,"max");u=n.makeTensorInfo(p.outShape,r.dtype,a.values)}return u}var BO={kernelName:ms,backendName:"cpu",kernelFunc:XQ};function YQ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=a;tt(r,"maxPool3d");let p=S.computePool3DInfo(r.shape,s,i,1,o,l,u),h=hw(n.data.get(r.dataId).values,r.shape,r.dtype,y.computeStrides(r.shape),p,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}var VO={kernelName:Ll,backendName:"cpu",kernelFunc:YQ};function ZQ(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=a;tt([r,s],"maxPool3DGrad");let p=S.computePool3DInfo(s.shape,i,o,1,l,u),h=PF(n.bufferSync(s),p),d=p.strideDepth,c=p.strideHeight,f=p.strideWidth,m=p.dilationDepth,g=p.dilationHeight,y=p.dilationWidth,b=p.effectiveFilterDepth,x=p.effectiveFilterHeight,v=p.effectiveFilterWidth,w=b-1-p.padInfo.front,k=v-1-p.padInfo.left,I=x-1-p.padInfo.top,N=wt(s.shape,"float32"),T=n.bufferSync(r);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inDepth;++n)for(let a=0;a<p.inHeight;++a)for(let r=0;r<p.inWidth;++r){let s=n-w,i=a-I,o=r-k,l=0;for(let n=0;n<b;n+=m){let a=(s+n)/d;if(!(a<0||a>=p.outDepth||Math.floor(a)!==a))for(let r=0;r<x;r+=g){let s=(i+r)/c;if(!(s<0||s>=p.outHeight||Math.floor(s)!==s))for(let i=0;i<v;i+=y){let u=(o+i)/f;if(u<0||u>=p.outWidth||Math.floor(u)!==u)continue;let d=b*x*v-1-h.get(e,a,s,u,t)===n*x*v+r*v+i?1:0;0!==d&&(l+=T.get(e,a,s,u,t)*d)}}}N.set(l,e,n,a,r,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}var GO={kernelName:Ep,backendName:"cpu",kernelFunc:ZQ};function JQ(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:i}=t,o=s;tt([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:p,dimRoundingMode:h}=a,d=S.computePool2DInfo(o.shape,l,u,1,p,h),c=n.data.get(o.dataId).values,f=wt(d.outShape,o.dtype,dw(c,o.shape,o.dtype,d).values),m=d.strideHeight,g=d.strideWidth,y=d.dilationHeight,b=d.dilationWidth,x=d.effectiveFilterHeight,v=d.effectiveFilterWidth,w=v-1-d.padInfo.left,k=x-1-d.padInfo.top,I=wt(o.shape,"float32"),N=n.data.get(r.dataId).values,T=wt(r.shape,"float32",N);for(let e=0;e<d.batchSize;++e)for(let t=0;t<d.inChannels;++t)for(let n=0;n<d.inHeight;++n)for(let a=0;a<d.inWidth;++a){let r=n-k,s=a-w,i=0;for(let n=0;n<x;n+=y){let a=(r+n)/m;if(!(a<0||a>=d.outHeight||Math.floor(a)!==a))for(let r=0;r<v;r+=b){let o=(s+r)/g;if(o<0||o>=d.outWidth||Math.floor(o)!==o)continue;let l=x*v-1-f.get(e,a,o,t)===n*v+r?1:0;0!==l&&(i+=T.get(e,a,o,t)*l)}}I.set(i,e,n,a,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}var WO={kernelName:kp,backendName:"cpu",kernelFunc:JQ};function UO(e,t,n,a,r){let s=pd(e,t,n,y.computeStrides(t),r,"max"),i=dw(e,t,n,r,!0,a);return[s.values,i.values]}var HO={kernelName:_p,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:a}=e,{filterSize:r,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;tt(a,"MaxPoolWithArgmax");let u=l.data.get(a.dataId).values,p=S.computePool2DInfo(a.shape,r,s,[1,1],i),[h,d]=UO(u,a.shape,a.dtype,o,p),c=l.write(h,p.outShape,a.dtype),f=l.write(d,p.outShape,a.dtype);return[{dataId:c,shape:p.outShape,dtype:a.dtype},{dataId:f,shape:p.outShape,dtype:"int32"}]}};function QQ(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=y.parseAxisParam(s,r.shape),l=S.computeOutAndReduceShapes(r.shape,o)[1],u=y.sizeFromShape(l),p=[],h=n.makeTensorInfo([],"float32",new Float32Array([u]));p.push(h);let d=Do({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});p.push(d);let c=Uh({inputs:{a:d,b:h},backend:n});p.push(c);let f=yl({inputs:{x:c},backend:n,attrs:{axis:s,keepDims:i}});return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}var qO={kernelName:fs,backendName:"cpu",kernelFunc:QQ};function t9(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;tt(r,"min");let o=y.parseAxisParam(s,r.shape),l=o,u=S.getAxesPermutation(l,r.shape.length),p=r;null!=u&&(p=Ve({inputs:{x:r},backend:n,attrs:{perm:u}}),l=S.getInnerMostAxes(l.length,r.shape.length)),S.assertAxesAreInnerMostDims("min",l,p.shape.length);let[h,d]=S.computeOutAndReduceShapes(p.shape,l),c=y.sizeFromShape(d),f=y.makeZerosTypedArray(y.sizeFromShape(h),p.dtype),m=n.data.get(p.dataId).values;for(let e=0;e<f.length;++e){let t=e*c,n=m[t];for(let e=0;e<c;++e){let a=m[t+e];(Number.isNaN(a)||a<n)&&(n=a)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(p);let g=n.makeTensorInfo(h,p.dtype,f);if(i){let e=Yt({inputs:{x:g},backend:n,attrs:{shape:S.expandShapeToKeepDim(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}var KO={kernelName:ds,backendName:"cpu",kernelFunc:t9};function e9(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,mode:i}=a;tt(r,"mirrorPad");let o=s.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=s.map((e=>e[0])),u=s.map(((e,t)=>e[0]+r.shape[t])),p="reflect"===i?0:1,h=n.data.get(r.dataId).values,d=r.shape.length,c=y.computeStrides(r.shape),f=y.sizeFromShape(o),m=o.length,g=y.computeStrides(o),b=y.getTypedArrayFromDType(r.dtype,f);for(let e=0;e<f;e++){let t=y.indexToLoc(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-p:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+p);t=t.map(((e,t)=>e-l[t]));let n=y.locToIndex(t,d,c);b[e]=h[n]}return{dataId:n.write(b,o,r.dtype),shape:o,dtype:r.dtype}}var jO={kernelName:gs,backendName:"cpu",kernelFunc:e9},r9=Qt(((e,t)=>{let n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),n9=ie(Oa,r9),XO={kernelName:Oa,backendName:"cpu",kernelFunc:n9},ZO=_l(dh());function CT(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,i=r.shape.length,o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);let l=y.parseAxisParam([o],r.shape),u=wT({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),p=S.expandShapeToKeepDim(u.shape,l),h=Yt({inputs:{x:u},backend:n,attrs:{shape:p}}),d=Gh({inputs:{a:r,b:h},backend:n}),c=KN({inputs:{x:d},backend:n}),f=yl({inputs:{x:c},backend:n,attrs:{axis:l,keepDims:!1}}),m=Yt({inputs:{x:f},backend:n,attrs:{shape:p}}),g=Uh({inputs:{a:c,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}var YO={kernelName:Os,backendName:"cpu",kernelFunc:CT};function o9(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:i,normalized:o}=a;tt(r,"multinomial");let l=o?r:CT({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],p=l.shape[1],h=n.data.get(l.dataId).values,d=[u,s],c=y.makeZerosTypedArray(y.sizeFromShape(d),"int32");for(let e=0;e<u;++e){let t=e*p,n=new Float32Array(p-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];let a=ZO.alea(i.toString()),r=e*s;for(let e=0;e<s;++e){let t=a();c[r+e]=n.length;for(let a=0;a<n.length;a++)if(t<n[a]){c[r+e]=a;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(d,"int32",c)}var JO={kernelName:Ap,backendName:"cpu",kernelFunc:o9},s9=qr.nonMaxSuppressionV3Impl;function i9(e){let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=a;tt(r,"NonMaxSuppression");let u=n.data.get(r.dataId).values,p=n.data.get(s.dataId).values,{selectedIndices:h}=s9(u,p,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}var QO={kernelName:La,backendName:"cpu",kernelFunc:i9},a9=qr.nonMaxSuppressionV4Impl;function l9(e){let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=a;tt(r,"NonMaxSuppressionPadded");let p=n.data.get(r.dataId).values,h=n.data.get(s.dataId).values,{selectedIndices:d,validOutputs:c}=a9(p,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}var tP={kernelName:Ma,backendName:"cpu",kernelFunc:l9},u9=qr.nonMaxSuppressionV5Impl;function c9(e){let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=a;tt(r,"NonMaxSuppressionWithScore");let p=n.data.get(r.dataId).values,h=n.data.get(s.dataId).values,d=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=u9(p,h,d,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var eP={kernelName:za,backendName:"cpu",kernelFunc:c9};function p9(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:i,onValue:o,offValue:l}=a;tt(r,"oneHot");let u=y.sizeFromShape(r.shape),p=new Float32Array(u*i);p.fill(l);let h=n.data.get(r.dataId).values;for(let e=0;e<u;++e)h[e]>=0&&h[e]<i&&(p[e*i+h[e]]=o);return n.makeTensorInfo([...r.shape,i],s,p)}var rP={kernelName:ys,backendName:"cpu",kernelFunc:p9};function Kh(e){let{inputs:t,backend:n}=e,{x:a}=t;if("string"===a.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===a.dtype){let e=$o({inputs:{input:a},backend:n}),t=Kh({inputs:{x:e},backend:n}),r=Ji({inputs:{input:a},backend:n}),s=Kh({inputs:{x:r},backend:n}),i=Ir({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}return qh({backend:n,attrs:{shape:a.shape,value:0,dtype:a.dtype}})}var nP={kernelName:vi,backendName:"cpu",kernelFunc:Kh};function oP(e){let{inputs:t,backend:n}=e,{x:a}=t;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){let e=$o({inputs:{input:a},backend:n}),t=oP({inputs:{x:e},backend:n}),r=Ji({inputs:{input:a},backend:n}),s=Kh({inputs:{x:r},backend:n}),i=Ir({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}return qh({backend:n,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}var sP={kernelName:hi,backendName:"cpu",kernelFunc:oP};function IT(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return md({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{y.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),y.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=Eu({inputs:t.map((e=>{let t=md({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}var iP={kernelName:gi,backendName:"cpu",kernelFunc:IT};function m9(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:i}=a;tt(r,"pad");let o=s.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=s.map((e=>e[0])),u=n.data.get(r.dataId).values,p=y.sizeFromShape(r.shape),h=r.shape.length,d=y.computeStrides(r.shape),c=y.sizeFromShape(o),f=o.length,m=y.computeStrides(o),g=y.getTypedArrayFromDType(r.dtype,c);0!==i&&g.fill(i);for(let e=0;e<p;e++){let t=y.indexToLoc(e,h,d).map(((e,t)=>e+l[t]));g[y.locToIndex(t,f,m)]=u[e]}return{dataId:n.write(g,o,r.dtype),shape:o,dtype:r.dtype}}var xw={kernelName:bs,backendName:"cpu",kernelFunc:m9},f9=Qt(((e,t)=>Math.pow(e,t))),d9=ie(ws,f9),aP={kernelName:ws,backendName:"cpu",kernelFunc:d9};function h9(e){let{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=a,l=r.map((e=>n.data.get(e.dataId).values)),u=r.map((e=>e.shape)),p=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,[d,c,f]=ow(l,u,p,s.shape,s.dtype,h,i.shape,o),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,c);return m.concat([g])}var lP={kernelName:$p,backendName:"cpu",kernelFunc:h9};function g9(e){let{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:s}=t,i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,[u,p]=sw(i,a.shape,a.dtype,o,r.shape,l,s.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([p.length],a.dtype,p)]}var uP={kernelName:Dp,backendName:"cpu",kernelFunc:g9};function x9(e){let{inputs:t,backend:n,attrs:a}=e,{shape:r,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=a,u=n.data.get(r.dataId).values,p=n.data.get(s.dataId).values,h=n.data.get(i.dataId).values,d=o.map((e=>n.data.get(e.dataId).values)),c=o.map((e=>e.shape)),[f,m]=iw(u,r.shape,p,s.shape,s.dtype,h,i.shape,d,c,l);return n.makeTensorInfo(f,s.dtype,m)}var cP={kernelName:Rp,backendName:"cpu",kernelFunc:x9};function y9(e){let{backend:t,attrs:n}=e,{start:a,stop:r,dtype:s,step:i}=n,o=Dc(a,r,i,s);return t.makeTensorInfo([o.length],s,o)}var pP={kernelName:Ml,backendName:"cpu",kernelFunc:y9},b9=_t(vs,(e=>1/e)),mP={kernelName:vs,backendName:"cpu",kernelFunc:b9};function w9(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a;tt(r,"resizeBilinear");let l=y.computeStrides(r.shape),[u,p]=o,[h,d,c,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(y.sizeFromShape([h,u,p,f])),b=[s&&u>1?d-1:d,s&&p>1?c-1:c],x=[s&&u>1?u-1:u,s&&p>1?p-1:p],v=0,w=b[0]/x[0],k=b[1]/x[1];for(let e=0;e<h;e++)for(let t=0;t<u;t++){let n;n=i?w*(t+.5)-.5:w*t;let a=Math.max(0,Math.floor(n)),r=n-a,s=Math.min(d-1,Math.ceil(n)),o=e*l[0]+a*l[1],u=e*l[0]+s*l[1];for(let e=0;e<p;e++){let t;t=i?k*(e+.5)-.5:k*e;let n=Math.max(0,Math.floor(t)),a=t-n,s=Math.min(c-1,Math.ceil(t)),p=o+n*l[2],h=u+n*l[2],d=o+s*l[2],y=u+s*l[2];for(let e=0;e<f;e++){let t=m[p+e],n=m[h+e],s=t+(m[d+e]-t)*a,i=s+(n+(m[y+e]-n)*a-s)*r;g[v++]=i}}}return n.makeTensorInfo([h,u,p,f],"float32",g)}var fP={kernelName:Ts,backendName:"cpu",kernelFunc:w9};function C9(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a;tt([s,r],"resizeBilinearGrad");let o=y.computeStrides(r.shape),[l,u,p,h]=r.shape,[,d,c]=s.shape,f=new Float32Array(l*u*p*h),m=[i&&d>1?u-1:u,i&&c>1?p-1:p],g=[i&&d>1?d-1:d,i&&c>1?c-1:c],b=m[0]/g[0],x=m[1]/g[1],v=n.data.get(s.dataId).values,w=0;for(let e=0;e<l;e++){let t=e*o[0];for(let e=0;e<d;e++){let n=e*b,a=Math.floor(n),r=Math.min(Math.ceil(n),u-1),s=t+a*o[1],i=t+r*o[1],l=n-a,d=1-l;for(let e=0;e<c;e++){let t=e*x,n=Math.floor(t),a=Math.min(Math.ceil(t),p-1),r=t-n,u=1-r,c=s+n*o[2],m=s+a*o[2],g=i+n*o[2],y=i+a*o[2],b=d*u,k=d*r,I=l*u,S=l*r;for(let e=0;e<h;e++){let t=v[w++];f[c+e]+=t*b,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*S}}}}return n.makeTensorInfo([l,p,u,h],"float32",f)}var dP={kernelName:Pp,backendName:"cpu",kernelFunc:C9};function I9(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a;tt(r,"resizeNearestNeighbor");let l=y.computeStrides(r.shape),[u,p]=o,[h,d,c,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(h*u*p*f),b=[s&&u>1?d-1:d,s&&p>1?c-1:c],x=[s&&u>1?u-1:u,s&&p>1?p-1:p],v=b[0]/x[0],w=b[1]/x[1],k=0;for(let e=0;e<h;e++){let t=e*l[0];for(let e=0;e<u;e++){let n=i?v*(e+.5):v*e,a=Math.min(d-1,s?Math.round(n):Math.floor(n));i&&(a=Math.max(0,a));let r=t+a*l[1];for(let e=0;e<p;e++){let t=i?w*(e+.5):w*e,n=Math.min(c-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));let a=r+n*l[2];for(let e=0;e<f;e++){let t=m[a+e];g[k++]=t}}}}return n.makeTensorInfo([h,u,p,f],r.dtype,g)}var hP={kernelName:Ns,backendName:"cpu",kernelFunc:I9};function v9(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a;tt([s,r],"resizeNearestNeighborGrad");let o=y.computeStrides(r.shape),l=y.computeStrides(s.shape),[u,p,h,d]=r.shape,[,c,f]=s.shape,m=new Float32Array(u*p*h*d),g=n.data.get(s.dataId).values,b=[i&&c>1?p-1:p,i&&f>1?h-1:h],x=[i&&c>1?c-1:c,i&&f>1?f-1:f],v=b[0]/x[0],w=b[1]/x[1],k=1/v,I=1/w,S=2*Math.ceil(k)+2,N=2*Math.ceil(I)+2;for(let e=0;e<u;e++){let t=e*o[0];for(let e=0;e<p;e++){let n=t+e*o[1],a=Math.floor(e*k),r=Math.floor(a-S/2);for(let a=0;a<h;a++){let s=n+a*o[2],u=Math.floor(a*I),y=Math.floor(u-N/2);for(let n=0;n<d;n++){let o=0;for(let s=0;s<S;s++){let u=s+r;if(u<0||u>=c)continue;let d=t+u*l[1],m=u*v;if(e===Math.min(p-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<N;e++){let t=e+y;if(t<0||t>=f)continue;let r=d+t*l[2],s=t*w;a===Math.min(h-1,i?Math.round(s):Math.floor(s))&&(o+=g[r+n])}}m[s+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}var gP={kernelName:Op,backendName:"cpu",kernelFunc:v9};function S9(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a;tt(r,"reverse");let i=r.shape.length,o=y.parseAxisParam(s,r.shape);if(0===i)return Xr({inputs:{x:r},backend:n});let l=new pe(r.shape,r.dtype),u=n.bufferSync(r);for(let e=0;e<l.size;e++){let t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=r.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}var xP={kernelName:Es,backendName:"cpu",kernelFunc:S9},yP={kernelName:Xa,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:a}=e,{radians:r,fillValue:s,center:i}=t,o=n,l=y.getTypedArrayFromDType(a.dtype,y.sizeFromShape(a.shape)),[u,p,h,d]=a.shape,[c,f]=S.getImageCenter(i,p,h),m=Math.sin(r),g=Math.cos(r),b=o.data.get(a.dataId).values;for(let e=0;e<u;e++){let t=e*h*p*d;for(let e=0;e<p;e++){let n=e*(h*d);for(let a=0;a<h;a++){let r=a*d;for(let i=0;i<d;i++){let o=[u,e,a,i],y=o[2],x=o[1],v=(y-c)*g-(x-f)*m,w=(y-c)*m+(x-f)*g;v=Math.round(v+c),w=Math.round(w+f);let k=s;"number"!=typeof s&&(k=3===i?255:s[i]),v>=0&&v<h&&w>=0&&w<p&&(k=b[t+w*(h*d)+v*d+i]),l[t+n+r+i]=k}}}}return{dataId:o.write(l,a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},N9=_t(_s,(e=>{let t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),bP={kernelName:_s,backendName:"cpu",kernelFunc:N9};function T9(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:i}=a,{sliceRank:o,numUpdates:l,sliceSize:u,strides:p,outputSize:h}=S.calculateShapes(s,r,i),d=xl(n.bufferSync(r),n.bufferSync(s),i,h,u,l,o,p,0,!0);return n.makeTensorInfo(i,d.dtype,d.values)}var wP={kernelName:Ba,backendName:"cpu",kernelFunc:T9};function k9(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<t?n=r+1:a=r;return a}function E9(e,t){let n=0,a=e.length,r=0;for(;n<a;)r=Math.floor((n+a)/2),e[r]<=t?n=r+1:a=r;return a}function CP(e,t,n,a,r,s){let i=y.getArrayFromDType("int32",n*r);for(let o=0;o<n;++o){let n=e.slice(o*a,(o+1)*a),l=o*r;for(let e=0;e<r;++e)i[l+e]="left"===s?k9(n,t[e+l]):E9(n,t[e+l])}return i}function _9(e){let{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:s}=t,{side:i}=a,o=CP(n.data.get(r.dataId).values,n.data.get(s.dataId).values,r.shape[0],r.shape[1],s.shape[1],i);return n.makeTensorInfo(s.shape,"int32",o)}var IP={kernelName:Lp,backendName:"cpu",kernelFunc:_9};function A9(e){let{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t;tt([a,r,s],"select");let i=a.shape.length,o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,p=ar(r.dtype,s.dtype),h=y.makeZerosTypedArray(y.sizeFromShape(r.shape),p),d=0,c=0===i||i>1||1===r.shape.length?1:y.sizeFromShape(r.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<c;t++)1===o[e]?h[d++]=l[e]:h[d++]=u[e];return n.makeTensorInfo(r.shape,p,h)}var vP={kernelName:yi,backendName:"cpu",kernelFunc:A9},$9=S.SELU_SCALEALPHA,D9=S.SELU_SCALE,R9=_t(Va,(e=>e>=0?D9*e:$9*(Math.exp(e)-1))),SP={kernelName:Va,backendName:"cpu",kernelFunc:R9},F9=_t(Wa,(e=>e<0?-1:e>0?1:0)),NP={kernelName:Wa,backendName:"cpu",kernelFunc:F9},O9=_t($s,(e=>Math.sin(e))),TP={kernelName:$s,backendName:"cpu",kernelFunc:O9},P9=_t(Ga,(e=>Math.sinh(e))),kP={kernelName:Ga,backendName:"cpu",kernelFunc:P9},L9=1.1920928955078125e-7,EP=Math.log(L9)+2,M9=_t(Ua,(e=>{let t,n=e>-EP,a=e<EP,r=Math.exp(e);return t=a?r:n?e:Math.log(1+r),t})),_P={kernelName:Ua,backendName:"cpu",kernelFunc:M9};function z9(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:i}=a;tt([r],"spaceToBatchND");let o=y.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<r.shape.length;++e)l.push([0,0]);let u=xw.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),p=S.getReshaped(u.shape,s,o,!1),h=S.getPermuted(p.length,s.length,!1),d=S.getReshapedPermuted(u.shape,s,o,!1),c=Yt({inputs:{x:u},backend:n,attrs:{shape:p}}),f=Ve({inputs:{x:c},backend:n,attrs:{perm:h}}),m=Yt({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),m}var AP={kernelName:wi,backendName:"cpu",kernelFunc:z9};function B9(e){let{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==a.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${a.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n        ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);let o=n.data.get(a.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,p=n.data.get(i.dataId).values[0],[h,d,c,f,m]=aw(o,a.shape,a.dtype,l,r.dtype,u,p);return[n.makeTensorInfo(d,a.dtype,h),n.makeTensorInfo([d[0]],r.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}var $P={kernelName:zl,backendName:"cpu",kernelFunc:B9};function V9(e){let{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${a.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.data.get(r.dataId).values),o=n.data.get(a.dataId).values,l=Array.from(n.data.get(s.dataId).values),[u,p,h]=lw(o,a.shape,a.dtype,i,l);return[n.makeTensorInfo(p,a.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}var DP={kernelName:Ha,backendName:"cpu",kernelFunc:V9};function G9(e){let{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${r.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,[u,p]=cd(i,a.shape,a.dtype,o,l,!0);return n.makeTensorInfo(p,a.dtype,u)}var RP={kernelName:Bl,backendName:"cpu",kernelFunc:G9};function W9(e){let{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);if(r.shape[0]!==s.shape[0])throw new Error("segmentIds and indices should have same size.");let i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(s.dataId).values,[u,p]=cd(i,a.shape,a.dtype,o,l);return n.makeTensorInfo(p,a.dtype,u)}var FP={kernelName:Vl,backendName:"cpu",kernelFunc:W9};function U9(e){let t,{inputs:n,backend:a,attrs:r}=e,{sparseIndices:s,sparseValues:i,defaultValue:o}=n,{outputShape:l}=r,{sliceRank:u,numUpdates:p,sliceSize:h,strides:d,outputSize:c}=S.calculateShapes(i,s,l),f=!1,m=a.bufferSync(s);switch(i.dtype){case"bool":t=xl(m,a.bufferSync(i),l,c,h,p,u,d,Boolean(a.data.get(o.dataId).values[0]),f);break;case"float32":case"int32":t=xl(m,a.bufferSync(i),l,c,h,p,u,d,a.data.get(o.dataId).values[0],f);break;case"string":t=xl(m,a.bufferSync(i),l,c,h,p,u,d,y.decodeString(a.data.get(o.dataId).values[0]),f);break;default:throw new Error(`Unsupported type ${i.dtype}`)}return a.makeTensorInfo(l,t.dtype,t.values)}var OP={kernelName:Mp,backendName:"cpu",kernelFunc:U9};function H9(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=a,o=y.parseAxisParam(i,r.shape)[0],l=S.prepareSplitSize(r,s,o),u=new Array(r.shape.length).fill(0),p=r.shape.slice();return l.map((e=>{let t=[...p];t[o]=e;let a=Oo({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,a}))}var PP={kernelName:Ci,backendName:"cpu",kernelFunc:H9},LP={kernelName:Gl,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{let{x:n}=e,a=t;tt(n,"square");let r=a.data.get(n.dataId).values,s=new Float32Array(r.length);for(let e=0;e<r.length;++e){let t=r[e];s[e]=t*t}return{dataId:a.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},q9=_t(fo,((e,t)=>{let n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),MP={kernelName:fo,backendName:"cpu",kernelFunc:q9};function K9(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:p,newAxisMask:h,shrinkAxisMask:d}=a;tt(r,"stridedSlice");let c,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:b,isSimpleSlice:x,begin:v,end:w,strides:k}=Me.sliceInfo(r.shape,s,i,o,l,u,p,h,d);if(g)c=Yt({inputs:{x:r},backend:n,attrs:{shape:m}});else if(b||x){y.assert(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));let e=Me.computeOutShape(v,w,k),t=Oo({inputs:{x:r},backend:n,attrs:{begin:v,size:e}});c=Yt({inputs:{x:t},backend:n,attrs:{shape:m}}),n.disposeIntermediateTensorInfo(t)}else{let e=uw(f,n.bufferSync(r),k,v);c=n.makeTensorInfo(m,e.dtype,e.values)}return c}var zP={kernelName:qa,backendName:"cpu",kernelFunc:K9};function j9(e){let{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=a,{data:p,dataSplits:h}=t,d=n.data.get(p.dataId).values,c=n.data.get(h.dataId).values,[f,m]=Fc(d,c,r,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}var BP={kernelName:Wl,backendName:"cpu",kernelFunc:j9};function X9(e){let{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.data.get(s.dataId).values,l=n.data.get(i.dataId).values[0],[u,p,h]=Oc(o,l,r),d=p.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",p),n.makeTensorInfo([2],"int32",new Int32Array(h))]}var VP={kernelName:Ul,backendName:"cpu",kernelFunc:X9};function Y9(e){let{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let i=Pc(n.data.get(s.dataId).values,r);return n.makeTensorInfo(s.shape,"int32",i)}var GP={kernelName:Hl,backendName:"cpu",kernelFunc:Y9},Z9=_t(Ms,(e=>Math.tan(e))),WP={kernelName:Ms,backendName:"cpu",kernelFunc:Z9},J9=_t(zs,(e=>Math.tanh(e))),UP={kernelName:zs,backendName:"cpu",kernelFunc:J9};function Q9(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;tt(r,"tile");let i=cw(n.bufferSync(r),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}var HP={kernelName:to,backendName:"cpu",kernelFunc:Q9};function ttt(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:i}=a;tt(r,"topk");let o=n.data.get(r.dataId).values,[l,u]=pw(o,r.shape,r.dtype,s,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}var qP={kernelName:Ka,backendName:"cpu",kernelFunc:ttt};function ett(e){let{inputs:t,attrs:n,backend:a}=e,{image:r,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[p,h,d,c]=r.shape,[f,m]=null!=u?u:[h,d],g=[p,f,m,c],b=y.computeStrides(r.shape),x=b[0],v=b[1],w=b[2],k=y.computeStrides(g),I=k[0],S=k[1],N=k[2],T=y.getTypedArrayFromDType(r.dtype,y.sizeFromShape(g));T.fill(l);let C=a.data.get(r.dataId).values,E=a.data.get(s.dataId).values;for(let e=0;e<p;++e){let t=1===s.shape[0]?E:E.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let a=0;a<m;++a)for(let r=0;r<c;++r){let s,u=t[6]*a+t[7]*n+1;if(0===u)continue;let p=(t[0]*a+t[1]*n+t[2])/u,c=(t[3]*a+t[4]*n+t[5])/u,f=KP(p,d,o),m=KP(c,h,o);switch(i){case"nearest":s=itt(C,h,d,x,v,w,e,m,f,r,l);break;case"bilinear":s=att(C,h,d,x,v,w,e,m,f,r,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}T[e*I+n*S+a*N+r]=s}return a.makeTensorInfo(g,r.dtype,T)}return{dataId:a.write(T,g,r.dtype),shape:r.shape,dtype:r.dtype}}var jP={kernelName:ja,backendName:"cpu",kernelFunc:ett};function KP(e,t,n){switch(n){case"reflect":return rtt(e,t);case"wrap":return ntt(e,t);case"nearest":return stt(e,t);default:return ott(e,t)}}function rtt(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{let e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return y.clamp(0,n,t-1)}function ntt(e,t){let n=e;if(n<0)if(t<=1)n=0;else{let e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{let e=t-1;n-=t*Math.trunc(n/e)}return y.clamp(0,n,t-1)}function ott(e,t){return e}function stt(e,t){return y.clamp(0,e,t-1)}function jh(e,t,n,a,r,s,i,o,l,u,p){return 0<=o&&o<t&&0<=l&&l<n?e[i*a+o*r+l*s+u]:p}function itt(e,t,n,a,r,s,i,o,l,u,p){return jh(e,t,n,a,r,s,i,Math.round(o),Math.round(l),u,p)}function att(e,t,n,a,r,s,i,o,l,u,p){let h=Math.floor(o),d=Math.floor(l),c=h+1,f=d+1;return(c-o)*((f-l)*jh(e,t,n,a,r,s,i,h,d,u,p)+(l-d)*jh(e,t,n,a,r,s,i,h,f,u,p))+(o-h)*((f-l)*jh(e,t,n,a,r,s,i,c,d,u,p)+(l-d)*jh(e,t,n,a,r,s,i,c,f,u,p))}function ltt(e){let{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;tt(s,"unique");let i=a.data.get(s.dataId).values,{outputValues:o,outputShape:l,indices:u}=mw(i,r,s.shape,s.dtype);return[a.makeTensorInfo(l,s.dtype,o),a.makeTensorInfo([u.length],"int32",u)]}var XP={kernelName:zp,backendName:"cpu",kernelFunc:ltt};function utt(e){let{inputs:t,backend:n,attrs:a}=e,{value:r}=t,{axis:s}=a;s<0&&(s+=r.shape.length);let i=r.shape.length,o=r.shape[s],l=new Array(i-1),u=0;for(let e=0;e<i;e++)e!==s&&(l[u++]=r.shape[e]);let p=new Array(i).fill(0),h=r.shape.slice();h[s]=1;let d=new Array(o);for(let e=0;e<d.length;e++){p[s]=e;let t=Oo({inputs:{x:r},backend:n,attrs:{begin:p,size:h}});d[e]=Yt({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return d}var YP={kernelName:Ii,backendName:"cpu",kernelFunc:utt};function ctt(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:i}=a;tt(r,"unsortedSegmentSum");let o=[],l=[],u=r.shape.length-s.shape.length,p=s;for(let e=0;e<u;++e){let t=md({inputs:{input:p},backend:n,attrs:{dim:e+1}});p=t,l.push(t)}for(let e=0;e<i;++e){let t=y.createScalarValue(e,"int32"),a=n.makeTensorInfo([],"int32",t),s=HN({inputs:{a,b:p},backend:n}),i=Do({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),u=$c({inputs:{a:i,b:r},backend:n}),h=yl({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(a),l.push(s),l.push(i),l.push(u),l.push(h)}let h=IT({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}var ZP={kernelName:ql,backendName:"cpu",kernelFunc:ctt},ptt=[vF,FR,SF,NF,zR,TF,kF,EF,_F,AF,$F,DF,RF,FF,OF,LF,MF,zF,BF,IF,VF,GF,WF,UF,MR,BR,HF,OR,qF,jF,XF,YF,ZF,JF,QF,tO,eO,rO,nO,oO,sO,iO,aO,lO,uO,cO,pO,mO,fO,dO,gO,gF,xO,VR,yO,GR,bO,WR,wO,CO,IO,UR,vO,SO,NO,TO,kO,HR,qR,PR,EO,KF,_O,AO,$O,xF,KR,jR,DO,XR,RO,FO,OO,PO,LO,MO,zO,YR,BO,VO,GO,WO,HO,qO,KO,ZR,jO,XO,JO,JR,QR,QO,tP,eP,tF,rP,sP,iP,xw,aP,yF,rF,lP,uP,cP,pP,LR,Hh,mP,bF,wF,CF,fP,dP,hP,gP,xP,yP,bP,aF,wP,IP,vP,SP,uF,NP,TP,kP,cF,YO,_P,AP,$P,DP,RP,FP,OP,PP,mF,LP,fF,MP,zP,BP,VP,GP,dF,hO,WP,UP,HP,qP,jP,eF,XP,YP,ZP,nP];for(let e of ptt)zu(e);var gd={};Wt(gd,{assertNotComplex:()=>ri,bindCanvasToFramebuffer:()=>wtt,bindColorTextureToFramebuffer:()=>Jh,bindTextureToProgramUniformSampler:()=>MT,bindTextureUnit:()=>eL,bindVertexBufferToProgramAttribute:()=>vw,callAndCheck:()=>ht,canBeRepresented:()=>TT,createFragmentShader:()=>ET,createFramebuffer:()=>OT,createProgram:()=>_T,createStaticIndexBuffer:()=>DT,createStaticVertexBuffer:()=>$T,createTexture:()=>RT,createVertexShader:()=>kT,getBatchDim:()=>wl,getExtensionOrThrow:()=>fd,getFramebufferErrorMessage:()=>rL,getMaxTexturesInShader:()=>VT,getNumChannels:()=>ytt,getProgramUniformLocation:()=>LT,getProgramUniformLocationOrThrow:()=>PT,getRowsCols:()=>Cl,getShapeAs3D:()=>hd,getTextureShapeFromLogicalShape:()=>zT,getWebGLDisjointQueryTimerVersion:()=>GT,getWebGLErrorMessage:()=>tL,getWebGLMaxTextureSize:()=>BT,hasExtension:()=>Hn,isCapableOfRenderingToFloatTexture:()=>WT,isDownloadFloatTextureEnabled:()=>UT,isReshapeFree:()=>Au,isWebGLFenceEnabled:()=>HT,isWebGLVersionEnabled:()=>Nw,linkProgram:()=>AT,logShaderSourceAndInfoLog:()=>Iw,resetMaxTextureSize:()=>Ctt,resetMaxTexturesInShader:()=>Itt,unbindColorTextureFromFramebuffer:()=>Sw,unbindTextureUnit:()=>btt,validateFramebuffer:()=>dd,validateProgram:()=>Zh,validateTextureSize:()=>FT});var _u,Yr,Lr,Mc={},yw={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function vT(e,t){Mc[e]=t}function Un(e,t){if(!(e in Mc)||null!=t){let n=ftt(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;Mc[e]=n}let n=Mc[e];return null==n||n.isContextLost()?(delete Mc[e],Un(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),Mc[e])}function mtt(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function ftt(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");let n=null==t?mtt(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete Mc[e]}),!1),M().getBool("SOFTWARE_WEBGL_ENABLED")&&(yw.failIfMajorPerformanceCaveat=!1),1===e?n.getContext("webgl",yw)||n.getContext("experimental-webgl",yw):n.getContext("webgl2",yw)}function zc(e,t){return[t,e]}function JP(e,t){return e*t}function Xh(e){let t=y.sizeFromShape(e),n=Math.ceil(t/4);return y.sizeToSquarishShape(n)}function Qi(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function QP(e,t){let[n,a]=Qi(e,t);return n*a*4}function Yh(e,t){let n,a,r,s,i,o,l,u,p,h,d=e;return 2===M().getNumber("WEBGL_VERSION")?(n=d.R32F,a=d.R16F,r=d.RGBA16F,s=d.RGBA32F,i=d.RED,l=4,u=1,p=d.HALF_FLOAT,h=d.FLOAT,o=d.RGBA8):(n=e.RGBA,a=e.RGBA,r=e.RGBA,s=d.RGBA,i=e.RGBA,l=4,u=4,p=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT,o=e.RGBA),{internalFormatFloat:n,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:s,textureFormatFloat:i,downloadTextureFormat:o,downloadUnpackNumChannels:l,defaultNumChannels:u,textureTypeHalfFloat:p,textureTypeFloat:h}}function ht(e,t){let n=t();return M().getBool("DEBUG")&&dtt(e),n}function dtt(e){let t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+tL(e,t))}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(_u||(_u={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(Yr||(Yr={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(Lr||(Lr={}));var htt=5.96e-8,gtt=65504;function TT(e){return!!(M().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||htt<Math.abs(e)&&Math.abs(e)<gtt)}function tL(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}function fd(e,t){return bl(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}function kT(e,t){let n=bl(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(ht(e,(()=>e.shaderSource(n,t))),ht(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}function ET(e,t){let n=bl(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(ht(e,(()=>e.shaderSource(n,t))),ht(e,(()=>e.compileShader(n))),M().get("ENGINE_COMPILE_ONLY"))return n;if(!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw Iw(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}var ww,Cw,xtt=/ERROR: [0-9]+:([0-9]+):/g;function Iw(e,t){let n=xtt.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);let a=+n[1],r=e.split("\n"),s=r.length.toString().length+2,i=r.map(((e,t)=>y.rightPad((t+1).toString(),s)+e)),o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);let l=i.slice(0,a-1),u=i.slice(a-1,a),p=i.slice(a);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${y.rightPad(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(p.join("\n"))}function _T(e){return bl(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}function AT(e,t){if(ht(e,(()=>e.linkProgram(t))),!M().get("ENGINE_COMPILE_ONLY")&&!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}function Zh(e,t){if(ht(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function $T(e,t){let n=bl(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return ht(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),ht(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function DT(e,t){let n=bl(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return ht(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),ht(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}function ytt(){return 2===M().getNumber("WEBGL_VERSION")?1:4}function RT(e){return bl(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}function FT(e,t){let n=M().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}function OT(e){return bl(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}function vw(e,t,n,a,r,s,i){let o=e.getAttribLocation(t,n);return-1!==o&&(ht(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,a))),ht(e,(()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,s,i))),ht(e,(()=>e.enableVertexAttribArray(o))),!0)}function eL(e,t,n){nL(e,n),ht(e,(()=>e.activeTexture(e.TEXTURE0+n))),ht(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}function btt(e,t){nL(e,t),ht(e,(()=>e.activeTexture(e.TEXTURE0+t))),ht(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function PT(e,t,n){return bl(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}function LT(e,t,n){return e.getUniformLocation(t,n)}function MT(e,t,n,a){ht(e,(()=>eL(e,t,a))),ht(e,(()=>e.uniform1i(n,a)))}function wtt(e){ht(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),ht(e,(()=>e.viewport(0,0,e.canvas.width,e.canvas.height))),ht(e,(()=>e.scissor(0,0,e.canvas.width,e.canvas.height)))}function Jh(e,t,n){ht(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),ht(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function Sw(e,t){ht(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),ht(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function dd(e){let t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+rL(e,t))}function rL(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}function bl(e,t,n){let a=ht(e,(()=>t()));if(null==a)throw new Error(n);return a}function nL(e,t){let n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,a=t+e.TEXTURE0;if(a<e.TEXTURE0||a>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)}function wl(e,t=2){return y.sizeFromShape(e.slice(0,e.length-t))}function Cl(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function hd(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[wl(e),...Cl(e)]),t}function zT(e,t=!1){let n=M().getNumber("WEBGL_MAX_TEXTURE_SIZE"),a=M().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");a===1/0&&M().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(a=n/2),t&&(n*=2,a*=2,1===(e=e.map(((t,n)=>n>=e.length-2?y.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length&&(e=y.squeezeShape(e).newShape);let r=y.sizeFromShape(e),s=null;e.length<=1&&r<=n?s=[1,r]:2===e.length&&e[0]<=n&&e[1]<=n?s=e:3===e.length&&e[0]*e[1]<=n&&e[2]<=n?s=[e[0]*e[1],e[2]]:3===e.length&&e[0]<=n&&e[1]*e[2]<=n?s=[e[0],e[1]*e[2]]:4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n?s=[e[0]*e[1]*e[2],e[3]]:4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n&&(s=[e[0],e[1]*e[2]*e[3]]);let i=null!=s&&Math.max(...s)>a&&Math.min(...s)<=(t?2:1)&&Math.min(...s)>0;if(null==s||i)if(t){let t=wl(e),n=2,a=2;e.length&&([n,a]=Cl(e)),r=t*(n/2)*(a/2),s=y.sizeToSquarishShape(r).map((e=>2*e))}else s=y.sizeToSquarishShape(r);return s}function bw(e){return e%2==0}function Au(e,t){if(e=e.slice(-2),t=t.slice(-2),y.arraysEqual(e,t)||!e.length||!t.length||0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){let n=e.slice(-1)[0],a=t.slice(-1)[0];if(n===a||bw(n)&&bw(a)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&bw(e[0])&&bw(t[0])}function BT(e){if(null==ww){let t=Un(e);ww=t.getParameter(t.MAX_TEXTURE_SIZE)}return ww}function Ctt(){ww=null}function Itt(){Cw=null}function VT(e){if(null==Cw){let t=Un(e);Cw=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Cw)}function GT(e){if(0===e)return 0;let t,n=Un(e);return t=Hn(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:Hn(n,"EXT_disjoint_timer_query")?1:0,t}function Hn(e,t){return null!=e.getExtension(t)}function Nw(e){try{if(null!=Un(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function WT(e){if(0===e)return!1;let t=Un(e);if(1===e){if(!Hn(t,"OES_texture_float"))return!1}else if(!Hn(t,"EXT_color_buffer_float"))return!1;return NT(t)}function UT(e){if(0===e)return!1;let t=Un(e);if(1!==e){if(Hn(t,"EXT_color_buffer_float"))return NT(t);let e="EXT_color_buffer_half_float";if(Hn(t,e)){let n=t.getExtension(e);return vtt(t,n)}return!1}return!(!Hn(t,"OES_texture_float")||!Hn(t,"WEBGL_color_buffer_float"))&&NT(t)}function NT(e){let t=Yh(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);let a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);let r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(a),r}function vtt(e,t){let n=Yh(e,t),a=e.createTexture();e.bindTexture(e.TEXTURE_2D,a),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);let r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,a,0);let s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(a),e.deleteFramebuffer(r),s}function HT(e){return 2===e&&null!=Un(e).fenceSync}function ri(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&y.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}var Tt=M();function Ge(){let e,t,n,a,r,s,i,o,l,u;return 2===M().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",a="in",r="texture",s="outputColor",i="out vec4 outputColor;",o=M().getBool("WEBGL2_ISNAN_CUSTOM")?"\n      bool isnan_custom(float val) {\n        uint floatToUint = floatBitsToUint(val);\n        return (floatToUint & 0x7fffffffu) > 0x7f800000u;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ":"",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",a="varying",r="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:a,texture2D:r,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function ni(e,t,n="index"){let a=y.computeStrides(t);return a.map(((t,r)=>`int ${e[r]} = ${n} / ${t}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function Bc(e,t,n="index"){let a=y.computeStrides(t);return a.map(((t,r)=>`int ${e[r]} = ${n} / outShapeStrides[${r}]; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`)).join("")}function Stt(e,t){let n=e.length,a=e.map((e=>`${t}[${e}]`)),r=new Array(n-1);r[n-2]=a[n-1];for(let e=n-3;e>=0;--e)r[e]=`(${r[e+1]} * ${a[e+1]})`;return r}function oL(e,t,n="index"){let a=Stt(e.map(((e,t)=>t)),t);return a.map(((t,r)=>`int ${e[r]} = ${n} / ${a[r]}; ${r===a.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${a[r]}`:`index -= ${e[r]} * ${a[r]}`};`)).join("")}function xd(e){let t=y.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}function yd(){return"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n"}Tt.registerFlag("HAS_WEBGL",(()=>Tt.getNumber("WEBGL_VERSION")>0)),Tt.registerFlag("WEBGL_VERSION",(()=>Nw(2)?2:Nw(1)?1:0)),Tt.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),Tt.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===Tt.get("WEBGL_VERSION"))),Tt.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),Tt.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),Tt.registerFlag("WEBGL_PACK",(()=>Tt.getBool("HAS_WEBGL"))),Tt.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>Tt.getBool("WEBGL_PACK"))),Tt.registerFlag("WEBGL_PACK_CLIP",(()=>Tt.getBool("WEBGL_PACK"))),Tt.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>Tt.getBool("WEBGL_PACK"))),Tt.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>Tt.getBool("WEBGL_PACK"))),Tt.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>Tt.getBool("WEBGL_PACK"))),Tt.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>Tt.getBool("WEBGL_PACK"))),Tt.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>Tt.getBool("WEBGL_PACK"))),Tt.registerFlag("WEBGL_PACK_REDUCE",(()=>Tt.getBool("WEBGL_PACK"))),Tt.registerFlag("WEBGL_LAZILY_UNPACK",(()=>Tt.getBool("WEBGL_PACK"))),Tt.registerFlag("WEBGL_CONV_IM2COL",(()=>Tt.getBool("WEBGL_PACK"))),Tt.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>BT(Tt.getNumber("WEBGL_VERSION")))),Tt.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>VT(Tt.getNumber("WEBGL_VERSION")))),Tt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{let e=Tt.getNumber("WEBGL_VERSION");return 0===e?0:GT(e)})),Tt.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>Tt.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!Yl.isMobile())),Tt.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>WT(Tt.getNumber("WEBGL_VERSION")))),Tt.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!Tt.getBool("WEBGL_FORCE_F16_TEXTURES")&&Tt.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),Tt.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>UT(Tt.getNumber("WEBGL_VERSION")))),Tt.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>HT(Tt.getNumber("WEBGL_VERSION")))),Tt.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>Tt.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),Tt.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),Tt.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>Yl.isMobile()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),Tt.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),Tt.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),Tt.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),Tt.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128)),Tt.registerFlag("WEBGL_EXP_CONV",(()=>!1)),Tt.registerFlag("SOFTWARE_WEBGL_ENABLED",(()=>Tt.getBool("IS_TEST"))),Tt.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",(()=>1/0)),Tt.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",(()=>!1)),Tt.registerFlag("WEBGL2_ISNAN_CUSTOM",(()=>!1)),Tt.registerFlag("ENGINE_COMPILE_ONLY",(()=>!1));var Tw="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:sL}=S;function iL(e,t,n){let a=[];if(e.forEach((e=>{let t=y.sizeFromShape(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){let{uniformShape:t}=kw(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:a.push(`uniform int ${e.name}Shape;`);break;case 2:a.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:a.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:a.push(`uniform ivec4 ${e.name}Shape;`)}a.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:a.push("uniform int outShape;");break;case 2:a.push("uniform ivec2 outShape;"),a.push("uniform int outShapeStrides;");break;case 3:a.push("uniform ivec3 outShape;"),a.push("uniform ivec2 outShapeStrides;");break;case 4:a.push("uniform ivec4 outShape;"),a.push("uniform ivec3 outShapeStrides;")}a.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{a.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));let r,s,i=a.join("\n"),o=e.map((e=>Ntt(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),l=t.texShape,u=Ge(),p=Ett(u),h=$tt(u);return t.isPacked?(r=Ttt(t.logicalShape,l,n.enableShapeUniforms),s=Att(u)):(r=ktt(t.logicalShape,l,n.enableShapeUniforms),s=_tt(u)),n.packedInputs&&(h+=Ott),[h,p,s,i,r,o,n.userCode].join("\n")}function wd(e,t=!1){let n=e.shapeInfo.logicalShape;switch(n.length){case 0:return Ktt(e,t);case 1:return Xtt(e,t);case 2:return Ztt(e,t);case 3:return Qtt(e,t);case 4:return eet(e,t);case 5:return ret(e);case 6:return net(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function aL(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return qtt(e);case 1:return jtt(e,t);case 2:return Ytt(e,t);case 3:return Jtt(e,t);default:return tet(e,t)}}function Ntt(e,t,n=!1,a){let r="";r+=n?aL(e,a):wd(e,a);let s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(r+=n?oet(e,t):set(e,t)),r}function Ttt(e,t,n){switch(e.length){case 0:return lL();case 1:return Ptt(e,t,n);case 2:return Utt(e,t,n);case 3:return Mtt(e,t,n);default:return Btt(e,t,n)}}function ktt(e,t,n){switch(e.length){case 0:return lL();case 1:return Ltt(e,t,n);case 2:return Htt(e,t,n);case 3:return ztt(e,t,n);case 4:return Vtt(e,t,n);case 5:return Gtt(e,t);case 6:return Wtt(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}function Ett(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}function _tt(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}function Att(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}function $tt(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Dtt}\n    ${Rtt}\n    ${Ftt}\n  `}var Dtt="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Rtt="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ftt="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ott="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function lL(){return"\n    int getOutputCoords() {\n      return 0;\n    }\n  "}function Ptt(e,t,n){let a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===a[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${a[1]}.0);\n      }\n    `:1===a[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${a[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      return 2 * (resTexRC.x * ${a[1]} + resTexRC.y);\n    }\n  `}function Ltt(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}function Mtt(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";let a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}function ztt(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${Bc(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;let a=ni(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${a}\n      return ivec3(r, c, d);\n    }\n  `}function Btt(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";let a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2),i=s,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}function Vtt(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${Bc(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;let a=ni(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${a}\n      return ivec4(r, c, d, d2);\n    }\n  `}function Gtt(e,t){let n=ni(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}function Wtt(e,t){let n=ni(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}function Utt(e,t,n){let a=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(y.arraysEqual(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${a[0]}, ${a[1]}));\n      }\n    `;let r=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${a[0]}, ${a[1]}));\n\n      int index = resTexRC.x * ${a[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}function Htt(e,t,n){return y.arraysEqual(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}function Vc(e){return`offset${e}`}function qtt(e){let t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${Ge().texture2D}(${t}, halfCR);\n    }\n  `}function Ktt(e,t){let n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${a}() {return ${n};}`;let[r,s]=e.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${a}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let i=Vc(n);if(t)return`\n    float ${a}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;let[o,l]=e.shapeInfo.texShape;return`\n    float ${a}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}function jtt(e,t){let n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,s=Ge();if(t)return`\n    vec4 ${a}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;let i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${a}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}function Xtt(e,t){let n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${a}(int index) {\n        ${Cd(e)}\n      }\n    `;let r=e.shapeInfo.texShape,s=r[0],i=r[1];if(1===i&&1===s)return`\n      float ${a}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;let o=Vc(n);return 1===i?t?`\n      float ${a}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${a}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${a}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${a}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${a}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${a}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}function Ytt(e,t){let n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],l=Ge();if(null!=s&&y.arraysEqual(n,s))return t?`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n\n        return ${l.texture2D}(${a}, uv);\n      }\n    `:`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${a}, uv);\n      }\n    `;if(t)return`\n    vec4 ${r}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${a}, uv);\n    }\n  `;let u=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${a}, uv);\n    }\n  `}function Ztt(e,t){let n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape;if(null!=s&&y.arraysEqual(n,s)){if(t)return`\n      float ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `;let e=s[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `}let{newShape:i,keptDims:o}=y.squeezeShape(n),l=i;if(l.length<n.length){let n=["row","col"];return`\n      ${wd(Id(e,l),t)}\n      float ${r}(int row, int col) {\n        return ${r}(${vd(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${Cd(e)}\n      }\n    `;let u=s[0],p=s[1],h=Vc(a);return 1===p?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${a}TexShape[0]));\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `:1===u?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${a}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${a}TexShape[1]), 0.5);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${p}.0, 0.5);\n      return sampleTexture(${a}, uv);\n    }\n  `:t?`\n      float ${r}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${p}, index);\n    return sampleTexture(${a}, uv);\n  }\n`}function Jtt(e,t){let n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){let a=[1,2],s=["b","row","col"];return`\n        ${aL(Id(e,n.slice(1)),t)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${vd(s,a)});\n        }\n      `}let o=Ge();if(t)return`\n    vec4 ${r}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${a}TexShape[0]) / 2.0), ceil(float(${a}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${a}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${a}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${a}, uv);\n    }\n  `;let l=i[0],u=i[1],p=Math.ceil(n[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${p*Math.ceil(n[1]/2)}, ${p}, b, row, col);\n      return ${o.texture2D}(${a}, uv);\n    }\n  `}function Qtt(e,t){let n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=y.squeezeShape(n),u=o;if(u.length<n.length){let n=["row","col","depth"];return`\n        ${wd(Id(e,u),t)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${vd(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${Cd(e)}\n      }\n    `;let p=e.shapeInfo.texShape,h=p[0],d=p[1],c=e.shapeInfo.flatOffset;if(d===s&&null==c)return t?`\n      float ${r}(int row, int col, int depth) {\n        int stride1 = ${a}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${a}, uv);\n        }\n      `;if(d===i&&null==c)return t?`\n      float ${r}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${a}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${a}, uv);\n    }\n  `;let f=Vc(a);return t?`\n    float ${r}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${a}Shape[1] * ${a}Shape[2];\n      int stride1 = ${a}Shape[2];\n      int index = row * stride0 + col * stride1 + depth + ${f};\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index);\n      return sampleTexture(${a}, uv);\n    }\n    `:`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${a}, uv);\n      }\n  `}function tet(e,t){let n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=Ge();if(t)return`\n    vec4 ${a}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);\n    }\n  `;let s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],p=l[1],h=Math.ceil(s[i-1]/2),d=h*Math.ceil(s[i-2]/2),c="int b, int row, int col",f=`b * ${d} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)c=`int b${e}, `+c,d*=s[i-e-1],f=`b${e} * ${d} + `+f;return`\n    vec4 ${a}(${c}) {\n      int index = ${f};\n      int texR = index / ${p};\n      int texC = index - texR * ${p};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}, ${u});\n      return ${r.texture2D}(${n}, uv);\n    }\n  `}function eet(e,t){let n=e.shapeInfo.logicalShape,a=e.name,r="get"+a.charAt(0).toUpperCase()+a.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:l,keptDims:u}=y.squeezeShape(n);if(l.length<n.length){let n=["row","col","depth","depth2"];return`\n      ${wd(Id(e,l),t)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${vd(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${Cd(e)}\n      }\n    `;let p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],c=h[1],f=`int stride2 = ${a}Shape[3];`,m=`int stride1 = ${a}Shape[2] * stride2;`,g=`int stride0 = ${a}Shape[1] * stride1;`;if(c===o&&null==p)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${d}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;if(c===s&&null==p)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${a}Shape[1] * ${a}Shape[2], ${a}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${a}TexShape[1], ${a}TexShape[0]);\n        return sampleTexture(${a}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${d}.0);\n        return sampleTexture(${a}, uv);\n      }\n    `;let b=Vc(a);return t?`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${a}TexShape[0], ${a}TexShape[1], index + ${b});\n      return sampleTexture(${a}, uv);\n    }\n  `:`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${c}, index + ${b});\n      return sampleTexture(${a}, uv);\n    }\n  `}function ret(e){let t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],s=t[3]*r,i=t[2]*s,o=t[1]*i,{newShape:l,keptDims:u}=y.squeezeShape(t);if(l.length<t.length){let t=["row","col","depth","depth2","depth3"];return`\n      ${wd(Id(e,l))}\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        return ${a}(${vd(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${r})) +\n          depth3;\n        ${Cd(e)}\n      }\n    `;let p=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],c=h[1];return c===o&&null==p?`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${c}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:c===r&&null==p?`\n      float ${a}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${c}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${r} + depth3 + ${Vc(n)};\n      vec2 uv = uvFromFlat(${d}, ${c}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function net(e){let t=e.shapeInfo.logicalShape,n=e.name,a="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:s}=y.squeezeShape(t);if(r.length<t.length){let t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${wd(Id(e,r))}\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${a}(${vd(t,s)});\n      }\n    `}let i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,p=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${p}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${Cd(e)}\n      }\n    `;let h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,c=d[0],f=d[1];return f===p&&null==h?`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:f===i&&null==h?`\n      float ${a}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${c}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${p} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${Vc(n)};\n      vec2 uv = uvFromFlat(${c}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}function Cd(e){let t=e.name,n=y.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function oet(e,t){let n,a=e.name,r=a.charAt(0).toUpperCase()+a.slice(1),s="get"+r+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,l=sL(e.shapeInfo.logicalShape,t.logicalShape),u=Bt(o),p=o-i,h=["x","y","z","w","u","v"];n=0===i?"":o<2&&l.length>=1?"coords = 0;":l.map((e=>`coords.${h[e+p]} = 0;`)).join("\n");let d="";d=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+p]}`)).join(", ");let c="return outputValue;",f=1===y.sizeFromShape(e.shapeInfo.logicalShape),m=1===y.sizeFromShape(t.logicalShape);if(1!==i||f||m){if(f&&!m)c=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){let e=i-2,t=i-1;l.indexOf(e)>-1&&l.indexOf(t)>-1?c="return vec4(outputValue.x);":l.indexOf(e)>-1?c="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(t)>-1&&(c="return vec4(outputValue.xx, outputValue.zz);")}}else c="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${n}\n      vec4 outputValue = get${r}(${d});\n      ${c}\n    }\n  `}function set(e,t){let n=e.name,a=n.charAt(0).toUpperCase()+n.slice(1),r="get"+a+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&y.arraysEqual(i,s))return`\n      float ${r}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;let u,p=Bt(l),h=sL(e.shapeInfo.logicalShape,t.logicalShape),d=l-o,c=["x","y","z","w","u","v"];u=0===o?"":l<2&&h.length>=1?"coords = 0;":h.map((e=>`coords.${c[e+d]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${c[t+d]}`)).join(", "),`\n    float ${r}() {\n      ${p} coords = getOutputCoords();\n      ${u}\n      return get${a}(${f});\n    }\n  `}function Bt(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function kw(e,t,n){let{newShape:a,keptDims:r}=y.squeezeShape(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):a,l=!e&&s>1&&!y.arraysEqual(t,n)&&a.length<s||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:r}}function Id(e,t){let n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function vd(e,t){return t.map((t=>e[t])).join(", ")}function cL(e,t,n,a){let r=n.map(((e,n)=>{let a={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(a.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:a}})),s=r.map((e=>e.shapeInfo)),i={logicalShape:a.shape,texShape:a.texData.texShape,isUniform:!1,isPacked:a.texData.isPacked,flatOffset:null},o=iL(r,i,t),l=ET(e.gl,o),u=e.createProgram(l);return M().get("ENGINE_COMPILE_ONLY")?{program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:t,fragmentShader:l,source:o,webGLProgram:u,inShapeInfos:s,outShapeInfo:i},qT(e,t,u))}function qT(e,t,n){let a,r,s,i={},o={},l={},u=[],p=null,h=null;h=e.getUniformLocation(n,"NAN",!1),1===M().getNumber("WEBGL_VERSION")&&(p=e.getUniformLocation(n,"INFINITY",!1));let d=!1;for(let a=0;a<t.variableNames.length;a++){let r=t.variableNames[a];i[r]=e.getUniformLocation(n,r,d),i[`offset${r}`]=e.getUniformLocation(n,`offset${r}`,d),t.enableShapeUniforms&&(o[`${r}Shape`]=e.getUniformLocation(n,`${r}Shape`,d),l[`${r}TexShape`]=e.getUniformLocation(n,`${r}TexShape`,d))}return t.enableShapeUniforms&&(a=e.getUniformLocation(n,"outShape",d),s=e.getUniformLocation(n,"outShapeStrides",d),r=e.getUniformLocation(n,"outTexShape",d)),t.customUniforms&&t.customUniforms.forEach(((t,a)=>{u[a]=e.getUniformLocation(n,t.name,d)})),{uniformLocations:i,customUniformLocations:u,infLoc:p,nanLoc:h,inShapesLocations:o,inTexShapesLocations:l,outShapeLocation:a,outShapeStridesLocation:s,outTexShapeLocation:r}}function uL(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{let a=e.logicalShape,r=t[n],s=r.shape;if(!y.arraysEqual(a,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${a} and ${s} must match`);if(e.isUniform&&r.isUniform)return;let i=e.texShape,o=r.isUniform?null:r.texData.texShape;if(!y.arraysEqual(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function pL(e,t,n,a,r){t.program.enableShapeUniforms||(uL(t.inShapeInfos,n),uL([t.outShapeInfo],[a]));let s=a.texData.texture,i=a.texData.texShape;a.texData.isPacked?e.setOutputPackedMatrixTexture(s.texture,i[0],i[1]):e.setOutputMatrixTexture(s.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===M().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,a)=>{let r=t.program.variableNames[a],s=t.uniformLocations[r],i=t.uniformLocations[`offset${r}`],o=t.inShapesLocations[`${r}Shape`],l=t.inTexShapesLocations[`${r}TexShape`];if(o){let{uniformShape:a}=kw(t.program.packedInputs,n.shape,n.texData.texShape);switch(a.length){case 1:e.gl.uniform1iv(o,new Int32Array(a));break;case 2:e.gl.uniform2iv(o,new Int32Array(a));break;case 3:e.gl.uniform3iv(o,new Int32Array(a));break;case 4:e.gl.uniform4iv(o,new Int32Array(a))}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=s){if(n.isUniform){if(y.sizeFromShape(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}return}null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,s,a)}}));let o=t.outShapeLocation;if(o)switch(a.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(a.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(a.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(a.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(a.shape))}if(t.outShapeStridesLocation){let n=y.computeStrides(a.shape);switch(a.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,a.texData.texShape[0],a.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach(((n,a)=>{let s=t.customUniformLocations[a],i=r[a];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}})),e.executeProgram()}function mL(e,t,n){let a="";t.concat(n).forEach((t=>{let r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){let s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=kw(e.packedInputs,t.shape,s),u="",p="",h="";if(1===o.length&&e.packedInputs){let e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){let e=y.computeStrides(o);h=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else p=`${o[0]>1}_${o[1]>1}`;let d=t.shape.length,c=2===o.length&&y.arraysEqual(t.shape,s),f=1===y.sizeFromShape(t.shape),m=S.getBroadcastDims(t.shape,n.shape),g=!e.packedInputs&&d===n.shape.length&&y.arraysEqual(s,n.texData.texShape),b=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;a+=`${d}_${g}_${i?l:""}_${o.length}_${f}_${m}_${c}_${u}_${p}_${h}_${b}_${r}`}else{let e=t.isUniform?"uniform":t.texData.texShape;a+=`${t.shape}_${e}_${r}`}}));let r=e.userCode,s=e.constructor.name;return s+="_"+a+"_"+r+`${M().getNumber("WEBGL_VERSION")}`,s}function we(e){return M().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}var Ew=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=_u.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Ge();this.outputShape=e,this.enableShapeUniforms=we(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?Bc(["r","c","d"],e):ni(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}},_w=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=_u.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];let t=Ge();this.outputShape=e,this.enableShapeUniforms=we(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?Bc(["r","c","d"],e):ni(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}},Aw=class{constructor(e){this.variableNames=["A"],this.outTexUsage=Yr.DOWNLOAD;let t=Ge();this.outputShape=e,this.userCode=`\n      ${Tw}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}},$w=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=Yr.DOWNLOAD;let t=Ge();this.outputShape=e,this.userCode=`\n      ${Tw}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}},uet={R:0,G:1,B:2,A:3},Qh=class{constructor(e,t=!1,n="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];let a=Ge();this.outputShape=e,this.enableShapeUniforms=we(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let s="";for(let e=0;e<n.length;e++){let t=n[e];s+=`\n          if(offset == ${e}) {\n            result = values[${uet[t]}];\n          }`}this.userCode=`\n      ${this.enableShapeUniforms?yd():xd(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int flatIndex = getFlatIndex(coords);\n        float result = 0.;\n        int offset = imod(flatIndex, ${n.length});\n\n        flatIndex = idiv(flatIndex, ${n.length}, 1.);\n\n        int r = flatIndex / texShape[1];\n        if (r < texShape[0]) {\n          int c = imod(flatIndex, texShape[1]);\n          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n          vec4 values = ${a.texture2D}(A, uv);\n          ${s}\n        }\n        ${a.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}},Dw=class{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];let n=Ge();this.outputShape=e,this.enableShapeUniforms=we(this.outputShape.length);let a="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let r=0;r<=1;r++){let s=2*t+r;a+=`\n          localCoords = coords;\n          if(localCoords[2] + ${r} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${r};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?yd():xd(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${a}\n\n          ${n.output} = ${r};\n        }\n    `}},uk={};function KT(e){let t=Ge();return kT(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}function jT(e){return $T(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function XT(e){return DT(e,new Uint16Array([0,1,2,2,1,3]))}function tg(e,t,n,a,r,s){FT(t,n);let i=RT(e),o=e.TEXTURE_2D;return ht(e,(()=>e.bindTexture(o,i))),ht(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),ht(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),ht(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),ht(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===M().getNumber("WEBGL_VERSION")?ht(e,(()=>e.texImage2D(o,0,a,t,n,0,r,s,null))):ht(e,(()=>e.texStorage2D(o,1,a,t,n))),ht(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function Rw(e){return e.internalFormatFloat}function YT(e,t,n,a){let[r,s]=zc(t,n);return tg(e,r,s,Rw(a),a.textureFormatFloat,e.FLOAT)}function Fw(e){return e.internalFormatHalfFloat}function ZT(e,t,n,a){let[r,s]=zc(t,n);return tg(e,r,s,Fw(a),a.textureFormatFloat,a.textureTypeHalfFloat)}function Ow(e){return e.downloadTextureFormat}function JT(e,t,n,a){let[r,s]=zc(t,n);return tg(e,r,s,Ow(a),e.RGBA,e.UNSIGNED_BYTE)}function Pw(e){return e.internalFormatPackedFloat}function QT(e,t,n,a){let[r,s]=Qi(t,n);return tg(e,r,s,Pw(a),e.RGBA,e.FLOAT)}function Lw(e){return e.internalFormatPackedHalfFloat}function tk(e,t,n,a){let[r,s]=Qi(t,n);return tg(e,r,s,Lw(a),e.RGBA,a.textureTypeHalfFloat)}function ek(e,t,n){return ht(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),vw(e,t,"clipSpacePos",n,3,20,0)&&vw(e,t,"uv",n,2,20,12)}function rk(e,t,n,a,r,s){let i,o,l;ht(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(i=new Uint8Array(n*a*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*a*4),o=e.FLOAT,l=s.internalFormatPackedFloat),i.set(r),2===M().getNumber("WEBGL_VERSION")?ht(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,a,e.RGBA,o,i))):ht(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,a,0,e.RGBA,o,i))),ht(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function nk(e,t,n){ht(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===M().getNumber("WEBGL_VERSION")?ht(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):ht(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===M().getNumber("WEBGL_VERSION")?ht(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):ht(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),ht(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}function ok(e,t,n,a){let r=e.createBuffer();ht(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));let s=16*t*n;return ht(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,s,e.STREAM_READ))),ht(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),ht(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}function sk(e,t,n){let a=e,r=new Float32Array(n);return a.bindBuffer(a.PIXEL_PACK_BUFFER,t),a.getBufferSubData(a.PIXEL_PACK_BUFFER,0,r),a.bindBuffer(a.PIXEL_PACK_BUFFER,null),r}function ik(e,t,n,a){let[r,s]=zc(t,n),i=new Uint8Array(JP(t*n,4));return ht(e,(()=>e.readPixels(0,0,r,s,a.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}function ak(e,t,n,a,r,s,i,o){let l=e,u=new Float32Array(QP(s,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}function lk(e,t,n){let a=new Float32Array(t*n*4);return ht(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,a))),a}Wt(uk,{bindVertexProgramAttributeStreams:()=>ek,createBufferFromOutputTexture:()=>ok,createFloat16MatrixTexture:()=>ZT,createFloat16PackedMatrixTexture:()=>tk,createFloat32MatrixTexture:()=>YT,createIndexBuffer:()=>XT,createPackedMatrixTexture:()=>QT,createUnsignedBytesMatrixTexture:()=>JT,createVertexBuffer:()=>jT,createVertexShader:()=>KT,downloadByteEncodedFloatMatrixFromOutputTexture:()=>ik,downloadFloat32MatrixFromBuffer:()=>sk,downloadMatrixFromPackedOutputTexture:()=>lk,downloadPackedMatrixFromBuffer:()=>ak,getInternalFormatForFloat16MatrixTexture:()=>Fw,getInternalFormatForFloat16PackedMatrixTexture:()=>Lw,getInternalFormatForFloat32MatrixTexture:()=>Rw,getInternalFormatForPackedMatrixTexture:()=>Pw,getInternalFormatForUnsignedBytesMatrixTexture:()=>Ow,uploadDenseMatrixToTexture:()=>rk,uploadPixelDataToTexture:()=>nk});var Gc=class{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];let t=M().getNumber("WEBGL_VERSION");if(null!=e?(this.gl=e,vT(t,e)):this.gl=Un(t),e=this.gl,2===M().getNumber("WEBGL_VERSION")){let t=e;this.createVertexArray=()=>ht(t,(()=>t.createVertexArray())),this.bindVertexArray=e=>ht(t,(()=>t.bindVertexArray(e))),this.deleteVertexArray=e=>ht(t,(()=>t.deleteVertexArray(e))),this.getVertexArray=()=>ht(t,(()=>t.getParameter(t.VERTEX_ARRAY_BINDING)))}else if(null!=e){let t=e.getExtension("OES_vertex_array_object");if(null==t)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>ht(e,(()=>t.createVertexArrayOES())),this.bindVertexArray=n=>ht(e,(()=>t.bindVertexArrayOES(n))),this.deleteVertexArray=n=>ht(e,(()=>t.deleteVertexArrayOES(n))),this.getVertexArray=()=>ht(e,(()=>e.getParameter(t.VERTEX_ARRAY_BINDING_OES)))}let n="WEBGL_color_buffer_float",a="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),1===M().getNumber("WEBGL_VERSION")){let e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=fd(this.gl,e),Hn(this.gl,t))this.textureHalfFloatExtension=fd(this.gl,t);else if(M().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),Hn(this.gl,a))this.colorBufferHalfFloatExtension=fd(this.gl,a);else if(M().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",Hn(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!Hn(this.gl,a))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(a)}this.vertexBuffer=jT(this.gl),this.indexBuffer=XT(this.gl),this.framebuffer=OT(this.gl),this.textureConfig=Yh(this.gl,this.textureHalfFloatExtension)}get debug(){return M().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");let e=this.gl;ht(e,(()=>e.finish())),ht(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),ht(e,(()=>e.deleteFramebuffer(this.framebuffer))),ht(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),ht(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),ht(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),YT(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),ZT(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),JT(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),nk(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,a){this.throwIfDisposed(),rk(this.gl,e,t,n,a,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),tk(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),QT(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Sw(this.gl,this.framebuffer),this.outputTexture=null),ht(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>ik(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,a,r,s){return ak(this.gl,e,t,n,a,r,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return sk(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);let a=ok(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),a}createAndWaitForFence(){let e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(M().getBool("WEBGL_FENCE_API_ENABLED")){let a=e,r=a.fenceSync(a.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{let e=a.clientWaitSync(r,0,0);return e===a.ALREADY_SIGNALED||e===a.CONDITION_SATISFIED},t=r}else M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>lk(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();let t=this.gl;null==this.vertexShader&&(this.vertexShader=KT(t));let n,a=_T(t);return ht(t,(()=>t.attachShader(a,this.vertexShader))),ht(t,(()=>t.attachShader(a,e))),AT(t,a),n=Object.assign(a,{vao:this.createVertexArray()}),this.bindVertexArray(n.vao),ht(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer))),console.assert(ek(t,n,this.vertexBuffer),"gpgpu_util.bindVertexProgramAttributeStreams not fully successful."),this.debug&&Zh(t,n),this.setProgram(n),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&(ht(this.gl,(()=>this.gl.deleteProgram(e))),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&(this.bindVertexArray(this.program.vao),this.debug&&Zh(this.gl,this.program)),ht(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?PT(this.gl,e,t):LT(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),ht(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),MT(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();let[a,r]=Qi(t,n);this.setOutputMatrixTextureDriver(e,a,r)}setOutputMatrixWriteRegion(e,t,n,a){this.setOutputMatrixWriteRegionDriver(n,e,a,t)}setOutputPackedMatrixWriteRegion(e,t,n,a){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&Zh(this.gl,this.program),dd(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();let e=this.gl;if(this.debug){let e=this.getVertexArray();console.assert(e===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}ht(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),ht(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=fd(this.gl,2===M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}let e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){let e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}let e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await y.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){let t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{let t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){let t=this.gl,n=this.getQueryTimerExtensionWebGL2(),a=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),a&&!this.disjoint}{let t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){let e=cet(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){let{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let n;"setTimeoutCustom"in M().platform&&(n=M().platform.setTimeoutCustom.bind(M().platform)),y.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)),(()=>0),null,n)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Jh(this.gl,e,this.framebuffer),this.debug&&dd(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(Jh(this.gl,this.outputTexture,this.framebuffer),this.debug&&dd(this.gl)):Sw(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);let n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();let a=this.gl;Jh(a,e,this.framebuffer),this.debug&&dd(a),this.outputTexture=e,ht(a,(()=>a.viewport(0,0,t,n))),ht(a,(()=>a.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,a){this.throwIfDisposed(),ht(this.gl,(()=>this.gl.scissor(e,t,n,a)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}};function cet(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}var{addImpl:fL,bincountImpl:Mw,bincountReduceImpl:dL,castImpl:hL,ceilImpl:gL,concatImpl:xL,equalImpl:yL,expImpl:bL,expm1Impl:wL,floorImpl:CL,gatherNdImpl:IL,gatherV2Impl:vL,greaterImpl:SL,greaterEqualImpl:NL,lessImpl:TL,lessEqualImpl:kL,linSpaceImpl:EL,logImpl:_L,maxImpl:AL,maximumImpl:$L,minimumImpl:DL,multiplyImpl:RL,negImpl:FL,notEqualImpl:OL,prodImpl:PL,raggedGatherImpl:LL,raggedRangeImpl:ML,raggedTensorToTensorImpl:zL,rangeImpl:BL,rsqrtImpl:VL,scatterImpl:GL,sigmoidImpl:WL,simpleAbsImpl:zw,sliceImpl:UL,sparseFillEmptyRowsImpl:HL,sparseReshapeImpl:qL,sparseSegmentReductionImpl:Bw,sqrtImpl:KL,stridedSliceImpl:jL,stringNGramsImpl:XL,stringSplitImpl:YL,stringToHashBucketFastImpl:ZL,subImpl:JL,tileImpl:QL,topKImpl:tM,transposeImpl:Wc,uniqueImpl:eM}=fw;function ck(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function er(e,t){return 1===t?[e]:ck(e,t)}function rM(e,t){if(1===e)return"rc";let n="";for(let a=0;a<e;a++)n+=t[a],a<e-1&&(n+=",");return n}var Vw=class{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=we(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{let e=er("rc",this.rank),t=Bt(this.rank),n=this.getOutOfBoundsCondition(e),a=this.getSetup(e),r=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${r}));\n          }\n        }\n      `}}getSourceCoordsArr(e){let t=[];for(let n=0;n<=1;n++)for(let a=0;a<=1;a++){let r=`${0===n?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let t=2;t<this.rank;t++)r=`${e[e.length-1-t]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";let t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],a=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${a};\n    `}getOutput(e){let t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}},Sd=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=we(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}this.userCode=`\n      ${pet(t,this.enableShapeUniforms)}\n      ${this.enableShapeUniforms?yd():xd(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}};function pet(e,t){return`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${t?oL(["r","c","d"],"inputShape"):ni(["r","c","d"],e)}\n      return ivec3(r, c, d);\n    }\n  `}var Gw=class{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){let a=oM(t,n),r=sM(e,a,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);let s,i=nM(e,a,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=i,this.log();let e=this.freeTextures[r].shift();return this.usedTextures[r].push(e),e}return a===Lr.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):a===Lr.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):a===Lr.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):a===Lr.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):a===Lr.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(s),this.numUsedTextures++,this._numBytesAllocated+=i,this.log(),s}releaseTexture(e,t,n,a){if(null==this.freeTextures)return;let r=oM(n,a),s=sM(t,r,a);s in this.freeTextures||(this.freeTextures[s]=[]);let i=nM(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,a),o=M().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;let l=this.usedTextures[s],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;let e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);let t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(let e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(let e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}};function met(e,t){let n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}function nM(e,t,n,a,r){let s,i=fet(t,a);if(r){let[t,n]=Qi(e[0],e[1]);s=t*n}else{let[t,n]=zc(e[0],e[1]);s=t*n}return s*met(n,i)}function fet(e,t){switch(e){case Lr.PACKED_2X2_FLOAT32:return Pw(t);case Lr.PACKED_2X2_FLOAT16:return Lw(t);case Lr.UNPACKED_FLOAT32:return Rw(t);case Lr.UNPACKED_FLOAT16:return Fw(t);case Lr.PACKED_4X1_UNSIGNED_BYTE:return Ow(t);default:throw new Error(`Unknown physical texture type ${e}`)}}function det(e){return M().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?Lr.PACKED_2X2_FLOAT32:Lr.UNPACKED_FLOAT32:e?Lr.PACKED_2X2_FLOAT16:Lr.UNPACKED_FLOAT16}function oM(e,t){if(e===Yr.UPLOAD)return Lr.PACKED_2X2_FLOAT32;if(e===Yr.RENDER||null==e)return det(t);if(e===Yr.DOWNLOAD||e===Yr.PIXELS)return Lr.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function sM(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}var Mr=class{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=we(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},hr="if (isnan(x)) return x;",iM="return x;",pk="return abs(x);",aM="return (x >= 0.0) ? x : (exp(x) - 1.0);",lM=hr+"\n  return (x < 0.0) ? 0.0 : x;\n",uM=hr+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",ta="return x;",cM="return 1.0 / (1.0 + exp(-1.0 * x));",mM="return x;",fM="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",dM="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",hM="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",gM="return 1.0 / (1.0 + exp(-1.0 * x));",An=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=we(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}},Ww=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=we(this.outputShape.length);let t=e.length,n=er("rc",t),a=Bt(t),r=rM(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${a} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}},get=qr.whereImpl,xet=1e-7,yet=1e-4,Uw={};function bet(e){return e in Uw||(Uw[e]={}),Uw[e]}var wet=M().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),Cet=600;function Iet(){return null==M().global.screen?1024:M().global.screen.height*M().global.screen.width*window.devicePixelRatio*Cet/1024/1024}var $u=class extends Bo{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!M().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof Gc)t=e;else{let n=Un(M().getNumber("WEBGL_VERSION"),e);t=new Gc(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{let e=Un(M().getNumber("WEBGL_VERSION"));t=new Gc(e),this.binaryCache=bet(M().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new Gw(this.gpgpu),this.numMBBeforeWarning=Iet(),this.texData=new aa(this,Mn())}nextDataId(){return $u.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,n,a,r,s){let i=this.makeTensorInfo(t,n),o=this.texData.get(i.dataId);o.isPacked=!1,o.texture={texture:e,texShape:[a,r]},o.texShape=[a,r];let l=hd(t),u=new Qh(l,!1,s),p=this.runWebGLProgram(u,[i],n,[[a,r]]);return p.shape=t,o.texture=null,this.disposeIntermediateTensorInfo(i),p.dataId}write(e,t,n){if((M().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||M().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");let a={id:this.nextDataId()};return this.texData.set(a,{shape:t,dtype:n,values:e,usage:Yr.UPLOAD,refCount:1}),a}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,a,r){if(M().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===a)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:a,values:t,usage:Yr.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){let t=this.texData.get(e),{values:n,dtype:a,complexTensorInfos:r,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new An(i,ta):new Mr(i,ta);let n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:a}],a),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===a)return n;let l,u,p=null!=this.activeTimers;if(p&&(l=y.now()),"complex64"===a){let e=this.readSync(r.real.dataId),t=this.readSync(r.imag.dataId);u=S.mergeRealAndImagArrays(e,t)}else u=this.getValuesFromTexture(e);return p&&(this.downloadWaitMs+=y.now()-l),this.convertAndCacheOnCPU(e,u)}async read(e){if(this.pendingRead.has(e)){let t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}let t=this.texData.get(e),{values:n,shape:a,slice:r,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=r){let t;t=o?new An(a,ta):new Mr(a,ta);let n=this.runWebGLProgram(t,[{dataId:e,shape:a,dtype:s}],s),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(M().getBool("DEBUG")&&!M().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===M().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,p=null;if("complex64"!==s&&M().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);let t=this.texData.get(l.dataId);p=this.gpgpu.createBufferFromTexture(t.texture.texture,...Xh(a))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){let e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),t=e[0],n=e[1];u=S.mergeRealAndImagArrays(t,n)}else if(null==p)u=this.getValuesFromTexture(e);else{let e=y.sizeFromShape(a);u=this.gpgpu.downloadFloat32MatrixFromBuffer(p,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=p){let e=this.gpgpu.gl;ht(e,(()=>e.deleteBuffer(p)))}let h=this.convertAndCacheOnCPU(e,u),d=this.pendingRead.get(e);return this.pendingRead.delete(e),d.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Mn().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){let n=this.texData.get(e),{values:a,shape:r,slice:s,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=s){let n;n=o?new An(r,ta):new Mr(r,ta);let a=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:i}],i),s=this.readToGPU(a,t);return this.disposeIntermediateTensorInfo(a),s}if(null==l)throw null!=a?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");let u=this.decode(e,t.customTexShape),p=Mn().makeTensorFromTensorInfo(u),h=this.texData.get(u.dataId);return Object.assign({tensorRef:p},h.texture)}bufferSync(e){let t=this.readSync(e.dataId);if("string"===e.dtype)try{let n=t.map((e=>y.decodeString(e)));return wt(e.shape,e.dtype,n)}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return wt(e.shape,e.dtype,t)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){let n=e[t];if(!TT(n))throw M().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${n} cannot be represented on this device.`)}}getValuesFromTexture(e){let{shape:t,dtype:n,isPacked:a}=this.texData.get(e),r=y.sizeFromShape(t);if(M().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){let n=this.decode(e),a=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(a.texture.texture,...Xh(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),s}let s=M().getBool("WEBGL_PACK")&&!0===a,i=s?hd(t):t,o=s?new $w(i):new Aw(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),p}timerAvailable(){return M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){let t=this.activeTimers,n=[],a=!1;null==this.programTimersStack?(this.programTimersStack=n,a=!0):this.activeTimers.push(n),this.activeTimers=n,e();let r=y.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),s=y.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,a&&(this.programTimersStack=null);let i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){let e=await Promise.all(r);i.kernelMs=y.sum(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:s[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:y.now(),endMs:null}}endTimer(e){return M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=y.now(),e)}async getQueryTime(e){if(M().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);let t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);let{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){let{texture:t,dtype:n,texShape:a,usage:r,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(a,n),this.textureManager.releaseTexture(t,a,r,s)));let u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=wet){return M().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&y.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){S.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");let t=e.dataSync();return get(e.shape,t)}packedUnaryOp(e,t,n){let a=new An(e.shape,t),r=this.compileAndRun(a,[e],n);return Mn().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){let t=zw(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(M().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,pk,e.dtype);let t=new Mr(e.shape,pk),n=this.compileAndRun(t,[e]);return Mn().makeTensorFromTensorInfo(n)}makeTensorInfo(e,t,n){let a;if("string"===t&&null!=n&&n.length>0&&y.isString(n[0])){let r=n.map((e=>y.encodeString(e)));a=this.write(r,e,t)}else a=this.write(n,e,t);return this.texData.get(a).usage=null,{dataId:a,shape:e,dtype:t}}makeOutput(e,t,n){return Mn().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,n),this)}unpackTensor(e){let t=new Ww(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){let t=new Vw(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){let n=[wl(e.shape),...Cl(e.shape)],a={dtype:e.dtype,shape:n,dataId:e.dataId},r=[wl(t),...Cl(t)],s=new Sd(r,n),i=[n],o=this.runWebGLProgram(s,[a],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){let n=this.texData.get(e),{isPacked:a,shape:r,dtype:s}=n;if(null!=t){let e=y.sizeFromShape(r),n=t[0]*t[1]*4;y.assert(e<=n,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."))}let i,o=hd(r);i=a?new _w(o):new Ew(o);let l=[null!=t?t:Xh(o)];return{dtype:s,shape:r,dataId:this.runWebGLProgram(i,[{shape:o,dtype:s,dataId:e}],s,l,!0,t).dataId}}runWebGLProgram(e,t,n,a,r=!1,s){let i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===_u.DENSE){let t=null!=s?s:Xh(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===y.sizeFromShape(i.shape))return o.values=y.getTypedArrayFromDType(i.dtype,0),i;let l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&y.sizeFromShape(t.shape)<=M().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!Au(n.shape,t.shape)){let e=t,a=t.shape;t.shape=n.shape,t=this.packedReshape(t,a),l.push(t),n=this.texData.get(t.dataId),e.shape=a}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);let p,h={shape:i.shape,texData:o,isUniform:!1},d=mL(e,u,h),c=this.getAndSaveBinary(d,(()=>cL(this.gpgpu,e,u,h))),f=null!=this.activeTimers;f&&(p=this.startTimer()),M().get("ENGINE_COMPILE_ONLY")||pL(this.gpgpu,c,u,h,a),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),f&&(p=this.endTimer(p),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(p)}));let m=M().get("WEBGL_FLUSH_THRESHOLD");if(m>0){let e=y.now();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!M().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===r){let e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,a,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,a,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(M().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=B((()=>{if(!M().get("WEBGL_RENDER_FLOAT32_ENABLED")){let e=M().getBool("DEBUG");M().set("DEBUG",!1);let t=this.abs(mt(1e-8)).dataSync()[0];if(M().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?xet:yet}uploadToGPU(e){let t=this.texData.get(e),{shape:n,dtype:a,values:r,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;let l,u=null!=this.activeTimers;u&&(l=y.now());let p=t.texShape;if(null==p&&(p=zT(n,o),t.texShape=p),null!=r){let e,s=hd(n),i=p[1],h=p[0],d=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(o||!d)&&([i,h]=Qi(p[0],p[1])),e=o?new Dw(s,d):new Qh(s,d);let c=d?[h,i]:p,f=this.makeTensorInfo(c,a),m=this.texData.get(f.dataId);m.usage=d?Yr.PIXELS:Yr.UPLOAD,m.texShape=c,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,r);let g=[[h,i]],b=!0,x=this.runWebGLProgram(e,[f],a,g,b),v=this.texData.get(x.dataId);t.texShape=v.texShape,t.isPacked=v.isPacked,t.usage=v.usage,M().get("ENGINE_COMPILE_ONLY")?this.disposeData(x.dataId):(t.texture=v.texture,t.values=null,this.texData.delete(x.dataId)),this.disposeIntermediateTensorInfo(f),u&&(this.uploadWaitMs+=y.now()-l)}else{let e=this.acquireTexture(p,i,a,o);t.texture=e}}convertAndCacheOnCPU(e,t){let n=this.texData.get(e),{dtype:a}=n;return null!=t&&(n.values=vet(t,a)),n.values}acquireTexture(e,t,n,a){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){let e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,a)}computeBytes(e,t){return e[0]*e[1]*y.bytesPerElement(t)}checkCompileCompletion(){for(let[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){let e=[];if(this.gpgpu.parallelCompilationExtension){for(let[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}for(let[,t]of Object.entries(this.binaryCache)){let n=new Promise((e=>{try{this.checkCompletion_(t),e(!0)}catch(e){throw e}}));e.push(n)}return Promise.all(e)}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await xh(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(!1===this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS))throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),!1===this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)?(Iw(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(let[,e]of Object.entries(this.binaryCache)){let{uniformLocations:t,customUniformLocations:n,infLoc:a,nanLoc:r,inShapesLocations:s,inTexShapesLocations:i,outShapeLocation:o,outShapeStridesLocation:l,outTexShapeLocation:u}=qT(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=n,e.infLoc=a,e.nanLoc=r,e.inShapesLocations=s,e.inTexShapesLocations=i,e.outShapeLocation=o,e.outShapeStridesLocation=l,e.outTexShapeLocation=u}}createTensorFromTexture(e,t,n){let{texture:a,height:r,width:s,channels:i}=e,o=Mn().backend;if(!o.gpgpu.gl.isTexture(a))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");let l=o.writeTexture(a,t,n,r,s,i);return Mn().makeTensorFromDataId(l,t,n,o)}};function vet(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){let n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}$u.nextDataId=0;var xM="4.1.0";function yM(){M().set("WEBGL_FORCE_F16_TEXTURES",!0)}Yl.isBrowser()&&Yp("webgl",(()=>new $u),2);var b1e={forceHalfFloat:yM},Nd="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n",lo=class{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=S.assertAndGetBroadcastShape(t,n),this.enableShapeUniforms=we(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}},ea="\n  result.r = isNaN.r ? NAN : result.r;\n  result.g = isNaN.g ? NAN : result.g;\n  result.b = isNaN.b ? NAN : result.b;\n  result.a = isNaN.a ? NAN : result.a;\n",Po=class{constructor(e,t,n,a=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=S.assertAndGetBroadcastShape(t,n);let r=this.outputShape.length;this.enableShapeUniforms=we(r);let s="";if(a)if(0===r||1===y.sizeFromShape(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${Bt(r)} coords = getOutputCoords();\n        `,1===r)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{let e=er("coords",r);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= outShape[${r} - 2];\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= outShape[${r} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= ${this.outputShape[r-2]};\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= ${this.outputShape[r-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}};function rr(e){let{inputs:t,backend:n}=e,{x:a}=t;return n.incRef(a.dataId),{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}var bM={kernelName:mo,backendName:"webgl",kernelFunc:rr};function $n(e){let{inputs:t,backend:n}=e,{real:a,imag:r}=t,s=n.makeTensorInfo(a.shape,"complex64"),i=n.texData.get(s.dataId),o=rr({inputs:{x:a},backend:n}),l=rr({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:l},s}var wM={kernelName:mp,backendName:"webgl",kernelFunc:$n},mk="return (a < 0.) ? b * a : a;",fk="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";function Net(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{alpha:s}=a,i=n.makeTensorInfo([],"float32",y.createScalarValue(s,"float32")),o=M().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Po(fk,r.shape,i.shape):new lo(mk,r.shape,i.shape),l=n.runWebGLProgram(o,[r,i],"float32");return n.disposeIntermediateTensorInfo(i),l}var CM={kernelName:ls,backendName:"webgl",kernelFunc:Net},dk="return (a < 0.) ? b * a : a;",hk="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";function Tet(e){let{inputs:t,backend:n}=e,{x:a,alpha:r}=t,s=M().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Po(hk,a.shape,r.shape):new lo(dk,a.shape,r.shape);return n.runWebGLProgram(s,[a,r],"float32")}var IM={kernelName:Cs,backendName:"webgl",kernelFunc:Tet},Lo="if (isnan(x)) return x;";function Ct({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:a}){return({inputs:r,backend:s})=>{let i,{x:o}=r,l=s,u=a||o.dtype;if(l.shouldExecuteOnCPU([o])&&null!=n){let e=l.texData.get(o.dataId),t=n(e.values,u);return l.makeTensorInfo(o.shape,u,t)}return i=M().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new An(o.shape,t):new Mr(o.shape,e),l.runWebGLProgram(i,[o],u)}}function le({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:a=!1,cpuKernelImpl:r,dtype:s}){return({inputs:i,backend:o})=>{let{a:l,b:u}=i,p=o;if(a&&"complex64"===l.dtype){let t=p.texData.get(l.dataId),n=p.texData.get(u.dataId),[a,r]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{let[n,a]=t,r={dataId:n.dataId,dtype:n.dtype,shape:l.shape},s={dataId:a.dataId,dtype:a.dtype,shape:u.shape},i=new lo(e,l.shape,u.shape);return p.runWebGLProgram(i,[r,s],ar(n.dtype,a.dtype))})),s=$n({inputs:{real:a,imag:r},backend:p});return p.disposeIntermediateTensorInfo(a),p.disposeIntermediateTensorInfo(r),s}let h,d=s||ar(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||p.shouldExecuteOnCPU([l,u]))&&null!=r){let e=p.texData.get(l.dataId).values,t=p.texData.get(u.dataId).values,n="string"===l.dtype?S.fromUint8ToStringArray(e):e,a="string"===l.dtype?S.fromUint8ToStringArray(t):t,[s,i]=r(l.shape,u.shape,n,a,d),o=p.makeTensorInfo(i,d);return p.texData.get(o.dataId).values=s,o}return h=M().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new Po(t,l.shape,u.shape,n):new lo(e,l.shape,u.shape),p.runWebGLProgram(h,[l,u],d)}}function Il(e,t=!1){if("linear"===e)return t?mM:iM;if("relu"===e)return t?dM:lM;if("elu"===e)return t?fM:aM;if("relu6"===e)return t?hM:uM;if("prelu"===e)return t?hk:dk;if("leakyrelu"===e)return t?fk:mk;if("sigmoid"===e)return t?gM:cM;throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}var Td=class{constructor(e,t,n,a=!1,r=!1,s=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=we(this.outputShape.length);let u=a?e[1]:e[2],p=Math.ceil(u/2),h=a?"i * 2, rc.y":"rc.y, i * 2",d=r?"rc.z, i * 2":"i * 2, rc.z",c=a?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"],m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");let y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${p}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${p}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${c[0]} * ${f[0]});\n          result += (${c[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}},gk={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"},eg=class{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=S.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}},vM="return a * b;";function rg(e){let t,{inputs:n,backend:a}=e,{a:r,b:s}=n,i=S.upcastType(r.dtype,s.dtype);if("complex64"===r.dtype){let e=a.texData.get(r.dataId),t=a.texData.get(s.dataId),n=new eg(gk.REAL,r.shape,s.shape),i=new eg(gk.IMAG,r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],l=a.runWebGLProgram(n,o,"float32"),u=a.runWebGLProgram(i,o,"float32"),p=$n({inputs:{real:l,imag:u},backend:a});return a.disposeIntermediateTensorInfo(l),a.disposeIntermediateTensorInfo(u),p}if(a.shouldExecuteOnCPU([r,s])){let e=a.texData.get(r.dataId),t=a.texData.get(s.dataId),[n,o]=RL(r.shape,s.shape,e.values,t.values,i),l=a.makeTensorInfo(o,i);return a.texData.get(l.dataId).values=n,l}return t=M().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Po(vM,r.shape,s.shape):new lo(vM,r.shape,s.shape),a.runWebGLProgram(t,[r,s],i)}var SM={kernelName:xs,backendName:"webgl",kernelFunc:rg};function NM(e,t,n){let a=[wl(e.shape),...Cl(e.shape)],r={dtype:e.dtype,shape:a,dataId:e.dataId},s=[wl(t),...Cl(t)],i=new Sd(s,a),o=[a],l=n.runWebGLProgram(i,[r],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}function it(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{shape:s}=a,i=n,o=y.sizeFromShape(r.shape),l=y.inferFromImplicitShape(s,o),u=y.sizeFromShape(l);y.assert(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));let p=i.texData.get(r.dataId);return!p.isPacked||Au(r.shape,l)||null!==p.texture&&Au(p.shape,l)?(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):NM(r,l,i)}var TM={kernelName:xi,backendName:"webgl",kernelFunc:it},ng=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];let i=4*Math.floor(n/4),o=n%4,l="sumValue += dot(values, ones);";if(null!=t){let e=1/t;l=`sumValue += dot(values * ${y.isInt(e)?e.toPrecision(2):e}, ones);`}let u="";r%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}},Hw=class{constructor(e,t){this.variableNames=["x"];let{windowSize:n,batchSize:a,inSize:r,outSize:s}=e;this.outputShape=[a,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");let u=4*Math.floor(n/4),p=n%4,h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===p}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===p}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===p}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}};function Eet(e){let t=[];for(;0===t.length||1!==t[t.length-1].outSize;){let n=t.length?t[t.length-1].outSize:e[1],a=S.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:a,outSize:Math.ceil(n/a)})}return t}function qn(e,t,n,a){let r=Eet(e.shape),s=e;for(let i=0;i<r.length;i++){let o,l,{inSize:u,windowSize:p,outSize:h}=r[i];o="mean"===n?0===i?new ng({windowSize:p,inSize:u,batchSize:e.shape[0],outSize:h},u):new ng({windowSize:p,inSize:u,batchSize:e.shape[0],outSize:h}):new Hw({windowSize:p,inSize:u,batchSize:e.shape[0],outSize:h},n),l=s,s=a.runWebGLProgram(o,[s],t),l.dataId!==e.dataId&&a.disposeIntermediateTensorInfo(l)}return s}var qw=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];this.outputShape=n,this.rank=n.length;let a=Bt(this.rank),r=_et(t);this.userCode=`\n    void main() {\n      ${a} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}};function _et(e){let t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],a=new Array(t);for(let t=0;t<e.length;t++)a[e[t]]=n[t];return a.join()}var Kw=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);let a=Bt(this.rank),r=ck("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=r[e];let i=`vec2(${s.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${a} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}};function Du(e,t,n){let a=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Kw(e.shape,t):new qw(e.shape,t);return n.runWebGLProgram(a,[e],e.dtype)}function kM(e,t,n,a){let r=t,s=e.shape.length,i=y.parseAxisParam(r,e.shape),o=i,l=S.getAxesPermutation(o,s),u=null!=l,p=e;u&&(p=Du(e,l,a),o=S.getInnerMostAxes(o.length,s)),S.assertAxesAreInnerMostDims("sum",o,s);let[h,d]=S.computeOutAndReduceShapes(p.shape,o),c=h;n&&(c=S.expandShapeToKeepDim(h,i));let f=y.sizeFromShape(d),m=it({inputs:{x:p},attrs:{shape:[y.sizeFromShape(e.shape)/f,f]},backend:a}),g=qn(m,Hu(e.dtype),"sum",a),b=it({inputs:{x:g},attrs:{shape:c},backend:a});return a.disposeIntermediateTensorInfo(m),a.disposeIntermediateTensorInfo(g),u&&a.disposeIntermediateTensorInfo(p),b}function Uc(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a;return kM(r,s,i,n)}var EM={kernelName:Fs,backendName:"webgl",kernelFunc:Uc};function Oe(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:s}=n,{perm:i}=r,o=a,l=s.shape.length,u=new Array(l);for(let e=0;e<u.length;e++)u[e]=s.shape[i[e]];if(o.shouldExecuteOnCPU([s])){let e=o.texData.get(s.dataId).values,n=Wc(e,s.shape,s.dtype,i,u);t=o.makeTensorInfo(u,s.dtype),o.texData.get(t.dataId).values=n}else t=Du(s,i,o);return t}var _M={kernelName:eo,backendName:"webgl",kernelFunc:Oe},xk=1e3;function Hc({a:e,b:t,transposeA:n,transposeB:a,backend:r,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){let u=e.shape.length,p=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],d=a?t.shape[p-1]:t.shape[p-2],c=n?e.shape[u-1]:e.shape[u-2],f=a?t.shape[p-2]:t.shape[p-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),b=y.sizeFromShape(m),x=y.sizeFromShape(g),v=Wr.assertAndGetBroadcastShape(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([c,f]);y.assert(h===d,(()=>`Error in matMul: inner shapes (${h}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${a} must match.`));let w,k=n?[b,h,c]:[b,c,h],I=a?[x,f,d]:[x,d,f],S=it({inputs:{x:e},backend:r,attrs:{shape:k}}),N=it({inputs:{x:t},backend:r,attrs:{shape:I}}),T=[S,N],C=Math.max(b,x),E=n?S.shape[1]:S.shape[2],_=null!=s,$=null!=i,A="leakyrelu"===l,R=null!=l?Il(l,!0):null;if((1===c||1===f)&&E>xk&&!1===(_||$||A||null!=R)){let e=S,t=N;n&&(e=Oe({inputs:{x:S},backend:r,attrs:{perm:[0,2,1]}}),T.push(e)),a&&(t=Oe({inputs:{x:N},backend:r,attrs:{perm:[0,2,1]}}),T.push(t));let s=1===f,i=e;1!==f&&(i=it({inputs:{x:e},backend:r,attrs:{shape:[C,E,1]}}),T.push(i));let o=1===f?2:1,l=t;s&&(l=it({inputs:{x:t},backend:r,attrs:{shape:[C,1,E]}}),T.push(l));let u=rg({inputs:{a:i,b:l},backend:r});w=Uc({inputs:{x:u},backend:r,attrs:{axis:o,keepDims:!0}}),T.push(u)}else{let l=ar(e.dtype,t.dtype),u=new Td(k,I,[C,c,f],n,a,_,R,$,A),p=[S,N];if(null!=s&&p.push(s),$&&p.push(i),A){let e=r.makeTensorInfo([],"float32",y.createScalarValue(o,"float32"));p.push(e),T.push(e)}w=r.runWebGLProgram(u,p,l)}let F=it({inputs:{x:w},backend:r,attrs:{shape:v}});T.push(w);for(let e of T)r.disposeIntermediateTensorInfo(e);return F}function Aet(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:p,leakyreluAlpha:h}=a;return Hc({a:r,b:s,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:p})}var AM={kernelName:Si,backendName:"webgl",kernelFunc:Aet},$M="return abs(x);";function $et(e){let t,{inputs:n,backend:a}=e,{x:r}=n;if(a.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){let e=a.texData.get(r.dataId),t=zw(e.values);return a.makeTensorInfo(r.shape,r.dtype,t)}return t=M().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new An(r.shape,$M):new Mr(r.shape,$M),a.runWebGLProgram(t,[r],r.dtype)}var DM={kernelName:ui,backendName:"webgl",kernelFunc:$et},Det=hr+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n",Ret=Ct({opSnippet:Det}),RM={kernelName:ua,backendName:"webgl",kernelFunc:Ret},Fet=hr+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));",Oet=Ct({opSnippet:Fet}),FM={kernelName:ca,backendName:"webgl",kernelFunc:Oet},OM="return a + b;",Pet=le({opSnippet:OM,packedOpSnippet:OM,supportsComplex:!0,cpuKernelImpl:fL}),PM={kernelName:Qn,backendName:"webgl",kernelFunc:Pet},jw=class{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));let a=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${a};\n        setOutput(result);\n      }\n    `}},Xw=class{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));let n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));let a=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${a};\n        setOutput(result);\n      }\n    `}};function Yw(e){let{inputs:t,backend:n}=e,a=t;if(1===a.length)return rr({inputs:{x:a[0]},backend:n});if(a.length>M().get("WEBGL_MAX_TEXTURES_IN_SHADER")){let e=Math.floor(a.length/2),t=Yw({inputs:a.slice(0,e),backend:n}),r=Yw({inputs:a.slice(e),backend:n});return Yw({inputs:[t,r],backend:n})}let r=a.map((e=>e.dtype)).reduce(((e,t)=>ar(e,t))),s=a.map((e=>e.shape)),i=M().getBool("WEBGL_PACK")?new Xw(a[0].shape,s):new jw(a[0].shape,s);return n.runWebGLProgram(i,a,r)}var LM={kernelName:Wo,backendName:"webgl",kernelFunc:Yw};function Let(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,l=y.parseAxisParam(s,r.shape),u=l,p=S.getAxesPermutation(u,o),h=r;null!=p&&(h=Oe({inputs:{x:r},backend:n,attrs:{perm:p}}),u=S.getInnerMostAxes(u.length,o)),S.assertAxesAreInnerMostDims("all",u,o);let d,[c,f]=S.computeOutAndReduceShapes(h.shape,u),m=it({inputs:{x:h},backend:n,attrs:{shape:[-1,y.sizeFromShape(f)]}}),g=qn(m,m.dtype,"all",n);return d=it(i?{inputs:{x:g},backend:n,attrs:{shape:S.expandShapeToKeepDim(c,l)}}:{inputs:{x:g},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=p&&n.disposeIntermediateTensorInfo(h),d}var MM={kernelName:pa,backendName:"webgl",kernelFunc:Let};function Met(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,l=y.parseAxisParam(s,r.shape),u=l,p=S.getAxesPermutation(u,o),h=r;null!=p&&(h=Oe({inputs:{x:r},backend:n,attrs:{perm:p}}),u=S.getInnerMostAxes(u.length,o)),S.assertAxesAreInnerMostDims("any",u,o);let d,[c,f]=S.computeOutAndReduceShapes(h.shape,u),m=it({inputs:{x:h},backend:n,attrs:{shape:[-1,y.sizeFromShape(f)]}}),g=qn(m,m.dtype,"any",n);return d=it(i?{inputs:{x:g},backend:n,attrs:{shape:S.expandShapeToKeepDim(c,l)}}:{inputs:{x:g},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=p&&n.disposeIntermediateTensorInfo(h),d}var zM={kernelName:ma,backendName:"webgl",kernelFunc:Met},Zw=class{constructor(e,t,n){this.variableNames=["A"];let{windowSize:a,batchSize:r,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,s];let i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${a};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${a}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}},Jw=class{constructor(e,t,n,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,y.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));let r=e[e.length-1],s=Math.ceil(r/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),a||this.variableNames.push("bestIndicesA");let i,o,l=this.outputShape,u=l.length,p=Bt(u),h=er("coords",u);if(1===s){o=u+1;let e=Bt(o);i=`\n        ${e} sourceLocR = ${e}(${h.join()}, 0);\n        ++${h[u-1]};\n        ${e} sourceLocG = ${e}(${h.join()}, 0);\n        ++${h[u-2]};\n        ${e} sourceLocA = ${e}(${h.join()}, 0);\n        --${h[u-1]};\n        ${e} sourceLocB = ${e}(${h.join()}, 0);\n        --${h[u-2]};`}else o=u,i=`\n        ${p} sourceLocR = coords;\n        ++${h[u-1]};\n        ${p} sourceLocG = coords;\n        ++${h[u-2]};\n        ${p} sourceLocA = coords;\n        --${h[u-1]};\n        ${p} sourceLocB = coords;\n        --${h[u-2]};`;let d=["x","y","z","w","u","v"].slice(0,o),c="."+d[o-1],f=d.map((e=>"int "+e)),m=er("sourceLocR",o-1).concat("inIdx.r"),g=er("sourceLocG",o-1).concat("inIdx.g"),b=er("sourceLocB",o-1).concat("inIdx.b"),x=er("sourceLocA",o-1).concat("inIdx.a"),v="max"===n?"greaterThan":"lessThan",w=a?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,k=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${b.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,I=a?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${p} coords = getOutputCoords();\n        bool hasNextCol = ${h[u-1]} < ${l[u-1]-1};\n        bool hasNextRow = ${h[u-2]} < ${l[u-2]-1};\n        ${i}\n        ivec4 srcIdx = ivec4(sourceLocR${c}, sourceLocG${c},\n          sourceLocB${c}, sourceLocA${c}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${v}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}};function BM(e,t,n,a=null){let r=t.shape[0],s=t.shape[1];null!=a&&(r=a.shape[0],s=a.shape[1]);let i=S.computeOptimalWindowSize(s),o={windowSize:i,inSize:s,batchSize:r,outSize:Math.ceil(s/i)},l=new Zw(o,n,null==a),u=[t];null!=a&&u.push(a);let p=e.runWebGLProgram(l,u,"int32");if(1===p.shape[1])return p;let h=BM(e,t,n,p);return e.disposeIntermediateTensorInfo(p),h}function VM(e,t,n,a=null){let r=null!=a?a.shape:t.shape,s=r[r.length-1],i=S.computeOptimalWindowSize(s),o=new Jw(r,i,n,null==a),l=null==a?[t]:[t,a],u=e.runWebGLProgram(o,l,"int32");if(u.shape.length===t.shape.length){let a=VM(e,t,n,u);return e.disposeIntermediateTensorInfo(u),a}return u}function Qw(e,t,n,a){let r=[n];if(S.assertAxesAreInnerMostDims("arg"+a.charAt(0).toUpperCase()+a.slice(1),r,t.shape.length),!M().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){let n=[],s=e.texData.get(t.dataId),i=t;null!==s&&s.isPacked&&(i=e.unpackTensor(t),n.push(i));let[o,l]=S.computeOutAndReduceShapes(i.shape,r),u=y.sizeFromShape(l),p=it({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(p);let h=BM(e,p,a);n.push(h);let d=it({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),d}return VM(e,t,a)}function zet(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a,i=y.parseAxisParam(s,r.shape),o=S.getAxesPermutation(i,r.shape.length),l=r,u=[];null!=o&&(l=Oe({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=S.getInnerMostAxes(i.length,l.shape.length)),S.assertAxesAreInnerMostDims("argMax",[i[0]],l.shape.length);let p=Qw(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}var GM={kernelName:Uo,backendName:"webgl",kernelFunc:zet};function Bet(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s}=a,i=y.parseAxisParam(s,r.shape),o=S.getAxesPermutation(i,r.shape.length),l=r,u=[];null!=o&&(l=Oe({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=S.getInnerMostAxes(i.length,l.shape.length)),S.assertAxesAreInnerMostDims("argMin",[i[0]],l.shape.length);let p=Qw(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}var WM={kernelName:Al,backendName:"webgl",kernelFunc:Bet},Vet=hr+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n",Get=Ct({opSnippet:Vet}),UM={kernelName:fa,backendName:"webgl",kernelFunc:Get},Wet=hr+"return log(x + sqrt(x * x + 1.0));",Uet=Ct({opSnippet:Wet}),HM={kernelName:da,backendName:"webgl",kernelFunc:Uet},Het=hr+"\n  return atan(x);\n",qet=Ct({opSnippet:Het}),qM={kernelName:ha,backendName:"webgl",kernelFunc:qet},Ket=Nd+"\n  return atan(a, b);\n",jet="\n  vec4 result = atan(a, b);\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+ea+"\n  return result;\n",Xet=le({opSnippet:Ket,packedOpSnippet:jet}),KM={kernelName:xa,backendName:"webgl",kernelFunc:Xet},Yet=hr+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;",Zet=Ct({opSnippet:Yet}),jM={kernelName:ga,backendName:"webgl",kernelFunc:Zet},oi=class{constructor(e,t,n,a=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,p=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,c=e.padInfo.left;this.outputShape=e.outShape;let f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`,y="0.0";if(f||(y="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${c});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${p};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${a?r?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");let x=4*Math.floor(s/4),v=s%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${c});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${p};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===v}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${b});\n      }\n    `}},Ru=class{constructor(e,t,n,a=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");let s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,p=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,c=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;let b="avg"===t,x="0.0";if(b||(x="-1.0 / 1e-20"),n){let t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${c};\n                wR += ${p}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${a?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${c} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(v="avgValue / count");let w=4*Math.floor(s/4),k=s%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${c};\n            wR += ${p}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${v});\n        }\n      }\n    `}};function Jet(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;ri(r,"avgPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a;y.assert(S.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u=S.computePool2DInfo(r.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&y.arraysEqual(u.inShape,u.outShape))return rr({inputs:{x:r},backend:n});let p=new oi(u,"avg",!1);return n.runWebGLProgram(p,[r],"float32")}var XM={kernelName:Ho,backendName:"webgl",kernelFunc:Jet};function Qet(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=a,p=S.computePool3DInfo(r.shape,s,i,[1,1,1],o,l,u),h=new Ru(p,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}var YM={kernelName:$l,backendName:"webgl",kernelFunc:Qet},tC=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,p=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${p});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},eC=class{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,p=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,c=p-1-e.padInfo.front,f=h-1-e.padInfo.top,m=d-1-e.padInfo.left,g=1/(t*n*a);this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};function trt(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:p}=a,h=S.computePool3DInfo(i.shape,o,l,[1,1,1],u,p),d=new eC(h);return n.runWebGLProgram(d,[r],i.dtype)}var ZM={kernelName:up,backendName:"webgl",kernelFunc:trt};function ert(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s;ri([r,s],"avgPoolGrad");let{filterSize:o,strides:l,pad:u}=a,p=S.computePool2DInfo(i.shape,o,l,1,u),h=new tC(p);return n.runWebGLProgram(h,[r],i.dtype)}var JM={kernelName:lp,backendName:"webgl",kernelFunc:ert};function rrt(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=a;return Hc({a:r,b:s,transposeA:i,transposeB:o,backend:n})}var QM={kernelName:qo,backendName:"webgl",kernelFunc:rrt},rC=class{constructor(e,t,n,a,r,s){this.outputShape=[],this.variableNames=["x","mean","variance"],S.assertAndGetBroadcastShape(e,t),S.assertAndGetBroadcastShape(e,n);let i="0.0";null!=a&&(S.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=r&&(S.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}},nC=class{constructor(e,t,n,a,r,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],S.assertAndGetBroadcastShape(e,t),S.assertAndGetBroadcastShape(e,n);let i="vec4(0.0)";null!=a&&(S.assertAndGetBroadcastShape(e,a),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(S.assertAndGetBroadcastShape(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}},nrt=({inputs:e,backend:t,attrs:n})=>{let{x:a,mean:r,variance:s,offset:i,scale:o}=e;y.assert(r.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),y.assert(null==i||r.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),y.assert(null==o||r.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);let u=[a,r,s],p=null;null!=i&&(p=i.shape,u.push(i));let h=null;null!=o&&(h=o.shape,u.push(o));let d=M().getBool("WEBGL_PACK_NORMALIZATION")?new nC(a.shape,r.shape,s.shape,p,h,l):new rC(a.shape,r.shape,s.shape,p,h,l);return t.runWebGLProgram(d,u,u[0].dtype)},tz={kernelName:ss,backendName:"webgl",kernelFunc:nrt},oC=class{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;let t=Bt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let n,a=ort(this.rank);n=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${yk[t]} = start[${t}] + coords.${yk[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${n}\n        setOutput(getSource(${a}));\n      }\n    `}},yk=["x","y","z","w","u","v"];function ort(e){if(1===e)return"sourceLoc";if(e<=6)return yk.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}var sC=class{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];let t=Bt(this.rank),n=er("coords",this.rank),a=er("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${a.slice(-2).join()})`,s=`getChannel(getSource(${a.join()}), ${r})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${a[this.rank-1]};\n        result.y = ${s};\n        --${a[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${a[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${a[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${a[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}};function srt(e,t,n,a){let r=a.texData.get(e.dataId),s=a.makeTensorInfo(n,e.dtype),i=a.texData.get(s.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Me.computeFlatOffset(t,y.computeStrides(e.shape));r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};let l=a.dataRefCount.get(i.slice.origDataId)||1;return a.dataRefCount.set(i.slice.origDataId,l+1),s}function si(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{begin:s,size:i}=a,[o,l]=Me.parseSliceParams(r,s,i);if(Me.assertParamsValid(r,o,l),0===y.sizeFromShape(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){let e=n.texData.get(r.dataId),t=UL(e.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,t)}let{isPacked:u}=n.texData.get(r.dataId),p=Me.isSliceContinous(r.shape,o,l);if(u||!p){let e=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new sC(l):new oC(l),t=[o];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),srt(r,o,l,n)}var ez={kernelName:bi,backendName:"webgl",kernelFunc:si},irt=e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:i}=a;y.assert(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=S.getReshaped(r.shape,s,o),u=S.getPermuted(l.length,s.length),p=S.getReshapedPermuted(r.shape,s,o),h=S.getSliceBeginCoords(i,s.length),d=S.getSliceSize(p,i,s.length),c=[],f=it({inputs:{x:r},backend:n,attrs:{shape:l}}),m=Oe({inputs:{x:f},backend:n,attrs:{perm:u}}),g=it({inputs:{x:m},backend:n,attrs:{shape:p}}),b=si({inputs:{x:g},backend:n,attrs:{begin:h,size:d}});return c.push(f),c.push(m),c.push(g),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),b},rz={kernelName:ci,backendName:"webgl",kernelFunc:irt};function art(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i}=a,o=n.readSync(r.dataId),l=n.readSync(s.dataId),u=Mw(o,l,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,u)}var nz={kernelName:cp,backendName:"webgl",kernelFunc:art};function lrt(e){let{inputs:t,backend:n}=e,{s0:a,s1:r}=t,s=n.readSync(a.dataId),i=n.readSync(r.dataId),o=S.assertAndGetBroadcastShape(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}var oz={kernelName:pp,backendName:"webgl",kernelFunc:lrt},urt="return float(a != b);",bk=le({opSnippet:urt,cpuKernelImpl:OL,dtype:"bool"}),sz={kernelName:Pa,backendName:"webgl",kernelFunc:bk};function vl(e){let{inputs:t,backend:n}=e,{input:a}=t;return rr({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.real},backend:n})}var iz={kernelName:Fp,backendName:"webgl",kernelFunc:vl},crt="return float(int(x));";function az(e,t){let n=new Mr(e.shape,crt),a=t.runWebGLProgram(n,[e],"int32");return{dataId:a.dataId,shape:a.shape,dtype:a.dtype}}function wk(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dtype:s}=a;if("complex64"===s){if("complex64"===r.dtype)return rr({inputs:{x:r},backend:n});let e=Ne(r.shape),t=wk({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),a=$n({inputs:{real:t,imag:e},backend:n});return e.dispose(),n.disposeIntermediateTensorInfo(t),a}if("complex64"===r.dtype){let e=vl({inputs:{input:r},backend:n}),t=wk({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!y.hasEncodingLoss(r.dtype,s)){let e=rr({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if(n.shouldExecuteOnCPU([r])){let e=n.texData.get(r.dataId).values,[t,a,i]=hL(e,r.shape,r.dtype,s);return n.makeTensorInfo(t,a,i)}if("int32"===s)return az(r,n);if("bool"===s){let e=n.makeTensorInfo([],"bool",y.getTypedArrayFromDType("bool",1)),t=bk({inputs:{a:r,b:e},backend:n});return n.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${s}`)}var lz={kernelName:co,backendName:"webgl",kernelFunc:wk},uz="return ceil(x);",prt=Ct({opSnippet:uz,packedOpSnippet:uz,cpuKernelImpl:gL}),cz={kernelName:Ko,backendName:"webgl",kernelFunc:prt},iC=class{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}},aC=class{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}};function mrt(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:s}=n,{clipValueMin:i,clipValueMax:o}=r;t=M().getBool("WEBGL_PACK_CLIP")?new aC(s.shape):new iC(s.shape);let l=[[i],[o]];return a.runWebGLProgram(t,[s],s.dtype,l)}var pz={kernelName:po,backendName:"webgl",kernelFunc:mrt},lC=class{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}};function mz(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}function frt(e){let{inputs:t,backend:n}=e,{x:a}=t,r=n.texData.get(a.dataId),s=new lC(a.shape),i=[mz(a,r.complexTensorInfos.real),mz(a,r.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}var fz={kernelName:Dl,backendName:"webgl",kernelFunc:frt},uC=class{constructor(e){this.outputShape=[],this.outputShape=S.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));let t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];let n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){let a=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${a}));`)}let a=t.length,r=t[t.length-1];n.push(`else setOutput(getT${a}(yR, yC-${r}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}},pC=class{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=S.computeOutShape(e,t);let n=this.outputShape,a=n.length,r=Bt(a),s=er("coords",a),i=["x","y","z","w","u","v"].slice(0,a);this.variableNames=e.map(((e,t)=>`T${t}`));let o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];let l=i[t],u=i.slice(-2),p=i.join(),h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${p}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){let t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${cC(i,l,t)}),\n            vec2(${cC(u,l,t)}));\n        }`}let d=o.length,c=o[o.length-1];h+=`\n        return getChannel(\n          getT${d}(${cC(i,l,c)}),\n          vec2(${cC(u,l,c)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[a-1]} = ${s[a-1]} + 1;\n        if (${s[a-1]} < ${n[a-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[a-2]} = ${s[a-2]} + 1;\n        if (${s[a-2]} < ${n[a-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[a-1]} = ${s[a-1]} - 1;\n        if (${s[a-2]} < ${n[a-2]} &&\n            ${s[a-1]} < ${n[a-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}};function cC(e,t,n){let a=e.indexOf(t);return e.map(((e,t)=>t===a?`${e} - ${n}`:e)).join()}function qc(e){let{inputs:t,backend:n}=e,{input:a}=t;return rr({inputs:{x:n.texData.get(a.dataId).complexTensorInfos.imag},backend:n})}var dz={kernelName:Sp,backendName:"webgl",kernelFunc:qc};function kd(e,t,n){let a=e[0].dtype;if("complex64"===a){let a=e.map((e=>vl({inputs:{input:e},backend:n}))),r=e.map((e=>qc({inputs:{input:e},backend:n}))),s=kd(a,t,n),i=kd(r,t,n),o=$n({inputs:{real:s,imag:i},backend:n});return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let r=n.shouldExecuteOnCPU(e);if("string"===a&&(r=!0),r){let r=e.map((e=>{let a=[-1,y.sizeFromShape(e.shape.slice(t))];return it({inputs:{x:e},backend:n,attrs:{shape:a}})})),s=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=S.computeOutShape(r.map((e=>e.shape)),1),o=1===r[0].shape[0],l=xL(s,i,a,o),u=S.computeOutShape(e.map((e=>e.shape)),t),p=n.makeTensorInfo(u,a,l);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}let s=e.filter((e=>y.sizeFromShape(e.shape)>0)),i=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&s[0].shape.length>1;if(1===s.length){let t=i?new Mr(e[0].shape,ta):new An(e[0].shape,ta);return n.runWebGLProgram(t,e,a)}let o=M().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(s.length>o){let e=[];for(let a=0;a<s.length;a+=o){let r=s.slice(a,a+o);e.push(kd(r,t,n))}let a=kd(e,t,n);for(let t of e)n.disposeIntermediateTensorInfo(t);return a}if(i){let e=new pC(s.map((e=>e.shape)),t);return n.runWebGLProgram(e,s,a)}let{tensors2D:l,outShape:u}=drt(s,t,n),p=new uC(l.map((e=>e.shape))),h=n.runWebGLProgram(p,l,a);l.forEach((e=>n.disposeIntermediateTensorInfo(e)));let d=it({inputs:{x:h},attrs:{shape:u},backend:n});return n.disposeIntermediateTensorInfo(h),d}function drt(e,t,n){let a=S.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>it({inputs:{x:e},attrs:{shape:[-1,y.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:a}}function Ck(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a,s=y.parseAxisParam(r,t[0].shape)[0],i=t.map((e=>e.shape));S.assertParamsConsistent(i,s);let o=S.computeOutShape(t.map((e=>e.shape)),s);if(0===y.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);let l=t.filter((e=>y.sizeFromShape(e.shape)>0));return 1===l.length?rr({inputs:{x:l[0]},backend:n}):kd(l,s,n)}var hz={kernelName:pi,backendName:"webgl",kernelFunc:Ck},Ed=class{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;let s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,p=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1,x="",v="";n&&(x=a?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,v="result = activation(result);");let w=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${p};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${c}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${c}) *\n                    getW(wR, wC, ${c}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${c}, xR, xC) *\n                    getW(wR, wC, ${c}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${c}, d2),\n                getW(wR, wC, ${c} + 1, d2),\n                getW(wR, wC, ${c} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${c}),\n                  getX(batch, xR, xC, ${c} + 1),\n                  getX(batch, xR, xC, ${c} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${c}, xR, xC),\n                  getX(batch, ${c} + 1, xR, xC),\n                  getX(batch, ${c} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${w}\n        ${v}\n        setOutput(result);\n      }\n    `}},mC=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let t=e.padInfo.front,n=e.padInfo.top,a=e.padInfo.left,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,p=e.filterDepth,h=e.filterHeight,d=e.filterWidth,c=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${a});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${p}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${c}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${c}) *\n                  getW(wF, wR, wC, ${c}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${c}),\n                  getX(batch, xF, xR, xC, ${c} + 1),\n                  getX(batch, xF, xR, xC, ${c} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${c}, d2),\n                  getW(wF, wR, wC, ${c} + 1, d2),\n                  getW(wF, wR, wC, ${c} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},_d=class{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=we(this.outputShape.length);let s=e.padInfo.left,i=e.strideWidth,o=e.dilationWidth,l=e.filterHeight,u=e.filterWidth,p=u,h="\n       int xR; int xC; int xCOffset;\n       vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<u;e++)h+=`\n           vec4 xTexelC${2*e};\n           int xTexelC${2*e}Ready;\n           vec4 xTexelC${2*e+1};\n           int xTexelC${2*e+1}Ready;\n           vec4 xC${e};`;h+=`\n     for (int r = 0; r < ${l}; r++) {\n      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {\n       `;for(let e=0;e<u;e++)h+=`\n           xTexelC${2*e} = vec4(0.0);\n           xTexelC${2*e}Ready = 0;\n           xTexelC${2*e+1} = vec4(0.0);\n           xTexelC${2*e+1}Ready = 0;\n           xC${e} = vec4(0.0);`;h+="\n         xR = xRCorner + r * dilations[0];\n         if (xR >=0 && xR < inDims[0]) {\n       ";for(let t=0;t<(p+1)/2;t++){let n=2*t;if(h+=`\n           xC = xCCorner + ${n*o};\n           `,1===i){if(n<u&&(s%2==1?(h+=`\n                 xCOffset = xC + 1;\n                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n               `,h+=1===o&&n>0?`\n                 xC${n} = vec4(xTexelC${n-2}.zw, xTexelC${n}.xy);\n                 `:`\n                   xCOffset = xC + 1 - 2;\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       previous.zw = vec2(0.0);\n                     }\n\n                     xC${n} = vec4(previous.zw, xTexelC${n}.xy);\n                   } else {\n                     xC${n} = vec4(0.0, 0.0, xTexelC${n}.xy);\n                   }\n                   `):h+=`\n                 if (xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xC${n} = xTexelC${n};\n                 `,n+1<u)){let e=s%2==0?y.nearestLargerEven(o):o;o%2==0&&s%2==1||o%2!=0&&s%2!=1?(h+=`\n                   xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                     xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n\n                     // Need to manually clear unused channels in case\n                     // we're reading from recycled texture.\n                     if (xCOffset + 1 >= inDims[1]) {\n                       xTexelC${n+1}.zw = vec2(0.0);\n                     }\n                     xTexelC${n+1}Ready = 1;\n                   }\n                   `,h+=o>1?`\n                     xCOffset -= 2;\n                     if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                      previous = getX(batch, xR, xCOffset, d1);\n                      xC${n+1} = vec4(previous.zw, xTexelC${n+1}.xy);\n                     } else {\n                      xC${n+1} = vec4(0.0, 0.0, xTexelC${n+1}.xy);\n                     }\n                     `:`\n                     xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.xy);\n                     `):h+=1===e?`\n                     xC${n+1} = xTexelC${n};\n                     `:`\n                     xCOffset = xC + ${e};\n\n                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                       xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                       if (xCOffset + 1 >= inDims[1]) {\n                         xTexelC${n+1}.zw = vec2(0.0);\n                       }\n                       xTexelC${n+1}Ready = 1;\n                     }\n\n                     xC${n+1} = xTexelC${n+1};\n                     `}}else n<u&&(s%2==1?(h+=`\n                 xCOffset = xC + 1 - strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xCOffset, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xC + 1, d1);\n                   // Need to manually clear unused channels in case\n                   // we're reading from recycled texture.\n                   if (xC + 2 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.0);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n               `,n+1<u&&(h+=`\n                   final = vec4(0.0);\n                   xCOffset = xC + 1 + strides[1];\n                   if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                     final = getX(batch, xR, xCOffset, d1);\n                   }\n                   xC${n+1} = vec4(xTexelC${n+1}.xy, final.xy);\n                 `)):(h+=`\n                 if(xC >= 0 && xC < inDims[1] && xTexelC${n}Ready == 0) {\n                   xTexelC${n} = getX(batch, xR, xC, d1);\n                   if (xC + 1 >= inDims[1]) {\n                     xTexelC${n}.zw = vec2(0.0);\n                   }\n                   xTexelC${n}Ready = 1;\n                 }\n\n                 xCOffset = xC + strides[1];\n                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${n+1}Ready == 0) {\n                   xTexelC${n+1} = getX(batch, xR, xCOffset, d1);\n                   if (xCOffset + 1 >= inDims[1]) {\n                     xTexelC${n+1}.zw = vec2(0.);\n                   }\n                   xTexelC${n+1}Ready = 1;\n                 }\n\n                 xC${n} = vec4(\n                   xTexelC${n}.xy, xTexelC${n+1}.xy);\n               `,n+1<u&&(h+=`\n                   xC${n+1} = vec4(xTexelC${n}.zw, xTexelC${n+1}.zw);\n                 `)));n<u&&(h+=`\n             wTexel = getW(r, ${n}, d1, d2);\n             dotProd += xC${n}.xxzz * vec4(wTexel.xy, wTexel.xy);\n             if(d1 + 1 < ${e.inChannels}) {\n               dotProd += xC${n}.yyww * vec4(wTexel.zw, wTexel.zw);\n             }\n           `,n+1<u&&(h+=`\n               wTexel = getW(r, ${n+1}, d1, d2);\n               dotProd += xC${n+1}.xxzz * vec4(wTexel.xy, wTexel.xy);\n               if(d1 + 1 < ${e.inChannels}) {\n                 dotProd += xC${n+1}.yyww * vec4(wTexel.zw, wTexel.zw);\n               }\n             `))}h+="\n     }\n   ",h+="\n     }\n   ",h+="\n     }\n   ";let d="",c="";n&&(d=a?`vec4 activation(vec4 a) {\n           vec4 b = getPreluActivationWeightsAtOutCoords();\n           ${n}\n         }`:r?`vec4 activation(vec4 a) {\n           vec4 b = getLeakyreluAlphaAtOutCoords();\n           ${n}\n         }`:`vec4 activation(vec4 x) {\n           ${n}\n         }`,c="result = activation(result);");let f=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n       ${d}\n\n       void main() {\n         ivec4 coords = getOutputCoords();\n         int batch = coords.x;\n         ivec2 xRCCorner = coords.yz * strides - pads;\n         int d2 = coords.w;\n         int xRCorner = xRCCorner.x;\n         int xCCorner = xRCCorner.y;\n\n         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n         vec4 dotProd = vec4(0.000000000000001);\n\n         ${h}\n\n         vec4 result = dotProd - vec4(0.000000000000001);\n         ${f}\n         ${c}\n         setOutput(result);\n       }\n     `}},fC=class{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=we(this.outputShape.length);let{dataFormat:n}=t,a=Ge(),r="channelsLast"===n,s=r?1:2,i=r?2:3,o=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`,l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.z + ${t};\n          pos = rc.y + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${r}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(rc.x, ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${a.output} = result;\n      }\n    `}};function dC(e,t){let n=e.length;return n>=3?t?[...e.slice(0,-3),e[n-3]*e[n-2],e[n-1]]:[...e.slice(0,-3),e[n-3],e[n-2]*e[n-1]]:!t&&1===n&&e[0]>1?[e[0],1]:null}function hC({x:e,filter:t,convInfo:n,backend:a,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let l,u=e.shape,p=a.texData.get(e.dataId),h=n.inChannels,d=u[0]*u[1]*u[2],c=n.outChannels,f="channelsLast"===n.dataFormat,m=[];if(null!=s){let e=dC(s.shape,f);null!=e&&(s=it({inputs:{x:s},backend:a,attrs:{shape:e}}),m.push(s))}if(null!=r){let e=dC(r.shape,f);null!=e&&(r=it({inputs:{x:r},backend:a,attrs:{shape:e}}),m.push(r))}if((1!==d&&1!==c||!(h>xk))&&p.isPacked&&f&&null!=p.texture&&u[2]%2!=0&&y.arraysEqual(p.shape.slice(-3),u.slice(-3))){let h=u[0]*u[1]*(u[2]+1),d={dataId:e.dataId,shape:[1,h,n.inChannels],dtype:e.dtype},c=p.shape;p.shape=p.shape.slice(),p.shape[p.shape.length-2]++,y.assert(Au(p.shape,d.shape),(()=>`packed reshape ${p.shape} to ${d.shape} isn't free`));let f=it({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(f);let g=Hc({a:d,b:f,backend:a,transposeA:!1,transposeB:!1,bias:r,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),b=a.texData.get(g.dataId);y.assert(b.isPacked,(()=>"batchMatMul result is expected to be packed")),p.shape=c,b.shape=n.outShape,l=rr({inputs:{x:g},backend:a}),l.shape=n.outShape,m.push(g)}else{let u=n.outHeight*n.outWidth,p=it({inputs:{x:e},backend:a,attrs:{shape:f?[n.batchSize,u,n.inChannels]:[n.batchSize,n.inChannels,u]}}),h=it({inputs:{x:t},backend:a,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=Hc({a:f?p:h,b:f?h:p,transposeA:!f,transposeB:!1,backend:a,bias:r,activation:o,preluActivationWeights:s,leakyreluAlpha:i});l=it({inputs:{x:d},backend:a,attrs:{shape:n.outShape}}),m.push(p),m.push(h),m.push(d)}for(let e of m)a.disposeIntermediateTensorInfo(e);return l}function gC({x:e,filter:t,convInfo:n,backend:a,bias:r=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){let{filterWidth:l,filterHeight:u,inChannels:p,outWidth:h,outHeight:d,dataFormat:c}=n,f="channelsLast"===c,m=l*u*p,g=d*h,b=[n.batchSize,m,g],x=[];if(null!=s){let e=dC(s.shape,f);null!=e&&(s=it({inputs:{x:s},backend:a,attrs:{shape:e}}),x.push(s))}if(null!=r){let e=dC(r.shape,f);null!=e&&(r=it({inputs:{x:r},backend:a,attrs:{shape:e}}),x.push(r))}let v=it({inputs:{x:t},backend:a,attrs:{shape:[1,m,y.sizeFromShape(t.shape)/m]}});x.push(v);let w=new fC(b,n),k=[e.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],I=a.runWebGLProgram(w,[e],"float32",k),S=it({inputs:{x:I},backend:a,attrs:{shape:b}});x.push(I),x.push(S);let N=null!=r,T=null!=s,C="leakyrelu"===o,E=o?Il(o,!0):null,_=new Td(f?S.shape:v.shape,f?v.shape:S.shape,f?[n.batchSize,g,n.outChannels]:[n.batchSize,n.outChannels,g],!0,!1,N,E,T,C),$=f?[S,v]:[v,S];if(r&&$.push(r),T&&$.push(s),C){let e=a.makeTensorInfo([],"float32",y.createScalarValue(i,"float32"));$.push(e),x.push(e)}let A=a.runWebGLProgram(_,$,"float32"),R=it({inputs:{x:A},backend:a,attrs:{shape:n.outShape}});x.push(A);for(let e of x)a.disposeIntermediateTensorInfo(e);return R}function hrt(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:s,filter:i}=n,{strides:o,pad:l,dataFormat:u,dilations:p,dimRoundingMode:h}=r,d=S.convertConv2DDataFormat(u),c=S.computeConv2DInfo(s.shape,i.shape,o,p,l,h,!1,d);if(1!==c.filterHeight||1!==c.filterWidth||1!==c.dilationHeight||1!==c.dilationWidth||1!==c.strideHeight||1!==c.strideWidth||"SAME"!==c.padInfo.type&&"VALID"!==c.padInfo.type)if(c.strideWidth<=2&&"channelsLast"===d&&M().getBool("WEBGL_EXP_CONV")){let e=new _d(c),n=[[c.padInfo.top,c.padInfo.left],[c.strideHeight,c.strideWidth],[c.dilationHeight,c.dilationWidth],[c.inHeight,c.inWidth]];t=a.runWebGLProgram(e,[s,i],"float32",n)}else if(M().getBool("WEBGL_CONV_IM2COL"))t=gC({x:s,filter:i,convInfo:c,backend:a});else{let e=new Ed(c);t=a.runWebGLProgram(e,[s,i],"float32")}else t=hC({x:s,filter:i,convInfo:c,backend:a});let f=it({inputs:{x:t},backend:a,attrs:{shape:c.outShape}});return a.disposeIntermediateTensorInfo(t),f}var gz={kernelName:jo,backendName:"webgl",kernelFunc:hrt},xC=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${a};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},yC=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=s?1:2,u=s?2:3,p=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${p}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},bC=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${r};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${a} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},wC=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterDepth,n=e.filterHeight,a=e.filterWidth,r=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=a-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${a}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${a} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};function grt(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:p}=a,h=S.convertConv2DDataFormat(l),d=S.computeConv2DInfo(r.shape,p,i,1,o,u,!1,h),c=new xC(d);return n.runWebGLProgram(c,[r,s],"float32")}var xz={kernelName:fp,backendName:"webgl",kernelFunc:grt};function xrt(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:p}=a,h=S.convertConv2DDataFormat(u),d=S.computeConv2DInfo(i,s.shape,o,1,l,p,!1,h),c=new yC(d);return n.runWebGLProgram(c,[r,s],"float32")}var yz={kernelName:Xo,backendName:"webgl",kernelFunc:xrt};function yrt(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l}=a,u=S.computeConv3DInfo(r.shape,s.shape,i,l,o),p=new mC(u);return n.runWebGLProgram(p,[r,s],"float32")}var bz={kernelName:Rl,backendName:"webgl",kernelFunc:yrt};function brt(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,pad:o,filterShape:l}=a,u=S.computeConv3DInfo(r.shape,l,i,1,o),p=new bC(u);return n.runWebGLProgram(p,[r,s],"float32")}var wz={kernelName:dp,backendName:"webgl",kernelFunc:brt};function wrt(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{pad:i,strides:o,inputShape:l}=a,u=S.computeConv3DInfo(l,s.shape,o,1,i),p=new wC(u);return n.runWebGLProgram(p,[r,s],"float32")}var Kc,Cz={kernelName:hp,backendName:"webgl",kernelFunc:wrt},Crt=Lo+"\n  return cos(x);\n",Irt=Ct({opSnippet:Crt}),Iz={kernelName:Yo,backendName:"webgl",kernelFunc:Irt},vrt="\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n",Srt=Ct({opSnippet:vrt}),vz={kernelName:Zo,backendName:"webgl",kernelFunc:Srt},CC=class{constructor(e,t,n,a,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];let[s,i,o,l]=e,[u]=t,[p,h]=n;this.outputShape=[u,p,h,l];let d="bilinear"===a?1:0,[c,f]=[i-1+".0",o-1+".0"],[m,g,y]=p>1?[""+(i-1)/(p-1),"(y2-y1) * height_ratio",`y1*${c} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${c}`],[b,x,v]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${c} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${v};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}},Nrt=e=>{let{inputs:t,backend:n,attrs:a}=e,{image:r,boxes:s,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=a,p=new CC(r.shape,s.shape,o,l,u);return n.runWebGLProgram(p,[r,s,i],"float32")},Sz={kernelName:ba,backendName:"webgl",kernelFunc:Nrt};!function(e){e.Prod="*",e.Sum="+"}(Kc||(Kc={}));var og=class{constructor(e,t,n,a){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];let r=this.outputShape.length,s=this.op===Kc.Prod?"1.0":"0.0",i=n?s:`getX(${Nz(r,"coords",this.op)})`,o=this.outputShape[this.outputShape.length-1],l="",u="";n?(l=a?"end != "+(o-1):"end != 0",u=a?"end + 1":"end - 1"):(l=a?`end + pow2 < ${o}`:"end >= pow2",u=a?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${Bt(r)} coords = getOutputCoords();\n        int end = ${Tz(r,"coords",this.op)};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${l}) {\n          int idx = ${u};\n          ${Tz(r,"coords",this.op)} = idx;\n          val ${this.op}= getX(${Nz(r,"coords",this.op)});\n        }\n        setOutput(val);\n      }\n    `}};function Nz(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function Tz(e,t,n){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw new Error(`Cumulative ${n} for rank ${e} is not yet supported`)}function IC(e,t,n,a,r,s){let i=t.shape.length,o=S.getAxesPermutation([a],i),l=t;null!=o&&(l=Oe({inputs:{x:t},backend:n,attrs:{perm:o}}));let u=S.getInnerMostAxes(1,i)[0];if(u!==i-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${t.shape.length-1} but got axis=${a}`);let p=l.shape[u],h=rr({inputs:{x:l},backend:n});for(let t=0;t<=Math.ceil(Math.log2(p))-1;t++){let a=new og(e,l.shape,!1,s),r=[[t]],i=h;h=n.runWebGLProgram(a,[h],h.dtype,r),n.disposeIntermediateTensorInfo(i)}if(r){let t=new og(e,l.shape,r,s),a=h;h=n.runWebGLProgram(t,[h],h.dtype),n.disposeIntermediateTensorInfo(a)}if(null!=o){let e=Oe({inputs:{x:h},backend:n,attrs:{perm:S.getUndoAxesPermutation(o)}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(l),e}return h}function Trt(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a;return IC(Kc.Prod,r,n,s,i,o)}var kz={kernelName:ya,backendName:"webgl",kernelFunc:Trt};function krt(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a;return IC(Kc.Sum,r,n,s,i,o)}var Ez={kernelName:Jo,backendName:"webgl",kernelFunc:krt};function Ert(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,weights:s}=t,{size:i,binaryOutput:o}=a;if(1===r.shape.length){let e=n.readSync(r.dataId),t=n.readSync(s.dataId),a=Mw(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,a)}if(2===r.shape.length){let e=n.bufferSync(r),t=n.bufferSync(s),a=dL(e,t,i,o);return n.makeTensorInfo(a.shape,s.dtype,a.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}var _z={kernelName:gp,backendName:"webgl",kernelFunc:Ert},vC=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}};function _rt(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockSize:s,dataFormat:i}=a,o=r.shape[0],l=("NHWC"===i?r.shape[1]:r.shape[2])*s,u=("NHWC"===i?r.shape[2]:r.shape[3])*s,p=("NHWC"===i?r.shape[3]:r.shape[1])/(s*s),h=new vC("NHWC"===i?[o,l,u,p]:[o,p,l,u],s,i);return n.runWebGLProgram(h,[r],r.dtype)}var Az={kernelName:wa,backendName:"webgl",kernelFunc:_rt},Ad=class{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=we(this.outputShape.length);let s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels,l="",u="";n&&(l=a?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");let p=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${p}\n        ${u}\n        setOutput(result);\n      }\n    `}},$d=class{constructor(e,t=!1,n=null,a=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=we(this.outputShape.length);let s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,p=e.filterWidth,h=p,d="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<p;e++)d+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;d+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let e=0;e<p;e++)d+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;d+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){let t=2*e;if(d+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<p&&(i%2==1?(d+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,d+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):d+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<p)){let e=i%2==0?y.nearestLargerEven(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(d+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,d+=l>1?`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                     previous = getX(batch, xR, xCOffset, d1);\n                     xC${t+1} = vec4(previous.zw, xTexelC${t+1}.xy);\n                    } else {\n                     xC${t+1} = vec4(0.0, 0.0, xTexelC${t+1}.xy);\n                    }\n                    `:`\n                    xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                    `):d+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<p&&(i%2==1?(d+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<p&&(d+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(d+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<p&&(d+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<p&&(d+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<p&&(d+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}d+="\n    }\n  ",d+="\n      }\n    ";let c="",f="";n&&(c=a?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");let m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${c}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${d}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}};function Art(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=a,p=l;null==p&&(p=[1,1]),y.assert(S.eitherStridesOrDilationsAreOne(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));let h,d=S.computeConv2DInfo(r.shape,s.shape,i,p,o,u,!0);h=M().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?new $d(d):new Ad(d);let c=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(h,[r,s],"float32",c)}var $z={kernelName:Qo,backendName:"webgl",kernelFunc:Art},SC=class{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;let t=e.strideHeight,n=e.strideWidth,a=e.padInfo.top,r=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${a};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},NC=class{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;let t=e.filterHeight,n=e.filterWidth,a=e.strideHeight,r=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${a}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};function $rt(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,dy:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:p}=a,h=S.computeConv2DInfo(r.shape,p,i,o,l,u,!0),d=new SC(h);return n.runWebGLProgram(d,[r,s],"float32")}var Dz={kernelName:xp,backendName:"webgl",kernelFunc:$rt};function Drt(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,filter:s}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:p}=a,h=S.computeConv2DInfo(p,s.shape,i,o,l,u,!0),d=new NC(h);return n.runWebGLProgram(d,[r,s],"float32")}var Rz={kernelName:yp,backendName:"webgl",kernelFunc:Drt},TC=class{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}};function Rrt(e){let{inputs:t,backend:n}=e,{x:a}=t,r=[...a.shape,...a.shape],s=y.sizeFromShape(a.shape),i=it({inputs:{x:a},backend:n,attrs:{shape:[s]}}),o=new TC(s),l=n.runWebGLProgram(o,[i],i.dtype),u=it({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}var Fz={kernelName:bp,backendName:"webgl",kernelFunc:Rrt},kC=class{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;let{inHeight:t,inWidth:n,padInfo:a,strideHeight:r,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:p,left:h}=a;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${s});\n      const ivec2 pads = ivec2(${p}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}};function Frt(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:s,filter:i}=n,{strides:o,pad:l,dilations:u}=r,p=S.computeDilation2DInfo(s.shape,i.shape,o,l,"NHWC",u),h=new kC(p);t=a.runWebGLProgram(h,[s,i],"float32");let d=it({inputs:{x:t},backend:a,attrs:{shape:p.outShape}});return a.disposeIntermediateTensorInfo(t),d}var Oz={kernelName:Fl,backendName:"webgl",kernelFunc:Frt};function Ort(e){let{inputs:t,backend:n,attrs:a}=e,{equation:r}=a,s=t,{allDims:i,summedDims:o,idDims:l}=S.decodeEinsumEquation(r,s.length);S.checkEinsumDimSizes(i.length,l,s);let{path:u,steps:p}=S.getEinsumComputePath(o,l),h=p.length,d=null,c=i.length,f=[];for(let e=0;e<h;++e){for(let t of p[e]){let e,{permutationIndices:a,expandDims:r}=S.getEinsumPermutation(c,l[t]);S.isIdentityPermutation(a)?e=s[t]:(e=Oe({inputs:{x:s[t]},backend:n,attrs:{perm:a}}),f.push(e));let i=e.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);y.arraysEqual(e.shape,i)||(e=it({inputs:{x:e},backend:n,attrs:{shape:i}}),f.push(e)),null===d?d=e:(d=rg({inputs:{a:e,b:d},backend:n}),f.push(d))}e<h-1&&(u[e]>=0&&(d=Uc({inputs:{x:d},backend:n,attrs:{axis:u[e]-(i.length-c),keepDims:!1}}),f.push(d)),c--)}for(let e of f)e!==d&&n.disposeIntermediateTensorInfo(e);return d}var Pz={kernelName:wp,backendName:"webgl",kernelFunc:Ort},Prt="return (x >= 0.0) ? x : (exp(x) - 1.0);",Lrt="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n",Mrt=Ct({opSnippet:Prt,packedOpSnippet:Lrt}),Lz={kernelName:es,backendName:"webgl",kernelFunc:Mrt},zrt="return (b >= 1.0) ? a : a * (b + 1.0);",Brt="\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",Vrt=e=>{let{inputs:t,backend:n}=e,{dy:a,y:r}=t,s=M().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Po(Brt,a.shape,r.shape):new lo(zrt,a.shape,r.shape);return n.runWebGLProgram(s,[a,r],a.dtype)},Mz={kernelName:Cp,backendName:"webgl",kernelFunc:Vrt},Grt="\n  return vec4(equal(a, b));\n",Wrt="return float(a == b);",Urt=le({opSnippet:Wrt,packedOpSnippet:Grt,dtype:"bool",cpuKernelImpl:yL}),zz={kernelName:Ia,backendName:"webgl",kernelFunc:Urt},Hrt=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${S.ERF_P};\n  float a1 = ${S.ERF_A1};\n  float a2 = ${S.ERF_A2};\n  float a3 = ${S.ERF_A3};\n  float a4 = ${S.ERF_A4};\n  float a5 = ${S.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,qrt=Ct({opSnippet:Hrt}),Bz={kernelName:Ca,backendName:"webgl",kernelFunc:qrt},Krt=Lo+"\n  return exp(x);\n",jrt="\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Ik=Ct({opSnippet:Krt,packedOpSnippet:jrt,cpuKernelImpl:bL,dtype:"float32"}),Vz={kernelName:rs,backendName:"webgl",kernelFunc:Ik};function EC(e){let{inputs:t,attrs:n,backend:a}=e,{dim:r}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice(),l=r;return r<0&&(y.assert(-(i+1)<=r,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+r+1),o.splice(l,0,1),it({inputs:{x:s},backend:a,attrs:{shape:o}})}var Gz={kernelName:mi,backendName:"webgl",kernelFunc:EC},Wz="return exp(x) - 1.0;",Xrt=Ct({opSnippet:Wz,packedOpSnippet:Wz,cpuKernelImpl:wL}),Uz={kernelName:va,backendName:"webgl",kernelFunc:Xrt},sg=class{constructor(e,t,n){this.variableNames=["real","imag"];let a=t[1];this.outputShape=t;let r,s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,i=n?`${a}.0`:"1.0";if("real"===e)r="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);r="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${r}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${a});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${a}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${i};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}};function _C(e,t,n){let a=n.texData.get(e.dataId),r=y.sizeFromShape(e.shape),s=e.shape[e.shape.length-1],i=it({inputs:{x:e},backend:n,attrs:{shape:[r/s,s]}}),o=i.shape,l=new sg("real",o,t),u=new sg("imag",o,t),p=[{dataId:a.complexTensorInfos.real.dataId,dtype:a.complexTensorInfos.real.dtype,shape:o},{dataId:a.complexTensorInfos.imag.dataId,dtype:a.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,p,"float32"),d=n.runWebGLProgram(u,p,"float32"),c=$n({inputs:{real:h,imag:d},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d);let f=it({inputs:{x:c},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(c),f}function Yrt(e){let{inputs:t,backend:n}=e,{input:a}=t;return _C(a,!1,n)}var Hz={kernelName:Ip,backendName:"webgl",kernelFunc:Yrt},AC=class{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}};function Sl(e){let{backend:t,attrs:n}=e,{shape:a,value:r}=n,{dtype:s}=n;if(s=s||y.inferDtype(r),"string"===s){let e=y.getArrayFromDType(s,y.sizeFromShape(a));return e.fill(r),t.makeTensorInfo(a,s,e)}{let e=new AC(a,r),n=[[r]];return t.runWebGLProgram(e,[],s,n)}}var Dd,qz={kernelName:Ol,backendName:"webgl",kernelFunc:Sl},$C=class{constructor(e){this.variableNames=["Image"],this.outputShape=[];let t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}},Kz={kernelName:Sa,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{let{image:n}=e,a=t,r=new $C(n.shape);return a.runWebGLProgram(r,[n],n.dtype)}},jz="return floor(x);",Zrt=Ct({opSnippet:jz,packedOpSnippet:jz,cpuKernelImpl:CL}),Xz={kernelName:ns,backendName:"webgl",kernelFunc:Zrt},Jrt="\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",Qrt="\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",tnt=le({opSnippet:Jrt,packedOpSnippet:Qrt,dtype:"int32"}),Yz={kernelName:os,backendName:"webgl",kernelFunc:tnt},DC=class{constructor(e){this.variableNames=["A"];let t=Ge(),[n,a]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${a}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}},RC=class{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;let t=Ge(),[n,a]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${a}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}},Zz={kernelName:Zd,backendName:"webgl",kernelFunc:ent},vk=M().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function ent(e){let{inputs:t,backend:n,attrs:a}=e,{pixels:r}=t,{numChannels:s}=a,i="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,u]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],p=[u,l],h=[u,l,s];if(o||i){let e=M().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(null==Dd||e!==vk)&&(vk=e,Dd=document.createElement("canvas").getContext("2d",{willReadFrequently:vk})),Dd.canvas.width=l,Dd.canvas.height=u,Dd.drawImage(r,0,0,l,u),r=Dd.canvas}let d=n.makeTensorInfo(p,"int32");n.texData.get(d.dataId).usage=Yr.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(d.dataId),r);let c=M().getBool("WEBGL_PACK")?new RC(h):new DC(h),f=n.runWebGLProgram(c,[d],"int32");return n.disposeData(d.dataId),f}function rnt(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:s,filter:i,bias:o,preluActivationWeights:l}=n,{strides:u,pad:p,dataFormat:h,dilations:d,dimRoundingMode:c,activation:f,leakyreluAlpha:m}=r,g=S.convertConv2DDataFormat(h),b=S.computeConv2DInfo(s.shape,i.shape,u,d,p,c,!1,g),x=[],v=null!=o,w=null!=l,k="leakyrelu"===f,I=()=>{let e=[s,i],t=(e,t)=>{if("NCHW"===t&&1===e.shape.length&&1!==e.shape[0]){let t=it({inputs:{x:e},backend:a,attrs:{shape:[e.shape[0],1,1]}});return x.push(t),t}return e};if(v&&e.push(t(o,h)),w&&e.push(t(l,h)),k){let t=a.makeTensorInfo([],"float32",y.createScalarValue(m,"float32"));e.push(t),x.push(t)}return e};if(1!==b.filterHeight||1!==b.filterWidth||1!==b.dilationHeight||1!==b.dilationWidth||1!==b.strideHeight||1!==b.strideWidth||"SAME"!==b.padInfo.type&&"VALID"!==b.padInfo.type)if(b.strideWidth<=2&&"channelsLast"===g&&M().getBool("WEBGL_EXP_CONV")){let e=f?Il(f,!0):null,n=new _d(b,v,e,w,k),r=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]],s=I();t=a.runWebGLProgram(n,s,"float32",r)}else if(M().getBool("WEBGL_CONV_IM2COL"))t=gC({x:s,filter:i,convInfo:b,backend:a,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else{let e=f?Il(f,!1):null,n=new Ed(b,v,e,w,k),r=I();t=a.runWebGLProgram(n,r,"float32")}else t=hC({x:s,filter:i,convInfo:b,backend:a,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});let N=it({inputs:{x:t},backend:a,attrs:{shape:b.outShape}});return x.push(t),x.forEach((e=>a.disposeIntermediateTensorInfo(e))),N}var Jz={kernelName:Ni,backendName:"webgl",kernelFunc:rnt};function nnt(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:p,dimRoundingMode:h,activation:d,leakyreluAlpha:c}=a,f=[],m=p;null==m&&(m=[1,1]),y.assert(S.eitherStridesOrDilationsAreOne(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));let g,b=S.computeConv2DInfo(r.shape,s.shape,l,m,u,h,!0),x=M().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels==1,v=d?Il(d,x):null,w=[r,s],k=null!=i,I=null!=o,N="leakyrelu"===d;if(k&&w.push(i),I&&w.push(o),N){let e=n.makeTensorInfo([],"float32",y.createScalarValue(c,"float32"));w.push(e),f.push(e)}g=x?new $d(b,k,v,I,N):new Ad(b,k,v,I,N);let T=[[b.padInfo.top,b.padInfo.left],[b.strideHeight,b.strideWidth],[b.dilationHeight,b.dilationWidth],[b.inHeight,b.inWidth]],C=n.runWebGLProgram(g,w,"float32",T);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),C}var Qz={kernelName:Ti,backendName:"webgl",kernelFunc:nnt},FC=class{constructor(e,t,n,a){this.sliceDim=e,this.strides=t,this.paramsShape=a,this.variableNames=["x","indices"],this.outputShape=n;let r=Bt(n.length),s="\n    int index;";for(let e=0;e<this.sliceDim;e++)s+=`\n          index = round(getIndices(coords[0], ${e}));\n          out_of_bounds = out_of_bounds || index < 0;\n          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[e]};\n          flattenIndex += index * ${this.strides[e]};`;this.userCode=`\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          bool out_of_bounds = false;\n\n          ${s}\n\n          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));\n        }\n      `}};function ont(e){let{inputs:t,backend:n}=e,{params:a,indices:r}=t,s=r.shape,i=s[s.length-1],o=y.sizeFromShape(a.shape),[l,u,p,h]=S.prepareAndValidate(a,r),d=it({inputs:{x:r},backend:n,attrs:{shape:[u,i]}}),c=it({inputs:{x:a},backend:n,attrs:{shape:[y.sizeFromShape(a.shape)/p,p]}});if(n.shouldExecuteOnCPU([a,r])||"string"===a.dtype){let e=n.readSync(r.dataId),t=n.bufferSync(a),s=IL(e,t,a.dtype,u,i,p,h,a.shape,o);return n.makeTensorInfo(l,a.dtype,s.values)}let f=new FC(i,h,[u,p],a.shape),m=n.runWebGLProgram(f,[c,d],c.dtype),g=it({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(m),g}var t3={kernelName:Na,backendName:"webgl",kernelFunc:ont},OC=class{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;let n=Bt(this.rank),a=snt(e,2);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${a}));\n      }\n    `}};function snt(e,t){let n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[];for(let t=0;t<e.length;t++)2===t?a.push("index"):a.push(`${n[t]}`);return a.join()}function Sk(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,indices:s}=t,{axis:i,batchDims:o}=a,l=y.parseAxisParam(i,r.shape)[0];if(M().get("DEBUG")){let e=n.readSync(s.dataId),t=r.shape[l];for(let n=0;n<e.length;++n){let a=e[n];y.assert(a<=t-1&&a>=0,(()=>`GatherV2: the index value ${a} is not in [0, ${t-1}]`))}}let u=S.segment_util.collectGatherOpShapeInfo(r,s,l,o),p=y.sizeFromShape(s.shape),h=[],d=it({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),c=it({inputs:{x:s},backend:n,attrs:{shape:[u.batchSize,p/u.batchSize]}});h.push(d),h.push(c);let f=[u.batchSize,u.outerSize,p/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){let e=n.bufferSync(c),t=n.bufferSync(d),a=vL(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,a.dtype,a.values)}let m=new OC(d.shape,f),g=n.runWebGLProgram(m,[d,c],d.dtype);h.push(g);let b=it({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}var e3={kernelName:fi,backendName:"webgl",kernelFunc:Sk},int="return float(a > b);",ant="\n  return vec4(greaterThan(a, b));\n",lnt=le({opSnippet:int,packedOpSnippet:ant,cpuKernelImpl:SL,dtype:"bool"}),r3={kernelName:Ta,backendName:"webgl",kernelFunc:lnt},unt="return float(a >= b);",cnt="\n  return vec4(greaterThanEqual(a, b));\n",pnt=le({opSnippet:unt,packedOpSnippet:cnt,dtype:"bool",cpuKernelImpl:NL}),n3={kernelName:is,backendName:"webgl",kernelFunc:pnt};function mnt(e){let{inputs:t,backend:n}=e,{input:a}=t;return _C(a,!0,n)}var o3={kernelName:vp,backendName:"webgl",kernelFunc:mnt},fnt="return float(!isnan(x) && !isinf(x));",dnt=Ct({opSnippet:fnt,dtype:"bool"}),s3={kernelName:ka,backendName:"webgl",kernelFunc:dnt},hnt="return float(isinf(x));",gnt=Ct({opSnippet:hnt,dtype:"bool"}),i3={kernelName:Ea,backendName:"webgl",kernelFunc:gnt},xnt="return float(isnan(x));",ynt=Ct({opSnippet:xnt,dtype:"bool"}),a3={kernelName:as,backendName:"webgl",kernelFunc:ynt},bnt="return float(a < b);",wnt="\n  return vec4(lessThan(a, b));\n",Cnt=le({opSnippet:bnt,packedOpSnippet:wnt,cpuKernelImpl:TL,dtype:"bool"}),l3={kernelName:_a,backendName:"webgl",kernelFunc:Cnt},Int="return float(a <= b);",vnt="\n  return vec4(lessThanEqual(a, b));\n",Snt=le({opSnippet:Int,packedOpSnippet:vnt,cpuKernelImpl:kL,dtype:"bool"}),u3={kernelName:Aa,backendName:"webgl",kernelFunc:Snt};function Nnt(e){let{backend:t,attrs:n}=e,{start:a,stop:r,num:s}=n,i=EL(a,r,s);return t.makeTensorInfo([i.length],"float32",i)}var c3={kernelName:Np,backendName:"webgl",kernelFunc:Nnt},Tnt=Lo+"\n  return x < 0.0 ? 0./0. : log(x);\n",knt="\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",Ent=Ct({opSnippet:Tnt,packedOpSnippet:knt,cpuKernelImpl:_L}),p3={kernelName:us,backendName:"webgl",kernelFunc:Ent},_nt=Lo+"\n  return log(1.0 + x);\n",Ant=Ct({opSnippet:_nt}),m3={kernelName:$a,backendName:"webgl",kernelFunc:Ant},$nt="return float(a >= 1.0 && b >= 1.0);",Dnt="\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",Rnt=le({opSnippet:$nt,packedOpSnippet:Dnt,dtype:"bool"}),f3={kernelName:Da,backendName:"webgl",kernelFunc:Rnt},Fnt="return float(!(x >= 1.0));",Ont=Ct({opSnippet:Fnt}),d3={kernelName:Ra,backendName:"webgl",kernelFunc:Ont},Pnt="return float(a >= 1.0 || b >= 1.0);",Lnt="\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",Mnt=le({opSnippet:Pnt,packedOpSnippet:Lnt,dtype:"bool"}),h3={kernelName:Fa,backendName:"webgl",kernelFunc:Mnt},PC=class{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[];let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${a}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}},LC=class{constructor(e,t,n,a,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;let s=t,i=e[3]-1;this.outputShape=e;let o,l=`float(${n}) + float(${a}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}},znt=e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{depthRadius:s,bias:i,alpha:o,beta:l}=a,u=M().getBool("WEBGL_PACK_NORMALIZATION")?new LC(r.shape,s,i,o,l):new PC(r.shape,s,i,o,l);return n.runWebGLProgram(u,[r],r.dtype)},g3={kernelName:Pl,backendName:"webgl",kernelFunc:znt},MC=class{constructor(e,t,n,a,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=a,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${a}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${a})\n                * float(${r})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}},Bnt=e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r,y:s,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:p}=a,h=new MC(r.shape,o,l,u,p);return n.runWebGLProgram(h,[r,s,i],r.dtype)},x3={kernelName:Tp,backendName:"webgl",kernelFunc:Bnt};function y3(e,t,n,a){let r=y.sizeFromShape(t),s=it({inputs:{x:e},attrs:{shape:[y.sizeFromShape(e.shape)/r,r]},backend:a}),i=qn(s,e.dtype,"max",a),o=it({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),o}function Nk(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reductionIndices:s,keepDims:i}=a,o=r.shape.length,l=y.parseAxisParam(s,r.shape),u=l,p=S.getAxesPermutation(u,o),h=null!=p,d=n.shouldExecuteOnCPU([r]),c=r;if(h){if(d){let e=n.texData.get(c.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[p[e]];let a=Wc(e,r.shape,r.dtype,p,t);c=n.makeTensorInfo(t,r.dtype),n.texData.get(c.dataId).values=a}else c=Du(r,p,n);u=S.getInnerMostAxes(u.length,o)}S.assertAxesAreInnerMostDims("max",u,o);let f,[m,g]=S.computeOutAndReduceShapes(c.shape,u),b=m;if(i&&(b=S.expandShapeToKeepDim(m,l)),d){let e=n.texData.get(c.dataId).values,t=AL(e,y.sizeFromShape(g),b,r.dtype);f=n.makeTensorInfo(b,r.dtype),n.texData.get(f.dataId).values=t}else f=y3(c,g,b,n);return h&&n.disposeIntermediateTensorInfo(c),f}var b3={kernelName:cs,backendName:"webgl",kernelFunc:Nk},Vnt=Nd+"\n  return max(a, b);\n",Gnt="\n  vec4 result = vec4(max(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+ea+"\n  return result;\n",Wnt=le({opSnippet:Vnt,packedOpSnippet:Gnt,cpuKernelImpl:$L}),w3={kernelName:ps,backendName:"webgl",kernelFunc:Wnt};function Unt(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t;ri(r,"maxPool");let{filterSize:s,strides:i,pad:o,dimRoundingMode:l}=a;y.assert(S.eitherStridesOrDilationsAreOne(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));let u=S.computePool2DInfo(r.shape,s,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&y.arraysEqual(u.inShape,u.outShape))return rr({inputs:{x:r},backend:n});let p=new oi(u,"max",!1);return n.runWebGLProgram(p,[r],r.dtype)}var C3={kernelName:ms,backendName:"webgl",kernelFunc:Unt};function Hnt(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{filterSize:s,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=a,p=S.computePool3DInfo(r.shape,s,i,[1,1,1],o,u,l),h=new Ru(p,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}var I3={kernelName:Ll,backendName:"webgl",kernelFunc:Hnt},zC=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideHeight,n=e.strideWidth,a=e.dilationHeight,r=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=s-1-e.padInfo.left,l=r*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}},BC=class{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;let t=e.strideDepth,n=e.strideHeight,a=e.strideWidth,r=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,p=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,c=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${a}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${c} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}};function qnt(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s}=t,i=s,{filterSize:o,strides:l,pad:u,dimRoundingMode:p}=a,h=S.computePool3DInfo(i.shape,o,l,[1,1,1],u,p),d=new Ru(h,"max",!0),c=n.runWebGLProgram(d,[i],i.dtype),f=new BC(h),m=n.runWebGLProgram(f,[r,c],i.dtype);return n.disposeIntermediateTensorInfo(c),m}var v3={kernelName:Ep,backendName:"webgl",kernelFunc:qnt};function Knt(e){let{inputs:t,backend:n,attrs:a}=e,{dy:r,input:s,output:i}=t,o=s;ri([s,i],"maxPoolGrad");let{filterSize:l,strides:u,pad:p,dimRoundingMode:h}=a,d=S.computePool2DInfo(o.shape,l,u,1,p,h),c=new oi(d,"max",!0),f=n.runWebGLProgram(c,[o],o.dtype),m=new zC(d),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}var S3={kernelName:kp,backendName:"webgl",kernelFunc:Knt};function N3(e,t,n,a){let r=new oi(n,"max",!1),s=a.runWebGLProgram(r,[e],"float32");return r=new oi(n,"max",!0,!0,t),[s,a.runWebGLProgram(r,[e],"float32")]}var T3={kernelName:_p,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:a}=e,{filterSize:r,strides:s,pad:i,includeBatchInIndex:o}=t,l=n;y.assert(4===a.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${a.shape.length}.`));let u=[1,1];y.assert(S.eitherStridesOrDilationsAreOne(s,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${u}'`));let p=S.computePool2DInfo(a.shape,r,s,u,i),[h,d]=N3(a,o,p,l);return[h,d]}};function k3(e,t,n,a){let r=y.sizeFromShape(t),s=it({inputs:{x:e},attrs:{shape:[y.sizeFromShape(e.shape)/r,r]},backend:a}),i=qn(s,"float32","mean",a),o=it({inputs:{x:i},attrs:{shape:n},backend:a});return a.disposeIntermediateTensorInfo(s),a.disposeIntermediateTensorInfo(i),o}var E3={kernelName:fs,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{x:a}=e,{keepDims:r,axis:s}=t,i=n,o=a.shape.length,l=y.parseAxisParam(s,a.shape),u=l,p=S.getAxesPermutation(u,o),h=null!=p,d=i.shouldExecuteOnCPU([a]),c=[],f=a;if(h){if(d){let e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[p[e]];let n=Wc(e,a.shape,a.dtype,p,t);f=i.makeTensorInfo(t,a.dtype),i.texData.get(f.dataId).values=n}else f=Du(a,p,i);c.push(f),u=S.getInnerMostAxes(u.length,o)}S.assertAxesAreInnerMostDims("sum",u,o);let[m,g]=S.computeOutAndReduceShapes(f.shape,u),b=m;r&&(b=S.expandShapeToKeepDim(m,l));let x=k3(f,g,b,i);for(let e of c)i.disposeIntermediateTensorInfo(e);return x}};function jnt(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,keepDims:i}=a,o=r.shape.length,l=y.parseAxisParam(s,r.shape),u=l,p=S.getAxesPermutation(u,o),h=r;null!=p&&(h=Oe({inputs:{x:r},backend:n,attrs:{perm:p}}),u=S.getInnerMostAxes(u.length,r.shape.length)),S.assertAxesAreInnerMostDims("min",u,o);let d,[c,f]=S.computeOutAndReduceShapes(h.shape,u),m=it({inputs:{x:h},backend:n,attrs:{shape:[-1,y.sizeFromShape(f)]}}),g=qn(m,m.dtype,"min",n);return d=it(i?{inputs:{x:g},backend:n,attrs:{shape:S.expandShapeToKeepDim(c,l)}}:{inputs:{x:g},backend:n,attrs:{shape:c}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=p&&n.disposeIntermediateTensorInfo(h),d}var _3={kernelName:ds,backendName:"webgl",kernelFunc:jnt},Xnt=Nd+"\n  return min(a, b);\n",Ynt="\n  vec4 result = vec4(min(a, b));\n  bvec4 isNaNA = isnan(a);\n  bvec4 isNaNB = isnan(b);\n  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);\n  "+ea+"\n  return result;\n",Znt=le({opSnippet:Xnt,packedOpSnippet:Ynt,cpuKernelImpl:DL}),A3={kernelName:hs,backendName:"webgl",kernelFunc:Znt},VC=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let a=e.length,r=Bt(a),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a),l="reflect"===n?0:1;this.userCode=1!==a?`\n      ${r} start = ${r}(${s});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${a}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}},GC=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let a=e.length,r=Bt(a),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=er("rc",a),l=er("source",a),u=`${o[a-1]} < ${this.outputShape[a-1]}`,p=1===a?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1,d="";if(1===a){let e=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${p});\n        ${o[a-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${p});\n        }\n      `}else{let e=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${p});\n        ${o[a-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${p});\n        }\n        rc = outputLoc;\n        ${o[a-2]} += 1;\n        if(${o[a-2]} < ${this.outputShape[a-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${p});\n          ${o[a-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${p});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${s});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}},Jnt=({inputs:e,backend:t,attrs:n})=>{let{x:a}=e,{paddings:r,mode:s}=n,i=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new GC(a.shape,r,s):new VC(a.shape,r,s);return t.runWebGLProgram(i,[a],a.dtype)},$3={kernelName:gs,backendName:"webgl",kernelFunc:Jnt},Qnt="if (b == 0.0) return NAN;\n  return mod(a, b);",tot="\n  vec4 result = mod(a, b);\n  bvec4 isNaN = equal(b, vec4(0.0));\n  "+ea+"\n  return result;\n",eot=le({opSnippet:Qnt,packedOpSnippet:tot}),D3={kernelName:Oa,backendName:"webgl",kernelFunc:eot},WC=class{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}},rot="\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",not="\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",Tk=le({opSnippet:rot,packedOpSnippet:not,checkOutOfBounds:!0}),R3={kernelName:ts,backendName:"webgl",kernelFunc:Tk},F3="return a - b;",kk=le({opSnippet:F3,packedOpSnippet:F3,supportsComplex:!0,cpuKernelImpl:JL}),O3={kernelName:Ls,backendName:"webgl",kernelFunc:kk};function Ek(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{dim:s}=a,i=y.parseAxisParam([s],r.shape),o=Nk({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=S.expandShapeToKeepDim(o.shape,i),u=it({inputs:{x:o},backend:n,attrs:{shape:l}}),p=kk({inputs:{a:r,b:u},backend:n}),h=Ik({inputs:{x:p},backend:n}),d=Uc({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),c=it({inputs:{x:d},backend:n,attrs:{shape:l}}),f=Tk({inputs:{a:h,b:c},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),f}var P3={kernelName:Os,backendName:"webgl",kernelFunc:Ek};function oot(e){let{inputs:t,backend:n,attrs:a}=e,{logits:r}=t,{numSamples:s,seed:i,normalized:o}=a,l=o?r:Ek({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],p=l.shape[1],h=new WC(u,p,s),d=[[i]],c=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),c}var L3={kernelName:Ap,backendName:"webgl",kernelFunc:oot},sot=hr+"\n  return -x;\n",iot="\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n";function aot(e){let t,{inputs:n,backend:a}=e,{x:r}=n;if(a.shouldExecuteOnCPU([r])){let e=a.texData.get(r.dataId),[t,n]=FL(e.values,r.shape,r.dtype);return a.makeTensorInfo(n,r.dtype,t)}return t=M().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new An(r.shape,iot):new Mr(r.shape,sot),a.runWebGLProgram(t,[r],r.dtype)}var M3={kernelName:di,backendName:"webgl",kernelFunc:aot},lot=qr.nonMaxSuppressionV3Impl;function uot(e){S.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=a,u=n.readSync(r.dataId),p=n.readSync(s.dataId),{selectedIndices:h}=lot(u,p,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}var z3={kernelName:La,backendName:"webgl",kernelFunc:uot},cot=qr.nonMaxSuppressionV4Impl;function pot(e){S.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=a,p=n.readSync(r.dataId),h=n.readSync(s.dataId),{selectedIndices:d,validOutputs:c}=cot(p,h,i,o,l,u);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([c]))]}var B3={kernelName:Ma,backendName:"webgl",kernelFunc:pot},mot=qr.nonMaxSuppressionV5Impl;function fot(e){S.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");let{inputs:t,backend:n,attrs:a}=e,{boxes:r,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=a,p=n.readSync(r.dataId),h=n.readSync(s.dataId),d=i,c=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=mot(p,h,d,c,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}var V3={kernelName:za,backendName:"webgl",kernelFunc:fot},UC=class{constructor(e,t,n,a){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${a}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}},dot=e=>{let{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:i,onValue:o,offValue:l}=a,u=y.sizeFromShape(r.shape),p=new UC(u,i,o,l),h=it({inputs:{x:r},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(p,[h],s);n.disposeIntermediateTensorInfo(h);let c=it({inputs:{x:d},backend:n,attrs:{shape:[...r.shape,i]}});return n.disposeIntermediateTensorInfo(d),c},G3={kernelName:ys,backendName:"webgl",kernelFunc:dot};function ig(e){let{inputs:t,backend:n}=e,{x:a}=t;if("complex64"===a.dtype){let e=vl({inputs:{input:a},backend:n}),t=ig({inputs:{x:e},backend:n}),r=qc({inputs:{input:a},backend:n}),s=ig({inputs:{x:r},backend:n}),i=$n({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}return Sl({attrs:{shape:a.shape,dtype:a.dtype,value:"string"===a.dtype?"":0},backend:n})}var W3={kernelName:vi,backendName:"webgl",kernelFunc:ig};function U3(e){let{inputs:t,backend:n}=e,{x:a}=t;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){let e=vl({inputs:{input:a},backend:n}),t=U3({inputs:{x:e},backend:n}),r=qc({inputs:{input:a},backend:n}),s=ig({inputs:{x:r},backend:n}),i=$n({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}return Sl({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:n})}var H3={kernelName:hi,backendName:"webgl",kernelFunc:U3};function hot(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return EC({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{y.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),y.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=Ck({inputs:t.map((e=>{let t=EC({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}var q3={kernelName:gi,backendName:"webgl",kernelFunc:hot},HC=class{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let a=e.length,r=Bt(a),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,a);this.userCode=1!==a?`\n      ${r} start = ${r}(${s});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}},qC=class{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));let a=e.length,r=Bt(a),s=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=er("rc",a),l=er("source",a),u=`${o[a-1]} < ${this.outputShape[a-1]}`,p=1===a?"source":`vec2(${l.slice(-2).join()})`,h=[`${r} rc = outputLoc;`,`${o[a-1]} += 1;\n       if(${u}) {\n      `,1===a?"":`}\n       rc = outputLoc;\n       ${o[a-2]} += 1;\n       if(${o[a-2]} < ${this.outputShape[a-2]}) {`,1===a?"":`  ${o[a-1]} += 1;\n         if(${u}) {`],d=1===a?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))",c="";for(let e=0,t=1===a?2:4;e<t;e++)c+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${r} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${p});\n        }\n      `;c+=1===a?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${s});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${c}\n        setOutput(result);\n      }\n    `}},_k=e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{paddings:s,constantValue:i}=a;if(0===y.sizeFromShape(r.shape))return Sl({backend:n,attrs:{shape:s.map(((e,t)=>e[0]+r.shape[t]+e[1])),value:i,dtype:r.dtype}});let o=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new qC(r.shape,s,i):new HC(r.shape,s,i),l=[[i]];return n.runWebGLProgram(o,[r],r.dtype,l)},K3={kernelName:bs,backendName:"webgl",kernelFunc:_k},got="\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",xot="\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  bvec4 isNaN1 = lessThan(a, vec4(0.0));\n  bvec4 isNaN2 = lessThan(floor(b), b);\n  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);\n  "+ea+"\n  return result;\n",yot=le({opSnippet:got,packedOpSnippet:xot}),j3={kernelName:ws,backendName:"webgl",kernelFunc:yot};function bot(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:s}=n,{axis:i,keepDims:o}=r,l=s.shape.length,u=[],p=y.parseAxisParam(i,s.shape),h=p,d=S.getAxesPermutation(h,l),c=s;if(null!=d&&(c=Oe({inputs:{x:s},backend:a,attrs:{perm:d}}),h=S.getInnerMostAxes(h.length,l),u.push(c)),S.assertAxesAreInnerMostDims("prod",h,l),a.shouldExecuteOnCPU([c])){let e=a.texData.get(c.dataId).values,{outVals:n,outShape:r,outDtype:s}=PL(c.shape,c.dtype,e,h);t=a.makeTensorInfo(r,s,n)}else{let[e,n]=S.computeOutAndReduceShapes(c.shape,h),r=y.sizeFromShape(n),i=it({inputs:{x:c},backend:a,attrs:{shape:[-1,r]}}),o=qn(i,Hu(s.dtype),"prod",a);t=it({inputs:{x:o},backend:a,attrs:{shape:e}}),u.push(i),u.push(o)}if(o){u.push(t);let e=S.expandShapeToKeepDim(t.shape,p);t=it({inputs:{x:t},backend:a,attrs:{shape:e}})}return u.forEach((e=>a.disposeIntermediateTensorInfo(e))),t}var X3={kernelName:Is,backendName:"webgl",kernelFunc:bot};function wot(e){let{inputs:t,backend:n,attrs:a}=e,{paramsNestedSplits:r,paramsDenseValues:s,indices:i}=t,{outputRaggedRank:o}=a,l=r.map((e=>n.readSync(e.dataId))),u=r.map((e=>e.shape)),p=n.readSync(s.dataId),h=n.readSync(i.dataId),[d,c,f]=LL(l,u,p,s.shape,s.dtype,h,i.shape,o),m=d.map((e=>n.makeTensorInfo([e.length],"int32",e))),g=n.makeTensorInfo(f,s.dtype,c);return m.concat([g])}var Y3={kernelName:$p,backendName:"webgl",kernelFunc:wot};function Cot(e){let{inputs:t,backend:n}=e,{starts:a,limits:r,deltas:s}=t,i=n.readSync(a.dataId),o=n.readSync(r.dataId),l=n.readSync(s.dataId),[u,p]=ML(i,a.shape,a.dtype,o,r.shape,l,s.shape);return[n.makeTensorInfo([u.length],"int32",u),n.makeTensorInfo([p.length],a.dtype,p)]}var Z3={kernelName:Dp,backendName:"webgl",kernelFunc:Cot};function Iot(e){let{inputs:t,backend:n,attrs:a}=e,{shape:r,values:s,defaultValue:i,rowPartitionTensors:o}=t,{rowPartitionTypes:l}=a,u=n.readSync(r.dataId),p=n.readSync(s.dataId),h=n.readSync(i.dataId),d=o.map((e=>n.readSync(e.dataId))),c=o.map((e=>e.shape)),[f,m]=zL(u,r.shape,p,s.shape,s.dtype,h,i.shape,d,c,l);return n.makeTensorInfo(f,s.dtype,m)}var J3={kernelName:Rp,backendName:"webgl",kernelFunc:Iot},Ak=e=>{let{backend:t,attrs:n}=e,{start:a,stop:r,step:s,dtype:i}=n,o=BL(a,r,s,i);return t.makeTensorInfo([o.length],i,o)},Q3={kernelName:Ml,backendName:"webgl",kernelFunc:Ak},vot="return 1.0 / x;",Sot=Ct({opSnippet:vot}),tB={kernelName:vs,backendName:"webgl",kernelFunc:Sot},Not=hr+"\n  return (x < 0.0) ? 0.0 : x;\n",Tot="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",kot=Ct({opSnippet:Not,packedOpSnippet:Tot}),eB={kernelName:Ss,backendName:"webgl",kernelFunc:kot},Eot=hr+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",_ot="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Aot=Ct({opSnippet:Eot,packedOpSnippet:_ot}),rB={kernelName:ks,backendName:"webgl",kernelFunc:Aot},KC=class{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,p=[a&&t>1?i-1:i,a&&n>1?o-1:o],h=[a&&t>1?t-1:t,a&&n>1?n-1:n];u=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${p[0]/h[0]},\n          ${p[1]/h[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}},jC=class{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,p=[a&&t>1?i-1:i,a&&n>1?o-1:o],h=[a&&t>1?t-1:t,a&&n>1?n-1:n];u=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${p[0]/h[0]},\n          ${p[1]/h[1]},\n          ${p[1]/h[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}};function $ot(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a,[l,u]=o,p=M().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new jC(r.shape,l,u,s,i):new KC(r.shape,l,u,s,i);return n.runWebGLProgram(p,[r],"float32")}var nB={kernelName:Ts,backendName:"webgl",kernelFunc:$ot},XC=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,a,r]=t,[,s,i]=e,o=[n&&s>1?a-1:a,n&&i>1?r-1:r],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],p=o[1]/l[1],h=1/u,d=1/p,c=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${p});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${a-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}};function Dot(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a,o=new XC(s.shape,r.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}var oB={kernelName:Pp,backendName:"webgl",kernelFunc:Dot},YC=class{constructor(e,t,n,a,r){this.variableNames=["A"],this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,p=[a&&t>1?i-1:i,a&&n>1?o-1:o],h=[a&&t>1?t-1:t,a&&n>1?n-1:n],d=a?"0.5":"0.0";u=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${p[0]/h[0]},\n          ${p[1]/h[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}},ZC=class{constructor(e,t,n,a,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];let[s,i,o,l]=e;this.outputShape=[s,t,n,l];let u,p=[a&&t>1?i-1:i,a&&n>1?o-1:o],h=[a&&t>1?t-1:t,a&&n>1?n-1:n],d=a?"0.5":"0.0";u=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${p[0]/h[0]},\n          ${p[1]/h[1]},\n          ${p[1]/h[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${u};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}};function Rot(e){let{inputs:t,backend:n,attrs:a}=e,{images:r}=t,{alignCorners:s,halfPixelCenters:i,size:o}=a,[l,u]=o,p=M().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ZC(r.shape,l,u,s,i):new YC(r.shape,l,u,s,i);return n.runWebGLProgram(p,[r],r.dtype)}var sB={kernelName:Ns,backendName:"webgl",kernelFunc:Rot},JC=class{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;let[,a,r]=t,[,s,i]=e,o=[n&&s>1?a-1:a,n&&i>1?r-1:r],l=[n&&s>1?s-1:s,n&&i>1?i-1:i],u=o[0]/l[0],p=o[1]/l[1],h=1/u,d=1/p,c=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${p});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${c});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}};function Fot(e){let{inputs:t,backend:n,attrs:a}=e,{images:r,dy:s}=t,{alignCorners:i}=a,o=new JC(s.shape,r.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}var iB={kernelName:Op,backendName:"webgl",kernelFunc:Fot},QC=class{constructor(e,t){this.variableNames=["x"];let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);let a=e.map(((n,a)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(a))).join(","),r=Bt(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${a}));\n      }\n    `}},tI=class{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;let n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;let a=er("rc",n),r=`${a[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${a[n-2]} + 1 < ${this.outputShape[n-2]}`,i=Bt(n);var o;function l(n){let a=e.map(((a,r)=>function(n,a){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${a[n]} - 1`:`${a[n]}`}(r,n)));return`getChannel(getX(${a.join(",")}), vec2(${a.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${o=a.slice(),l(o)};\n          if(${r}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",l(e)}(a.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",l(e)}(a.slice())};\n            if(${r}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",l(e)}(a.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}};function Oot(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a,i=r.shape.length,o=y.parseAxisParam(s,r.shape);if(0===i)return rr({inputs:{x:r},backend:n});let l=M().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tI(r.shape,o):new QC(r.shape,o);return n.runWebGLProgram(l,[r],r.dtype)}var aB={kernelName:Es,backendName:"webgl",kernelFunc:Oot},eI=class{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];let n=e[1],a=e[2];this.outputShape=e;let r="";r="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${r}\n          if(coordX >= 0 && coordX < ${a} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}},lB={kernelName:Xa,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{let{image:a}=e,{radians:r,fillValue:s,center:i}=t,o=n,l=new eI(a.shape,s),[u,p]=S.getImageCenter(i,a.shape[1],a.shape[2]),h=[[u,p,Math.sin(r),Math.cos(r)]];return o.runWebGLProgram(l,[a],a.dtype,h)}},Pot="\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n",Lot=Ct({opSnippet:Pot}),uB={kernelName:_s,backendName:"webgl",kernelFunc:Lot},Mot="return inversesqrt(x);",zot=Ct({opSnippet:Mot,cpuKernelImpl:VL}),cB={kernelName:As,backendName:"webgl",kernelFunc:zot},Rd=class{constructor(e,t,n,a,r,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;let o=Bt(r.length),l=Bt(s.length),u="";1===n?u="i":2===n&&(u="i, j");let p=`getIndices(${u})`,h="";1===a?h="i":2===a&&(h="i, coords[1]");let d=`getUpdates(${h})`,c=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${r});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${p});\n              flattenedIndex += index * ${c};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}};function Bot(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r,updates:s}=t,{shape:i}=a,{sliceRank:o,numUpdates:l,sliceSize:u,strides:p,outputSize:h}=S.calculateShapes(s,r,i),d=[h/u,u];if(0===h)return n.makeTensorInfo(i,r.dtype);let c=it({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),f=it({inputs:{x:s},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new Rd(l,o,c.shape.length,f.shape.length,p,d),y=n.runWebGLProgram(g,[f,c,m],f.dtype),b=it({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}var pB={kernelName:Ba,backendName:"webgl",kernelFunc:Bot},rI=class{constructor(e,t,n,a){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,n];let r=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,s=2===M().getNumber("WEBGL_VERSION")?"while (left < right) {":r,i="left"===a?"<":"<=";this.userCode=`\n       int findBound(int batch, float value) {\n         int left = 0;\n         int right = numInputs;\n         int mid;\n         ${s}\n           mid = (left + right) / 2;\n           if (getSortedSequence(batch, mid) ${i} value) {\n             left = mid + 1;\n           } else {\n             right = mid;\n           }\n         }\n         return right;\n       }\n\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int valueIndex = coords[1];\n\n         float value = getValues(batch, valueIndex);\n\n         setOutput(float(findBound(batch, value)));\n       }\n     `}};function Vot(e){let{inputs:t,backend:n,attrs:a}=e,{sortedSequence:r,values:s}=t,{side:i}=a,o=new rI(r.shape[0],r.shape[1],s.shape[1],i),l=[[r.shape[1]]];return n.runWebGLProgram(o,[r,s],"int32",l)}var mB={kernelName:Lp,backendName:"webgl",kernelFunc:Vot},nI=class{constructor(e,t,n){let a,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",a="resRC";else{let n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let a=0;a<t.length;a++)i.push(`${n[a]}`),a<e&&s.push(`${n[a]}`);a=s.join(),r=i.join()}let s=Bt(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${a});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}};function Got(e){let{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,i=new nI(a.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[a,r,s],ar(r.dtype,s.dtype))}var fB={kernelName:yi,backendName:"webgl",kernelFunc:Got},Wot=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${S.SELU_SCALEALPHA};\n  float scale = ${S.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,Uot=Ct({opSnippet:Wot}),dB={kernelName:Va,backendName:"webgl",kernelFunc:Uot},Hot=Lo+"\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",qot="\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Kot=Ct({opSnippet:Hot,packedOpSnippet:qot,cpuKernelImpl:WL}),hB={kernelName:Ds,backendName:"webgl",kernelFunc:Kot},jot="\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n",Xot=Ct({opSnippet:jot}),gB={kernelName:Wa,backendName:"webgl",kernelFunc:Xot},Yot=Lo+"\n  return sin(x);\n",Zot=Ct({opSnippet:Yot}),xB={kernelName:$s,backendName:"webgl",kernelFunc:Zot},Jot="\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n",Qot=Ct({opSnippet:Jot}),yB={kernelName:Ga,backendName:"webgl",kernelFunc:Qot},tst="\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n",est=Ct({opSnippet:tst}),bB={kernelName:Ua,backendName:"webgl",kernelFunc:est},rst=e=>{let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:i}=a;y.assert(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));let o=s.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<r.shape.length;++e)l.push([0,0]);let u=[],p=_k({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=S.getReshaped(p.shape,s,o,!1),d=S.getPermuted(h.length,s.length,!1),c=S.getReshapedPermuted(p.shape,s,o,!1),f=it({inputs:{x:p},backend:n,attrs:{shape:h}}),m=Oe({inputs:{x:f},backend:n,attrs:{perm:d}}),g=it({inputs:{x:m},backend:n,attrs:{shape:c}});return u.push(p),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g},wB={kernelName:wi,backendName:"webgl",kernelFunc:rst};function nst(e){let{inputs:t,backend:n}=e,{indices:a,values:r,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==a.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${a.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n         ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);let o=n.readSync(a.dataId),l=n.readSync(r.dataId),u=n.readSync(s.dataId),p=n.readSync(i.dataId)[0],[h,d,c,f,m]=HL(o,a.shape,a.dtype,l,r.dtype,u,p);return[n.makeTensorInfo(d,a.dtype,h),n.makeTensorInfo([d[0]],r.dtype,c),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],a.dtype,new Int32Array(m))]}var CB={kernelName:zl,backendName:"webgl",kernelFunc:nst};function ost(e){let{inputs:t,backend:n}=e,{inputIndices:a,inputShape:r,newShape:s}=t;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape ${a.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=Array.from(n.readSync(r.dataId)),o=n.readSync(a.dataId),l=Array.from(n.readSync(s.dataId)),[u,p,h]=qL(o,a.shape,a.dtype,i,l);return[n.makeTensorInfo(p,a.dtype,u),n.makeTensorInfo([h.length],s.dtype,new Int32Array(h))]}var IB={kernelName:Ha,backendName:"webgl",kernelFunc:ost};function sst(e){let{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);let i=n.readSync(a.dataId),o=n.readSync(r.dataId),l=n.readSync(s.dataId),[u,p]=Bw(i,a.shape,a.dtype,o,l,!0);return n.makeTensorInfo(p,a.dtype,u)}var vB={kernelName:Bl,backendName:"webgl",kernelFunc:sst};function ist(e){let{inputs:t,backend:n}=e,{data:a,indices:r,segmentIds:s}=t;if(a.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);let i=n.readSync(a.dataId),o=n.readSync(r.dataId),l=n.readSync(s.dataId),[u,p]=Bw(i,a.shape,a.dtype,o,l);return n.makeTensorInfo(p,a.dtype,u)}var SB={kernelName:Vl,backendName:"webgl",kernelFunc:ist};function ast(e){let{inputs:t,backend:n,attrs:a}=e,{sparseIndices:r,sparseValues:s,defaultValue:i}=t,{outputShape:o}=a,{sliceRank:l,numUpdates:u,sliceSize:p,strides:h,outputSize:d}=S.calculateShapes(s,r,o);if("string"===s.dtype){let e=n.bufferSync(r),t=n.bufferSync(s),a=y.decodeString(n.readSync(i.dataId)[0]),c=GL(e,t,o,d,p,u,l,h,a,!1);return n.makeTensorInfo(o,c.dtype,c.values)}let c=new Rd(u,l,r.shape.length,s.shape.length,h,[d,1],!1),f=n.runWebGLProgram(c,[s,r,i],s.dtype),m=it({inputs:{x:f},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),m}var NB={kernelName:Mp,backendName:"webgl",kernelFunc:ast};function lst(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=a,o=y.parseAxisParam(i,r.shape)[0],l=S.prepareSplitSize(r,s,o),u=r.shape.length,p=new Array(u).fill(0),h=r.shape.slice();return l.map((e=>{let t=[...h];t[o]=e;let a=si({inputs:{x:r},backend:n,attrs:{begin:p,size:t}});return p[o]+=e,a}))}var TB={kernelName:Ci,backendName:"webgl",kernelFunc:lst},kB="return sqrt(x);",ust=Ct({opSnippet:kB,packedOpSnippet:kB,cpuKernelImpl:KL}),EB={kernelName:Rs,backendName:"webgl",kernelFunc:ust},cst="return x * x;",pst=Ct({opSnippet:cst}),_B={kernelName:Gl,backendName:"webgl",kernelFunc:pst},AB="return (a - b) * (a - b);",mst=le({opSnippet:AB,packedOpSnippet:AB}),$B={kernelName:Ps,backendName:"webgl",kernelFunc:mst};function fst({inputs:e,attrs:t,backend:n}){let{x:a}=e,r=hr+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new Mr(a.shape,r);return n.runWebGLProgram(s,[a],a.dtype)}var DB={kernelName:fo,backendName:"webgl",kernelFunc:fst},oI=class{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;let a=n.length,r=Bt(n.length),s=Bt(n.length),i="";if(1===a)i="coords * strides + begin";else{let e=0;i=n.map(((t,a)=>(e++,1===n.length?`coords * strides[${a}] + begin[${a}]`:`coords[${e-1}] * strides[${a}] + begin[${a}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${e});\n      ${r} strides = ${r}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}};function dst(e){let t,{inputs:n,backend:a,attrs:r}=e,{x:s}=n,{begin:i,end:o,strides:l,beginMask:u,endMask:p,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:c}=r,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:b,isSimpleSlice:x,begin:v,end:w,strides:k}=Me.sliceInfo(s.shape,i,o,l,u,p,h,d,c);if(g)t=it({inputs:{x:s},backend:a,attrs:{shape:m}});else if(b||x){y.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));let e=Me.computeOutShape(v,w,k),n=si({inputs:{x:s},backend:a,attrs:{begin:v,size:e}});t=it({inputs:{x:n},backend:a,attrs:{shape:m}}),a.disposeIntermediateTensorInfo(n)}else if(a.shouldExecuteOnCPU([s])){let e=a.readSync(s.dataId),n=wt(s.shape,s.dtype,e),r=jL(f,n,k,v);t=a.makeTensorInfo(m,s.dtype,r.values)}else{let e=new oI(v,k,f);t=a.runWebGLProgram(e,[s],s.dtype)}let I=it({inputs:{x:t},backend:a,attrs:{shape:m}});return a.disposeIntermediateTensorInfo(t),I}var RB={kernelName:qa,backendName:"webgl",kernelFunc:dst};function hst(e){let{inputs:t,backend:n,attrs:a}=e,{separator:r,nGramWidths:s,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=a,{data:p,dataSplits:h}=t,d=n.readSync(p.dataId),c=n.readSync(h.dataId),[f,m]=XL(d,c,r,s,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}var FB={kernelName:Wl,backendName:"webgl",kernelFunc:hst};function gst(e){let{inputs:t,backend:n,attrs:a}=e,{skipEmpty:r}=a,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);let o=n.readSync(s.dataId),l=n.readSync(i.dataId)[0],[u,p,h]=YL(o,l,r),d=p.length;return[n.makeTensorInfo([d,2],"int32",u),n.makeTensorInfo([d],"string",p),n.makeTensorInfo([2],"int32",new Int32Array(h))]}var OB={kernelName:Ul,backendName:"webgl",kernelFunc:gst};function xst(e){let{inputs:t,backend:n,attrs:a}=e,{numBuckets:r}=a,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");let i=n.readSync(s.dataId),o=ZL(i,r);return n.makeTensorInfo(s.shape,"int32",o)}var PB={kernelName:Hl,backendName:"webgl",kernelFunc:xst},yst="return tan(x);",bst=Ct({opSnippet:yst}),LB={kernelName:Ms,backendName:"webgl",kernelFunc:bst},wst="\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n",Cst=Ct({opSnippet:wst}),MB={kernelName:zs,backendName:"webgl",kernelFunc:Cst},sI=class{constructor(e,t){this.variableNames=["A"];let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[a]*t[a];this.outputShape=n,this.rank=n.length;let a=Bt(this.rank),r=Ist(e);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}};function Ist(e){let t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;let n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],a=[];for(let t=0;t<e.length;t++)a.push(`imod(${n[t]}, ${e[t]})`);return a.join()}function $k(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{reps:s}=a;if("string"===r.dtype||r.shape.length>5){let e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>y.decodeString(e))):e,a=wt(r.shape,r.dtype,t),i=QL(a,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}let i=new sI(r.shape,s);return n.runWebGLProgram(i,[r],r.dtype)}var zB={kernelName:to,backendName:"webgl",kernelFunc:$k},iI=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}},aI=class{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}};function jc(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function BB(e){let t=1;for(;t<e;)t*=2;return t}function vst(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{k:s,sorted:i}=a,o=M().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=M().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,p=u[u.length-1];if(n.shouldExecuteOnCPU([r])||p<o||s>l){let e=n.readSync(r.dataId),[t,a]=tM(e,u,r.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(a.shape,a.dtype,a.values)]}if(0===s)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===p)return[r,Sl({attrs:{shape:u,dtype:"int32",value:0},backend:n})];let h=n.texData.get(r.dataId),d=null!==h&&h.isPacked,c=d?n.unpackTensor(r):r,f=y.sizeFromShape(u)/p,m=it({inputs:{x:c},attrs:{shape:[f,p]},backend:n});d&&jc(n,c);let g=BB(s),b=BB(p),x=null,v=()=>null===x?[m,m]:[m,x],w=(e,t,a)=>{let r=v(),s=new iI(a),i=[[p],[null===x?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=x;x=n.runWebGLProgram(s,r,"int32",i),jc(n,o)};for(let e=1;e<g;e*=2){let t=2*e;for(let n=e;n>=1;n/=2)w(t,n,[f,b])}for(let e=b;e>g;e/=2){let t=v(),a=new aI([f,e/2]),r=[[p],[null===x?1:0],[g]],s=x;x=n.runWebGLProgram(a,t,"int32",r),jc(n,s);let i=g/2,o=2*i;for(let e=i;e>=1;e/=2)w(o,e,x.shape)}let k=x;x=si({inputs:{x},backend:n,attrs:{begin:0,size:[f,s]}}),jc(n,k);let I=Sk({inputs:{x:m,indices:x},backend:n,attrs:{axis:1,batchDims:1}});jc(n,m);let S=u.slice(0,-1);S.push(s),k=x,x=it({inputs:{x},attrs:{shape:S},backend:n}),jc(n,k);let N=I;return I=it({inputs:{x:I},attrs:{shape:S},backend:n}),jc(n,N),[I,x]}var VB={kernelName:Ka,backendName:"webgl",kernelFunc:vst},lI=class{constructor(e,t,n,a,r,s){this.variableNames=["Image","Transforms"],this.outputShape=s;let i,o="nearest"===n?1:2;switch(a){case"constant":default:i=1;break;case"reflect":i=2;break;case"wrap":i=3;break;case"nearest":i=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${i} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${i} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${r});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${r});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${o} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}};function Sst(e){let{inputs:t,backend:n,attrs:a}=e,{image:r,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=a,[p,h,d,c]=r.shape,[f,m]=null!=u?u:[h,d],g=new lI(h,d,i,o,l,[p,f,m,c]);return n.runWebGLProgram(g,[r,s],"float32")}var GB={kernelName:ja,backendName:"webgl",kernelFunc:Sst};function Nst(e){let{inputs:t,attrs:n,backend:a}=e,{axis:r}=n,{x:s}=t;ri(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");let i=a.readSync(s.dataId),{outputValues:o,outputShape:l,indices:u}=eM(i,r,s.shape,s.dtype);return[a.makeTensorInfo(l,s.dtype,o),a.makeTensorInfo([u.length],"int32",u)]}var WB={kernelName:zp,backendName:"webgl",kernelFunc:Nst};function Tst(e){let{inputs:t,backend:n,attrs:a}=e,{value:r}=t,{axis:s}=a;s<0&&(s+=r.shape.length);let i=r,o=i.shape.length,l=r.shape[s],u=new Array(o-1),p=0;for(let e=0;e<o;e++)e!==s&&(u[p++]=i.shape[e]);let h=[],d=new Array(o).fill(0),c=i.shape.slice();c[s]=1;let f=new Array(l);for(let e=0;e<f.length;e++){d[s]=e;let t=si({inputs:{x:i},backend:n,attrs:{begin:d,size:c}}),a=it({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=a,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}var UB={kernelName:Ii,backendName:"webgl",kernelFunc:Tst},uI=class{constructor(e,t){this.variableNames=["x","segmentIds"];let n=e.windowSize,a=e.batchSize,r=e.inSize,s=e.numSegments,i=s*Math.ceil(r/n);this.outputShape=[a,i];let o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ",p="";r%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let h="";r%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}};function kst(e){let{inputs:t,backend:n,attrs:a}=e,{x:r,segmentIds:s}=t,{numSegments:i}=a,o=r.shape.length,l=[],u=0,p=S.getAxesPermutation([u],o),h=r;null!=p&&(h=Oe({inputs:{x:r},backend:n,attrs:{perm:p}}),l.push(h),u=S.getInnerMostAxes(1,o)[0]);let d=S.segment_util.computeOutShape(h.shape,u,i),c=y.sizeFromShape([h.shape[u]]),f=it({inputs:{x:h},backend:n,attrs:{shape:[-1,c]}});l.push(f);let m=Hu(r.dtype),g=(e,t,a,r,s)=>{let i=e.shape[0],o=e.shape[1],u=S.segment_util.segOpComputeOptimalWindowSize(o,s),p=new uI({windowSize:u,inSize:o,batchSize:i,numSegments:s},t),h=n.compileAndRun(p,[e,a],r);if(l.push(h),h.shape[1]===s)return h;let d=Ak({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),c=$k({inputs:{x:d},backend:n,attrs:{reps:[o/u]}});return l.push(d),l.push(c),g(h,t,c,r,s)},b=it({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:d}}),x=b;if(null!=p){l.push(b);let e=S.getUndoAxesPermutation(p);x=Oe({inputs:{x},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}var qt,Fu,qB,HB={kernelName:ql,backendName:"webgl",kernelFunc:kst},Est=[AM,DM,RM,FM,PM,LM,MM,zM,GM,WM,UM,HM,qM,KM,jM,XM,YM,ZM,JM,QM,tz,rz,nz,oz,lz,cz,pz,wM,fz,hz,gz,xz,yz,bz,wz,Cz,Iz,vz,Sz,kz,Ez,_z,Az,$z,Dz,Rz,Fz,Oz,Pz,Lz,Mz,zz,Bz,Vz,Gz,Uz,Hz,qz,Kz,Xz,Yz,Zz,Jz,Qz,t3,e3,r3,n3,bM,o3,dz,s3,i3,a3,CM,l3,u3,c3,p3,m3,f3,d3,h3,g3,x3,b3,w3,C3,I3,v3,S3,T3,E3,_3,A3,$3,D3,L3,SM,M3,z3,B3,V3,sz,G3,H3,q3,K3,j3,IM,X3,Y3,Z3,J3,Q3,iz,R3,tB,eB,rB,TM,nB,oB,sB,iB,aB,lB,uB,cB,pB,mB,fB,dB,hB,gB,xB,yB,ez,P3,bB,wB,CB,IB,vB,SB,NB,TB,EB,_B,$B,DB,RB,FB,OB,PB,O3,EM,LB,MB,zB,VB,GB,_M,WB,UB,HB,W3];for(let e of Est)zu(e);function _st(e){qB=e.wasm.cwrap(Si,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function Ast(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==r.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");let{transposeA:l,transposeB:u,activation:p,leakyreluAlpha:h}=a,d=n.dataIdMap.get(r.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=0;if(null!=i){let e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}let m=null==o?0:n.dataIdMap.get(o.dataId).id,g=Fu[p];if(null==g)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);let y=l?r.shape[2]:r.shape[1],b=u?s.shape[1]:s.shape[2],x=Wr.assertAndGetBroadcastShape(r.shape.slice(0,-2),s.shape.slice(0,-2)),v=n.makeOutput([...x,y,b],r.dtype),w=n.dataIdMap.get(v.dataId).id,k=new Uint8Array(new Int32Array(r.shape).buffer),I=new Uint8Array(new Int32Array(s.shape).buffer);return qB(d,k,r.shape.length,c,I,s.shape.length,l,u,g,f,m,h||0,w),v}!function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(qt||(qt={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"}(Fu||(Fu={}));var KB={kernelName:Si,backendName:"wasm",setupFunc:_st,kernelFunc:Ast};function te(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){let{backend:a,inputs:{x:r}}=e,s=a.dataIdMap.get(r.dataId).id,i=a.makeOutput(r.shape,t||r.dtype),o=a.dataIdMap.get(i.dataId).id;return 0===y.sizeFromShape(i.shape)||n(s,qt[r.dtype],o),i}}}var jB=te(ui);function ue(e,t,n){let a;return{kernelName:e,backendName:"wasm",setupFunc:function(t){a=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(e){let{backend:t,inputs:r}=e,{a:s,b:i}=r,o=t.dataIdMap.get(s.dataId).id,l=t.dataIdMap.get(i.dataId).id,u=null!=n?n:s.dtype,p=S.assertAndGetBroadcastShape(s.shape,i.shape),h=t.makeOutput(p,u);if(0===y.sizeFromShape(p))return h;let d=new Uint8Array(new Int32Array(s.shape).buffer),c=new Uint8Array(new Int32Array(i.shape).buffer),f=t.dataIdMap.get(h.dataId).id;return a(o,d,s.shape.length,l,c,i.shape.length,qt[s.dtype],f),h}}}var YB,$st=!0,XB=ue(Qn,$st);function Dst(e){YB=e.wasm.cwrap(Wo,null,["array","number","number","number"])}function Rst(e){let{inputs:t,backend:n}=e,a=n.makeOutput(t[0].shape,t[0].dtype);if(0===y.sizeFromShape(a.shape))return a;let r=t.map((e=>n.dataIdMap.get(e.dataId).id)),s=new Uint8Array(new Int32Array(r).buffer),i=n.dataIdMap.get(a.dataId).id;return YB(s,r.length,qt[a.dtype],i),a}var ZB={kernelName:Wo,backendName:"wasm",setupFunc:Dst,kernelFunc:Rst};function Xc(e){let{inputs:{x:t},backend:n}=e;if("string"===t.dtype)return nr(n.readSync(t.dataId),t.shape,t.dtype);let a=n.makeOutput(t.shape,t.dtype),r=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(a).set(r),a}var QB,JB={kernelName:mo,backendName:"wasm",kernelFunc:Xc};function Fst(e){QB=e.wasm.cwrap(eo,null,["number","array","number","number","number","array","number"])}function uo(e){let{inputs:t,backend:n,attrs:a}=e,[r,s]=Pst(t.x.shape,a.perm),i=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(i=!1);let o=Ost(t.x.shape,a.perm),l={dataId:t.x.dataId,shape:r,dtype:t.x.dtype};if(i){let e=Xc({inputs:t,backend:n});return e.shape=o,e}let u=n.makeOutput(o,l.dtype),p=n.dataIdMap.get(l.dataId).id,h=n.dataIdMap.get(u.dataId).id,d=new Uint8Array(new Int32Array(s).buffer),c=new Uint8Array(new Int32Array(l.shape).buffer);return QB(p,c,l.shape.length,qt[l.dtype],h,d,s.length),u}function Ost(e,t){let n=new Array(e.length);for(let a=0;a<n.length;a++)n[a]=e[t[a]];return n}function Pst(e,t){let n=[],a=[];for(let r=0;r<e.length;++r)1!==e[r]&&n.push(e[r]),1!==e[t[r]]&&a.push(t[r]);for(let e=0;e<a.length;++e){let t=-1;for(let n=0;n<a.length;++n)a[n]>=e&&(-1===t||a[t]>a[n])&&(t=n);a[t]=e}return[n,a]}var eV,tV={kernelName:eo,backendName:"wasm",kernelFunc:uo,setupFunc:Fst};function Cn(e,t,n){let a=e.shape,r=e.shape.length,s=y.parseAxisParam(t,a),i=s,o=S.getAxesPermutation(i,r),l=null,u=!1;if(null!=o){let t=new Array(r);for(let e=0;e<t.length;e++)t[e]=a[o[e]];i=S.getInnerMostAxes(i.length,r),l=uo({inputs:{x:e},attrs:{perm:o},backend:n});let s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(l.dataId).id!==s&&(u=!0)}return{transposed:l,originalAxes:s,axes:i,inputWasTransposed:u}}function Lst(e){eV=e.wasm.cwrap(pa,null,["number, number, number"])}function Mst(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:p,originalAxes:h,inputWasTransposed:d}=Cn(i,r,t);d&&(l=u,o=t.dataIdMap.get(u.dataId).id);let c=l.shape.length;S.assertAxesAreInnerMostDims("all",p,c);let[f,m]=S.computeOutAndReduceShapes(l.shape,p),g=y.sizeFromShape(m),b=t.makeOutput(f,i.dtype);if(0!==y.sizeFromShape(l.shape)){let e=t.dataIdMap.get(b.dataId).id;eV(o,g,e)}if(d&&t.disposeData(u.dataId),s){let e=S.expandShapeToKeepDim(b.shape,h);b.shape=e}return b}var nV,rV={kernelName:pa,backendName:"wasm",setupFunc:Lst,kernelFunc:Mst};function zst(e){nV=e.wasm.cwrap(ma,null,["number, number, number"])}function Bst(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:p,originalAxes:h,inputWasTransposed:d}=Cn(i,r,t);d&&(l=u,o=t.dataIdMap.get(u.dataId).id);let c=l.shape.length;S.assertAxesAreInnerMostDims("any",p,c);let[f,m]=S.computeOutAndReduceShapes(l.shape,p),g=y.sizeFromShape(m),b=t.makeOutput(f,i.dtype);if(0!==y.sizeFromShape(l.shape)){let e=t.dataIdMap.get(b.dataId).id;nV(o,g,e)}if(d&&t.disposeData(u.dataId),s){let e=S.expandShapeToKeepDim(b.shape,h);b.shape=e}return b}var sV,oV={kernelName:ma,backendName:"wasm",setupFunc:zst,kernelFunc:Bst};function Vst(e){sV=e.wasm.cwrap(Uo,null,["number","number","number","number","number"])}function Gst(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r}=a,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=i,l=s,{transposed:u,axes:p,inputWasTransposed:h}=Cn(s,r,t);if(h){let e=t.dataIdMap.get(u.dataId).id;e!==i&&(l=u,o=e)}let d=l.shape.slice(0,-1),c=t.makeOutput(d,"int32"),f=t.dataIdMap.get(c.dataId).id,m=y.sizeFromShape(c.shape),g=l.shape[p[0]];return sV(o,qt[l.dtype],m,g,f),h&&t.disposeData(u.dataId),c}var aV,iV={kernelName:Uo,backendName:"wasm",kernelFunc:Gst,setupFunc:Vst};function Wst(e){aV=e.wasm.cwrap(Ho,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Ust(e){let{inputs:t,attrs:n,backend:a}=e,r=t.x,s=a.dataIdMap.get(r.dataId).id,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,p=S.computePool2DInfo(r.shape,i,o,1,l,u),h=p.filterHeight,d=p.filterWidth,c=p.padInfo.top,f=p.padInfo.right,m=p.padInfo.bottom,g=p.padInfo.left,y=p.strideHeight,b=p.strideWidth,x=p.inChannels;if("channelsLast"!==p.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);if(1!==p.dilationWidth||1!==p.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${p.dilationHeight}, ${p.dilationWidth}].`);let v=a.makeOutput(p.outShape,"float32"),w=a.dataIdMap.get(v.dataId).id;return aV(s,r.shape[0],r.shape[1],r.shape[2],h,d,c,f,m,g,y,b,x,w),v}var lV={kernelName:Ho,backendName:"wasm",setupFunc:Wst,kernelFunc:Ust};function ur(e){let{inputs:t,attrs:n}=e,{x:a}=t,{shape:r}=n,s=y.sizeFromShape(a.shape),i=y.inferFromImplicitShape(r,s);return y.assert(s===y.sizeFromShape(i),(()=>`new shape: ${i}, old shape: ${a.shape}. New shape and old shape must have the same number of elements.`)),e.backend.incRef(a.dataId),{dataId:a.dataId,shape:i,dtype:a.dtype}}var cV,uV={kernelName:xi,backendName:"wasm",kernelFunc:ur};function Hst(e){cV=e.wasm.cwrap(qo,null,["number","array","number","number","array","number","number","number","number"])}function qst(e){let{inputs:t,backend:n,attrs:a}=e,{a:r,b:s}=t,{transposeA:i,transposeB:o}=a;if("float32"!==r.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");let l=r.shape.length,u=s.shape.length,p=i?r.shape[l-2]:r.shape[l-1],h=o?s.shape[u-1]:s.shape[u-2],d=i?r.shape[l-1]:r.shape[l-2],c=o?s.shape[u-2]:s.shape[u-1],f=r.shape.slice(0,-2),m=s.shape.slice(0,-2),g=y.sizeFromShape(f),b=y.sizeFromShape(m),x=Wr.assertAndGetBroadcastShape(r.shape.slice(0,-2),s.shape.slice(0,-2)).concat([d,c]);y.assert(p===h,(()=>`Error in matMul: inner shapes (${p}) and (${h}) of Tensors with shapes ${r.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`));let v=o?[b,c,h]:[b,h,c],w=ur({inputs:{x:r},backend:n,attrs:{shape:i?[g,p,d]:[g,d,p]}}),k=ur({inputs:{x:s},backend:n,attrs:{shape:v}}),I=n.dataIdMap.get(w.dataId).id,S=n.dataIdMap.get(k.dataId).id,N=i?w.shape[2]:w.shape[1],T=o?k.shape[1]:k.shape[2],C=Math.max(g,b),E=n.makeOutput([C,N,T],w.dtype),_=n.dataIdMap.get(E.dataId).id,$=new Uint8Array(new Int32Array(w.shape).buffer),A=new Uint8Array(new Int32Array(k.shape).buffer);return cV(I,$,w.shape.length,S,A,k.shape.length,i,o,_),n.disposeData(w.dataId),n.disposeData(k.dataId),E.shape=x,E}var pV={kernelName:qo,backendName:"wasm",setupFunc:Hst,kernelFunc:qst};function Mo(e){let{inputs:{x:t},attrs:{begin:n,size:a},backend:r}=e,[s,i]=Me.parseSliceParams(t,n,a),o=Me.isSliceContinous(t.shape,s,i),l=r.readSync(t.dataId),u=r.makeOutput(i,t.dtype),p=y.computeStrides(t.shape),h=r.dataIdMap.get(u.dataId);if(o){let e=Me.computeFlatOffset(s,p);return"string"===t.dtype?h.stringBytes=l.slice(e,e+y.sizeFromShape(i)):r.typedArrayFromHeap(u).set(l.subarray(e,e+y.sizeFromShape(i))),u}if("string"===t.dtype){let e=Rc(l,s,i,t.shape,t.dtype);return h.stringBytes=e,u}let d=r.typedArrayFromHeap(u),c=t.shape.length;if(2===c)Kst(l,p[0],d,s,i);else if(3===c)jst(l,p[0],p[1],d,s,i);else if(4===c)Xst(l,p[0],p[1],p[2],d,s,i);else{let e=Rc(l,s,i,t.shape,t.dtype);d.set(e)}return u}function Kst(e,t,n,a,r){let s=0,i=a[0],o=a[1],l=i+r[0];for(let a=i;a<l;a++){let i=a*t+o;n.set(e.subarray(i,i+r[1]),s),s+=r[1]}}function jst(e,t,n,a,r,s){let i=0,o=r[0],l=r[1],u=r[2],p=o+s[0],h=l+s[1];for(let r=o;r<p;r++)for(let o=l;o<h;o++){let l=r*t+o*n+u;a.set(e.subarray(l,l+s[2]),i),i+=s[2]}}function Xst(e,t,n,a,r,s,i){let o=0,l=s[0],u=s[1],p=s[2],h=l+i[0],d=u+i[1],c=p+i[2],f=s[3];for(let s=l;s<h;s++)for(let l=u;l<d;l++)for(let u=p;u<c;u++){let p=s*t+l*n+u*a+f;r.set(e.subarray(p,p+i[3]),o),o+=i[3]}}var mV={kernelName:bi,backendName:"wasm",kernelFunc:Mo};function Yst(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,crops:i}=a,o=s.reduce(((e,t)=>e*t)),l=S.getReshaped(r.shape,s,o),u=S.getPermuted(l.length,s.length),p=S.getReshapedPermuted(r.shape,s,o),h=S.getSliceBeginCoords(i,s.length),d=S.getSliceSize(p,i,s.length),c=ur({inputs:{x:r},backend:n,attrs:{shape:l}}),f=uo({inputs:{x:c},backend:n,attrs:{perm:u}}),m=Mo({inputs:{x:ur({inputs:{x:f},backend:n,attrs:{shape:p}})},backend:n,attrs:{begin:h,size:d}});return n.disposeData(c.dataId),n.disposeData(f.dataId),n.disposeData(c.dataId),m}var fV={kernelName:ci,backendName:"wasm",kernelFunc:Yst};function ii(e){let{inputs:{x:t},attrs:{dtype:n},backend:a}=e,r=a.makeOutput(t.shape,n),s=a.typedArrayFromHeap(t);return a.typedArrayFromHeap(r).set(s),r}var gV,dV={kernelName:co,backendName:"wasm",kernelFunc:ii},hV=te(Ko);function Zst(e){gV=e.wasm.cwrap(po,null,["number","number","number","number"])}function Jst(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{clipValueMin:s,clipValueMax:i}=a,o=n.dataIdMap.get(r.dataId).id,l=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(l.dataId).id;return gV(o,s,i,u),l}var xV={kernelName:po,backendName:"wasm",setupFunc:Zst,kernelFunc:Jst};function Dk(e){let{inputs:t,backend:n}=e,a=y.parseAxisParam(e.attrs.axis,t[0].shape)[0],r=t.map((e=>e.shape));S.assertParamsConsistent(r,a);let s=S.computeOutShape(t.map((e=>e.shape)),a),i=t.filter((e=>y.sizeFromShape(e.shape)>0));if(1===i.length)return Xc({inputs:{x:i[0]},backend:n});let o=n.makeOutput(s,t[0].dtype);if(0===y.sizeFromShape(s))return o;if("string"===i[0].dtype){let e=i.map((e=>{let t=[-1,y.sizeFromShape(e.shape.slice(a))];return ur({inputs:{x:e},backend:n,attrs:{shape:t}})})),r=e.map((e=>({vals:n.readSync(e.dataId),shape:e.shape})));s=S.computeOutShape(e.map((e=>e.shape)),1);let l=1===e[0].shape[0],u=Ac(r,s,t[0].dtype,l),p=S.computeOutShape(i.map((e=>e.shape)),a);return o.shape=p,n.dataIdMap.get(o.dataId).stringBytes=S.fromStringArrayToUint8(u),e.forEach((e=>n.disposeData(e.dataId))),o}let l=y.sizeFromShape(i[0].shape.slice(0,a)),u=0,p=i.map((e=>{let t=y.sizeFromShape(e.shape.slice(a));return u+=t,t})),h=i.map((e=>n.typedArrayFromHeap(e))),d=n.typedArrayFromHeap(o);for(let e=0;e<l;e++){let t=e*u;for(let n=0;n<h.length;n++){let a=p[n],r=e*a,s=h[n].subarray(r,r+a);d.set(s,t),t+=a}}return o}var bV,yV={kernelName:pi,backendName:"wasm",kernelFunc:Dk};function Qst(e){bV=e.wasm.cwrap(jo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function tit(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s}=t,i=a.dataIdMap.get(r.dataId).id,o=a.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:p,dimRoundingMode:h,dataFormat:d}=n,c=S.convertConv2DDataFormat(d),f=S.computeConv2DInfo(r.shape,s.shape,l,u,p,h,!1,c),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,x=f.padInfo.bottom,v=f.padInfo.left,w=f.dilationHeight,k=f.dilationWidth,I=f.strideHeight,N=f.strideWidth,T=f.inChannels,C=f.outChannels,E="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);let _=a.makeOutput(f.outShape,"float32"),$=a.dataIdMap.get(_.dataId).id;return bV(i,r.shape[0],r.shape[1],r.shape[2],o,m,g,y,b,x,v,E,w,k,I,N,T,C,$),_}var CV,wV={kernelName:jo,backendName:"wasm",setupFunc:Qst,kernelFunc:tit};function eit(e){CV=e.wasm.cwrap(Xo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function rit(e){let{backend:t,inputs:n,attrs:a}=e,{dy:r,filter:s}=n,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,inputShape:p}=a,h=S.convertConv2DDataFormat(l),d=S.computeConv2DInfo(p,s.shape,i,1,o,u,!1,h),{batchSize:c,filterHeight:f,filterWidth:m,inChannels:g,inHeight:b,inWidth:x,outChannels:v,outHeight:w,outWidth:k,strideHeight:I,strideWidth:N}=d,T=f-1-d.padInfo.top,C=m-1-d.padInfo.left,E="channelsLast"===d.dataFormat,_=y.computeStrides(d.inShape),$=y.computeStrides(r.shape),[A,R,F]=y.computeStrides(s.shape),D=_[0],M=E?_[1]:_[2],O=E?_[2]:1,z=E?1:_[1],L=$[0],P=E?$[1]:$[2],B=E?$[2]:1,W=E?1:$[1],V=t.makeOutput(d.inShape,"float32"),U=t.dataIdMap.get(V.dataId).id,G=t.dataIdMap.get(r.dataId).id,H=t.dataIdMap.get(s.dataId).id;return CV(G,H,c,f,m,b,x,g,w,k,v,I,N,T,C,A,R,F,D,M,O,z,L,P,B,W,U),V}var Rk,NV,IV={kernelName:Xo,backendName:"wasm",setupFunc:eit,kernelFunc:rit},vV=te(Yo),SV=te(Zo);function nit(e){NV=e.wasm.cwrap(ba,null,["number","number","number","number","array","number","number","number","number","number"])}function oit(e){let t,{backend:n,inputs:a,attrs:r}=e,{method:s,extrapolationValue:i,cropSize:o}=r,{image:l,boxes:u,boxInd:p}=a,h=u.shape[0],[d,c]=o,f=[h,d,c,l.shape[3]],m=n.dataIdMap.get(l.dataId);"float32"!==l.dtype&&(t=ii({backend:n,inputs:{x:l},attrs:{dtype:"float32"}}),m=n.dataIdMap.get(t.dataId));let g=m.id,y=n.dataIdMap.get(u.dataId).id,b=n.dataIdMap.get(p.dataId).id,x=n.makeOutput(f,"float32"),v=n.dataIdMap.get(x.dataId).id,w=new Uint8Array(new Int32Array(l.shape).buffer);return NV(g,y,b,h,w,d,c,Rk[s],i,v),null!=t&&n.disposeData(t.dataId),x}!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(Rk||(Rk={}));var kV,TV={kernelName:ba,backendName:"wasm",setupFunc:nit,kernelFunc:oit};function sit(e){kV=e.wasm.cwrap(ya,null,["number","number","number","number","number","number"])}function iit(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a,l=r.shape.length;y.assert("float32"===r.dtype||"int32"===r.dtype,(()=>`cumprod does not support ${r.dtype} tensors in the WASM backend`));let u=S.getAxesPermutation([s],l),p=r;null!==u&&(p=uo({inputs:{x:r},attrs:{perm:u},backend:n}));let h=S.getInnerMostAxes(1,l)[0];S.assertAxesAreInnerMostDims("cumprod",[h],l);let d=n.makeOutput(p.shape,p.dtype),c=p.shape[h],f=n.dataIdMap.get(p.dataId).id,m=n.dataIdMap.get(d.dataId).id;kV(f,i?1:0,o?1:0,c,m,qt[r.dtype]);let g=d;return null!==u&&(g=uo({inputs:{x:d},attrs:{perm:S.getUndoAxesPermutation(u)},backend:n}),n.disposeData(p.dataId),n.disposeData(d.dataId)),g}var _V,EV={kernelName:ya,backendName:"wasm",setupFunc:sit,kernelFunc:iit};function ait(e){_V=e.wasm.cwrap(Jo,null,["number","number","number","number","number","number"])}function lit(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{axis:s,exclusive:i,reverse:o}=a,l=r.shape.length;y.assert("float32"===r.dtype||"int32"===r.dtype,(()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`));let u=S.getAxesPermutation([s],l),p=r;null!==u&&(p=uo({inputs:{x:r},attrs:{perm:u},backend:n}));let h=S.getInnerMostAxes(1,l)[0];S.assertAxesAreInnerMostDims("cumsum",[h],l);let d=n.makeOutput(p.shape,p.dtype),c=p.shape[h],f=n.dataIdMap.get(p.dataId).id,m=n.dataIdMap.get(d.dataId).id;_V(f,i?1:0,o?1:0,c,m,qt[r.dtype]);let g=d;return null!==u&&(g=uo({inputs:{x:d},attrs:{perm:S.getUndoAxesPermutation(u)},backend:n}),n.disposeData(p.dataId),n.disposeData(d.dataId)),g}var $V,AV={kernelName:Jo,backendName:"wasm",setupFunc:ait,kernelFunc:lit};function uit(e){$V=e.wasm.cwrap(wa,null,["number","number","number","array","number","array","array","number","number"])}function cit(e){let{backend:t,inputs:n,attrs:a}=e,{x:r}=n,{blockSize:s,dataFormat:i}=a,o=r.shape[0],l=("NHWC"===i?r.shape[1]:r.shape[2])*s,u=("NHWC"===i?r.shape[2]:r.shape[3])*s,p=("NHWC"===i?r.shape[3]:r.shape[1])/(s*s),h="NHWC"===i?[o,l,u,p]:[o,p,l,u],d=t.makeOutput(h,"float32"),c=t.dataIdMap.get(r.dataId).id,f=new Uint8Array(new Int32Array(y.computeStrides(r.shape)).buffer),m=new Uint8Array(new Int32Array(h).buffer),g=new Uint8Array(new Int32Array(y.computeStrides(h)).buffer),b=t.dataIdMap.get(d.dataId).id;return $V(c,s,"NHWC"===i?1:0,f,r.shape.length-1,m,g,h.length,b),d}var RV,DV={kernelName:wa,backendName:"wasm",setupFunc:uit,kernelFunc:cit};function pit(e){RV=e.wasm.cwrap(Qo,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function mit(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s}=t,i=a.dataIdMap.get(r.dataId).id,o=a.dataIdMap.get(s.dataId).id,{strides:l,dilations:u,pad:p,dimRoundingMode:h}=n,d=null==u?[1,1]:u,c=S.computeConv2DInfo(r.shape,s.shape,l,d,p,h,!0),f=c.filterHeight,m=c.filterWidth,g=c.padInfo.top,y=c.padInfo.right,b=c.padInfo.bottom,x=c.padInfo.left,v=c.dilationHeight,w=c.dilationWidth,k=c.strideHeight,I=c.strideWidth,N=c.inChannels,T=c.outChannels,C="SAME"===c.padInfo.type?1:0;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);let E=a.makeOutput(c.outShape,"float32"),_=a.dataIdMap.get(E.dataId).id;return RV(i,r.shape[0],r.shape[1],r.shape[2],o,f,m,g,y,b,x,C,v,w,k,I,N,T,_),E}var FV={kernelName:Qo,backendName:"wasm",setupFunc:pit,kernelFunc:mit},OV=te(es),fit=!1,PV=ue(Ia,fit,"bool"),LV=te(rs,"float32");function cI(e){let{inputs:t,attrs:n,backend:a}=e,{input:r}=t,{dim:s}=n,i=r.shape.length,o=r.shape.slice(),l=s;return s<0&&(y.assert(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+s+1),o.splice(l,0,1),ur({inputs:{x:r},backend:a,attrs:{shape:o}})}var MV={kernelName:mi,backendName:"wasm",kernelFunc:cI};function Fk(e){let{attrs:{shape:t,value:n,dtype:a},backend:r}=e,s=r.makeOutput(t,a);return r.typedArrayFromHeap(s).fill(n),s}var BV,zV={kernelName:Ol,backendName:"wasm",kernelFunc:Fk};function dit(e){BV=e.wasm.cwrap(Sa,null,["number","number","number","number","number","number"])}function hit(e){let{inputs:t,backend:n}=e,{image:a}=t,r=n.makeOutput(a.shape,a.dtype),s=n.dataIdMap.get(a.dataId).id,i=n.dataIdMap.get(r.dataId).id,[o,l,u,p]=a.shape;return BV(s,o,l,u,p,i),r}var UV,VV={kernelName:Sa,backendName:"wasm",kernelFunc:hit,setupFunc:dit},GV=te(ns),git=!1,WV=ue(os,git);function xit(e){UV=e.wasm.cwrap(ss,null,["number","number","number","number","number","number","number"])}function yit(e){let{backend:t,inputs:n,attrs:a}=e,{varianceEpsilon:r}=a,{x:s,mean:i,variance:o,offset:l,scale:u}=n,p=t.dataIdMap.get(s.dataId).id,h=t.dataIdMap.get(i.dataId).id,d=t.dataIdMap.get(o.dataId).id,c=null!=l?t.dataIdMap.get(l.dataId).id:0,f=null!=u?t.dataIdMap.get(u.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===y.sizeFromShape(s.shape))return m;let g=t.dataIdMap.get(m.dataId).id;return UV(p,h,d,c,f,r,g),m}var qV,HV={kernelName:ss,backendName:"wasm",setupFunc:xit,kernelFunc:yit};function bit(e){qV=e.wasm.cwrap(Ni,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function wit(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:p,dataFormat:h,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=S.computeConv2DInfo(r.shape,s.shape,l,p,u,d),g=Fu[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);let y=a.dataIdMap.get(r.dataId).id,b=a.dataIdMap.get(s.dataId).id,x=m.outChannels,v=0;if(null!=i){let e=a.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);v=e.id}let w=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,N=m.padInfo.right,T=m.padInfo.bottom,C=m.padInfo.left,E=m.dilationHeight,_=m.dilationWidth,$=m.strideHeight,A=m.strideWidth,R=m.inChannels,F="SAME"===m.padInfo.type?1:0,D=m.batchSize,M=m.inHeight,O=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let z=a.makeOutput(m.outShape,"float32"),L=a.dataIdMap.get(z.dataId).id,P=null==o?0:a.dataIdMap.get(o.dataId).id;return qV(y,D,M,O,b,w,k,v,I,N,T,C,F,E,_,$,A,R,x,g,P,f||0,L),z}var jV,KV={kernelName:Ni,backendName:"wasm",setupFunc:bit,kernelFunc:wit};function Cit(e){jV=e.wasm.cwrap(Ti,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Iit(e){let{inputs:t,attrs:n,backend:a}=e,{x:r,filter:s,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:p,dataFormat:h,dimRoundingMode:d,activation:c,leakyreluAlpha:f}=n,m=S.computeConv2DInfo(r.shape,s.shape,l,p,u,d,!0),g=Fu[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);let y=a.dataIdMap.get(r.dataId).id,b=a.dataIdMap.get(s.dataId).id,x=m.outChannels,v=0;if(null!=i){let e=a.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);v=e.id}let w=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,N=m.padInfo.right,T=m.padInfo.bottom,C=m.padInfo.left,E=m.dilationHeight,_=m.dilationWidth,$=m.strideHeight,A=m.strideWidth,R=m.inChannels,F="SAME"===m.padInfo.type?1:0,D=m.batchSize,M=m.inHeight,O=m.inWidth;if("NHWC"!==h)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${h}'. Please use 'NHWC'.`);let z=a.makeOutput(m.outShape,"float32"),L=a.dataIdMap.get(z.dataId).id,P=null==o?0:a.dataIdMap.get(o.dataId).id;return jV(y,D,M,O,b,w,k,v,I,N,T,C,F,E,_,$,A,R,x,g,P,f||0,L),z}var YV,XV={kernelName:Ti,backendName:"wasm",setupFunc:Cit,kernelFunc:Iit};function vit(e){YV=e.wasm.cwrap(Na,null,["number","number","number","number","number","number","array","number"])}function Sit(e){let{backend:t,inputs:n}=e,{params:a,indices:r}=n,[s,i,o,l]=sx.prepareAndValidate(a,r),u=t.makeOutput(s,a.dtype);if(0===i)return u;let p=r.shape,h=p[p.length-1],d=t.dataIdMap.get(a.dataId).id,c=t.dataIdMap.get(r.dataId).id,f=new Uint8Array(new Int32Array(l).buffer),m=t.dataIdMap.get(u.dataId).id;return YV(d,qt[a.dtype],c,i,h,o,f,m),u}var JV,ZV={kernelName:Na,backendName:"wasm",setupFunc:vit,kernelFunc:Sit};function Nit(e){JV=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function Tit(e){let{backend:t,inputs:n,attrs:a}=e,{x:r,indices:s}=n,{axis:i,batchDims:o}=a,l=y.parseAxisParam(i,r.shape)[0],u=t.readSync(s.dataId),p=r.shape[l];for(let e=0;e<u.length;++e){let t=u[e];y.assert(t<=p-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${p-1}]`))}let h=S.segment_util.collectGatherOpShapeInfo(r,s,l,o),d=ur({inputs:{x:r},attrs:{shape:[h.batchSize,h.outerSize,h.dimSize,h.sliceSize]},backend:t}),c=y.sizeFromShape(s.shape),f=ur({inputs:{x:s},attrs:{shape:[h.batchSize,c/h.batchSize]},backend:t}),m=[h.batchSize,h.outerSize,c/h.batchSize,h.sliceSize],g=t.makeOutput(m,r.dtype);if(0===y.sizeFromShape(r.shape))return g;let b=d.shape.length-1,x=t.dataIdMap.get(d.dataId).id,v=t.dataIdMap.get(f.dataId).id,w=t.dataIdMap.get(g.dataId).id,k=new Uint8Array(new Int32Array(y.computeStrides(d.shape)).buffer),I=new Uint8Array(new Int32Array(y.computeStrides(m)).buffer);return JV(x,qt[r.dtype],k,b,v,h.batchSize,I,w),t.disposeData(d.dataId),t.disposeData(f.dataId),g.shape=h.outputShape,g}var nG,QV={kernelName:fi,backendName:"wasm",setupFunc:Nit,kernelFunc:Tit},kit=!1,tG=ue(Ta,kit,"bool"),Eit=!1,eG=ue(is,Eit,"bool"),rG=te(as,"bool");function _it(e){nG=e.wasm.cwrap(ls,null,["number","number","number","number"])}function Ait(e){let{inputs:{x:t},attrs:{alpha:n},backend:a}=e,r=a.dataIdMap.get(t.dataId).id,s=a.makeOutput(t.shape,"float32");if(0!==y.sizeFromShape(t.shape)){let e=a.dataIdMap.get(s.dataId).id;nG(r,qt[t.dtype],n,e)}return s}var mG,oG={kernelName:ls,backendName:"wasm",setupFunc:_it,kernelFunc:Ait},$it=!1,sG=ue(_a,$it,"bool"),Dit=!1,iG=ue(Aa,Dit,"bool"),aG=te(us),Rit=!1,lG=ue(Da,Rit,"bool"),uG=te(Ra),Fit=!1,cG=ue(Fa,Fit,"bool"),Oit=!1,pG=ue(h1,Oit,"bool");function Pit(e){mG=e.wasm.cwrap(cs,null,["number","number","number","number"])}function Lit(e){let{backend:t,inputs:n,attrs:a}=e,{reductionIndices:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=i,{transposed:u,axes:p,originalAxes:h,inputWasTransposed:d}=Cn(i,r,t);d&&(l=u,o=t.dataIdMap.get(u.dataId).id);let c=l.shape.length;S.assertAxesAreInnerMostDims("max",p,c);let[f,m]=S.computeOutAndReduceShapes(l.shape,p),g=y.sizeFromShape(m),b=t.makeOutput(f,i.dtype);if(0!==y.sizeFromShape(l.shape)){let e=t.dataIdMap.get(b.dataId).id;mG(o,qt[i.dtype],g,e)}if(d&&t.disposeData(u.dataId),s){let e=S.expandShapeToKeepDim(b.shape,h);b.shape=e}return b}var hG,fG={kernelName:cs,backendName:"wasm",setupFunc:Pit,kernelFunc:Lit},Mit=!1,dG=ue(ps,Mit);function zit(e){hG=e.wasm.cwrap(ms,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Bit(e){let{inputs:t,attrs:n,backend:a}=e,r=t.x,s=a.dataIdMap.get(r.dataId).id;y.assert("float32"===r.dtype,(()=>`Error in MaxPool: only float32 input is supported. Got ${r.dtype}.`));let{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=n,p=S.computePool2DInfo(r.shape,i,o,1,l,u),h=p.filterHeight,d=p.filterWidth,c=p.padInfo.top,f=p.padInfo.right,m=p.padInfo.bottom,g=p.padInfo.left,b=p.dilationHeight,x=p.dilationWidth,v=p.strideHeight,w=p.strideWidth,k=p.inChannels,I=p.outChannels;if("channelsLast"!==p.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);let N=a.makeOutput(p.outShape,"float32"),T=a.dataIdMap.get(N.dataId).id;return hG(s,r.shape[0],r.shape[1],r.shape[2],h,d,c,f,m,g,b,x,v,w,k,I,T),N}var xG,gG={kernelName:ms,backendName:"wasm",setupFunc:zit,kernelFunc:Bit};function Vit(e){xG=e.wasm.cwrap(fs,null,["number, number, number"])}function Git(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:h,originalAxes:d,inputWasTransposed:c}=Cn(i,r,t),f=h;if(c){let e=t.dataIdMap.get(p.dataId).id;e!==o&&(u=p,l=e,f=S.getInnerMostAxes(f.length,u.shape.length))}S.assertAxesAreInnerMostDims("mean",f,u.shape.length);let[m,g]=S.computeOutAndReduceShapes(u.shape,f),b=y.sizeFromShape(g),x=u;"float32"!==u.dtype&&(x=ii({backend:t,inputs:{x:u},attrs:{dtype:"float32"}}),l=t.dataIdMap.get(x.dataId).id);let v=t.makeOutput(m,"float32");if(0!==y.sizeFromShape(u.shape)){let e=t.dataIdMap.get(v.dataId).id;xG(l,b,e)}if(c&&t.disposeData(p.dataId),s){let e=S.expandShapeToKeepDim(v.shape,d);v.shape=e}return"float32"!==u.dtype&&t.disposeData(x.dataId),v}var bG,yG={kernelName:fs,backendName:"wasm",setupFunc:Vit,kernelFunc:Git};function Wit(e){bG=e.wasm.cwrap(ds,null,["number","number","number","number"])}function Uit(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:h,originalAxes:d,inputWasTransposed:c}=Cn(i,r,t);if(c){let e=t.dataIdMap.get(p.dataId).id;e!==o&&(u=p,l=e)}let f=u.shape.length;S.assertAxesAreInnerMostDims("min",h,f);let[m,g]=S.computeOutAndReduceShapes(u.shape,h),b=y.sizeFromShape(g),x=t.makeOutput(m,u.dtype);if(0!==y.sizeFromShape(u.shape)){let e=t.dataIdMap.get(x.dataId).id;bG(l,qt[i.dtype],b,e)}if(c&&t.disposeData(p.dataId),s){let e=S.expandShapeToKeepDim(x.shape,d);x.shape=e}return x}var Ok,IG,wG={kernelName:ds,backendName:"wasm",setupFunc:Wit,kernelFunc:Uit},Hit=!1,CG=ue(hs,Hit);function qit(e){IG=e.wasm.cwrap(gs,null,["number","array","number","number","array","array","number","number"])}function Kit(e){let{inputs:{x:t},backend:n,attrs:{paddings:a,mode:r}}=e,s=a.map(((e,n)=>e[0]+t.shape[n]+e[1])),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),p=a.map((e=>e[0])),h=a.map((e=>e[1])),d=new Uint8Array(new Int32Array(p).buffer),c=new Uint8Array(new Int32Array(h).buffer);return IG(i,u,t.shape.length,qt[t.dtype],d,c,Ok[r],l),o}!function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"}(Ok||(Ok={}));var TG,vG={kernelName:gs,backendName:"wasm",kernelFunc:Kit,setupFunc:qit},jit=!0,SG=ue(xs,jit),NG=te(di);function Fd(e,t){let n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),a=n[0],r=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:a,selectedSize:r,pSelectedScores:s,pValidOutputs:i}}function Xit(e){TG=e.wasm.cwrap(La,"number",["number","number","number","number","number"])}function Yit(e){let{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i}=a,{boxes:o,scores:l}=n,u=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(l.dataId).id,h=TG(u,p,s,r,i),{pSelectedIndices:d,selectedSize:c,pSelectedScores:f,pValidOutputs:m}=Fd(t,h);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([c],"int32",d)}var EG,kG={kernelName:La,backendName:"wasm",setupFunc:Xit,kernelFunc:Yit};function Zit(e){EG=e.wasm.cwrap(Ma,"number",["number","number","number","number","number","bool"])}function Jit(e){let{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=a,{boxes:l,scores:u}=n,p=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,d=EG(p,h,s,r,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=Fd(t,d);return t.wasm._free(m),[t.makeOutput([f],"int32",c),t.makeOutput([],"int32",g)]}var AG,_G={kernelName:Ma,backendName:"wasm",setupFunc:Zit,kernelFunc:Jit};function Qit(e){AG=e.wasm.cwrap(za,"number",["number","number","number","number","number","number"])}function tat(e){let{backend:t,inputs:n,attrs:a}=e,{iouThreshold:r,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=a,{boxes:l,scores:u}=n,p=t.dataIdMap.get(l.dataId).id,h=t.dataIdMap.get(u.dataId).id,d=AG(p,h,s,r,i,o),{pSelectedIndices:c,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=Fd(t,d);return t.wasm._free(g),[t.makeOutput([f],"int32",c),t.makeOutput([f],"float32",m)]}var RG,$G={kernelName:za,backendName:"wasm",setupFunc:Qit,kernelFunc:tat},eat=!1,DG=ue(Pa,eat,"bool");function rat(e){RG=e.wasm.cwrap(ys,null,["number","number","number","number","number"])}function nat(e){let{inputs:t,backend:n,attrs:a}=e,{indices:r}=t,{dtype:s,depth:i,onValue:o,offValue:l}=a,u=n.makeOutput([...r.shape,i],s),p=n.dataIdMap.get(u.dataId).id,h=n.dataIdMap.get(r.dataId).id;return RG(h,i,o,l,p),u}var FG={kernelName:ys,backendName:"wasm",setupFunc:rat,kernelFunc:nat};function oat(e){let{inputs:{x:t},backend:n}=e,a=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(a).fill(1),a}var OG={kernelName:hi,backendName:"wasm",kernelFunc:oat};function sat(e){let{inputs:t,backend:n,attrs:a}=e,{axis:r}=a;if(1===t.length)return cI({inputs:{input:t[0]},backend:n,attrs:{dim:r}});let s=t[0].shape,i=t[0].dtype;t.forEach((e=>{y.assertShapesMatch(s,e.shape,"All tensors passed to stack must have matching shapes"),y.assert(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));let o=[],l=Dk({inputs:t.map((e=>{let t=cI({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeData(e.dataId))),l}var LG,PG={kernelName:gi,backendName:"wasm",kernelFunc:sat};function iat(e){LG=e.wasm.cwrap(bs,null,["number","array","number","number","array","array","number","number"])}function aat(e){let{inputs:{x:t},backend:n,attrs:{paddings:a,constantValue:r}}=e,s=a.map(((e,n)=>e[0]+t.shape[n]+e[1]));if(0===y.sizeFromShape(t.shape))return Fk({backend:n,attrs:{shape:s,value:r,dtype:t.dtype}});let i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),l=n.dataIdMap.get(o.dataId).id,u=new Uint8Array(new Int32Array(t.shape).buffer),p=a.map((e=>e[0])),h=a.map((e=>e[1])),d=new Uint8Array(new Int32Array(p).buffer),c=new Uint8Array(new Int32Array(h).buffer);return LG(i,u,t.shape.length,qt[t.dtype],d,c,r,l),o}var zG,pI={kernelName:bs,backendName:"wasm",kernelFunc:aat,setupFunc:iat},lat=!1,MG=ue(ws,lat);function uat(e){zG=e.wasm.cwrap(Cs,null,["number","number","number"])}function cat(e){let{inputs:t,backend:n}=e,{x:a,alpha:r}=t,s=n.dataIdMap.get(a.dataId).id,i=n.dataIdMap.get(r.dataId).id,o=s,l=a,u=l;"float32"!==l.dtype&&(u=ii({backend:n,inputs:{x:a},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(u.dataId).id);let p=n.makeOutput(a.shape,"float32"),h=n.dataIdMap.get(p.dataId).id;return zG(o,i,h),"float32"!==l.dtype&&n.disposeData(u.dataId),p}var VG,BG={kernelName:Cs,backendName:"wasm",setupFunc:uat,kernelFunc:cat};function pat(e){VG=e.wasm.cwrap(Is,null,["number","number","number","number"])}function mat(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:h,originalAxes:d,inputWasTransposed:c}=Cn(i,r,t),f=h;if(c){let e=t.dataIdMap.get(p.dataId).id;e!==o&&(u=p,l=e,f=S.getInnerMostAxes(f.length,u.shape.length))}S.assertAxesAreInnerMostDims("prod",f,u.shape.length);let[m,g]=S.computeOutAndReduceShapes(u.shape,f),b=y.sizeFromShape(g),x=t.makeOutput(m,u.dtype);if(0!==y.sizeFromShape(u.shape)){let e=t.dataIdMap.get(x.dataId).id;VG(l,b,qt[x.dtype],e)}if(c&&t.disposeData(p.dataId),s){let e=S.expandShapeToKeepDim(x.shape,d);x.shape=e}return x}var jG,GG={kernelName:Is,backendName:"wasm",setupFunc:pat,kernelFunc:mat},fat=e=>{let{backend:t,attrs:n}=e,{start:a,stop:r,step:s,dtype:i}=n,o=Dc(a,r,s,i),l=t.makeOutput([o.length],i);return t.typedArrayFromHeap(l).set(o),l},WG={kernelName:Ml,backendName:"wasm",kernelFunc:fat},dat=!0,UG=ue(ts,dat),HG=te(vs),qG=te(Ss),KG=te(ks);function hat(e){jG=e.wasm.cwrap(Ts,null,["number","number","number","number","number","number","number","number","number","number"])}function gat(e){let t,{backend:n,inputs:a,attrs:r}=e,{images:s}=a,{alignCorners:i,halfPixelCenters:o,size:l}=r,[u,p]=l,[h,d,c,f]=s.shape,m=[h,u,p,f],g=n.dataIdMap.get(s.dataId);"float32"!==g.dtype&&(t=ii({backend:n,inputs:{x:s},attrs:{dtype:"float32"}}),g=n.dataIdMap.get(t.dataId));let b=g.id,x=n.makeOutput(m,"float32");if(0===y.sizeFromShape(s.shape))return x;let v=n.dataIdMap.get(x.dataId).id;return jG(b,h,d,c,f,u,p,i?1:0,o?1:0,v),null!=t&&n.disposeData(t.dataId),x}var YG,XG={kernelName:Ts,backendName:"wasm",setupFunc:hat,kernelFunc:gat};function xat(e){YG=e.wasm.cwrap(Ns,null,["number","number","number","number","number","number","number","number","number","number"])}function yat(e){let{backend:t,inputs:n,attrs:a}=e,{images:r}=n,{alignCorners:s,halfPixelCenters:i,size:o}=a,[l,u]=o,[p,h,d,c]=r.shape,f=[p,l,u,c],m=t.makeOutput(f,"float32");if(0===y.sizeFromShape(r.shape))return m;let g,b=t.dataIdMap.get(r.dataId);"float32"!==b.dtype&&(g=ii({backend:t,inputs:{x:r},attrs:{dtype:"float32"}}),b=t.dataIdMap.get(g.dataId));let x=b.id,v=t.dataIdMap.get(m.dataId).id;return YG(x,p,h,d,c,l,u,s?1:0,i?1:0,v),null!=g&&t.disposeData(g.dataId),m}var JG,ZG={kernelName:Ns,backendName:"wasm",setupFunc:xat,kernelFunc:yat};function bat(e){JG=e.wasm.cwrap(Es,null,["number","array","number","array","number","number"])}function wat(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{dims:s}=a,i=y.parseAxisParam(s,r.shape);if(0===r.shape.length)return Xc({inputs:{x:r},backend:n});let o=n.makeOutput(r.shape,r.dtype),l=n.dataIdMap.get(r.dataId).id,u=n.dataIdMap.get(o.dataId).id,p=new Uint8Array(new Int32Array(i).buffer),h=new Uint8Array(new Int32Array(r.shape).buffer);JG(l,p,i.length,h,r.shape.length,u);let d=ur({inputs:{x:o},attrs:{shape:r.shape},backend:n});return n.disposeData(o.dataId),d}var tW,QG={kernelName:Es,backendName:"wasm",kernelFunc:wat,setupFunc:bat};function Cat(e){tW=e.wasm.cwrap(Xa,null,["number","number","number","number","number","number","number","number","array","number","number"])}function Iat(e){let{inputs:t,backend:n,attrs:a}=e,{image:r}=t,{radians:s,fillValue:i,center:o}=a,l=n.makeOutput(r.shape,r.dtype),u=n.dataIdMap.get(r.dataId).id,p=n.dataIdMap.get(l.dataId).id,[h,d,c,f]=r.shape,[m,g]=S.getImageCenter(o,d,c),y="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],b=new Uint8Array(new Int32Array(y).buffer);return tW(u,h,d,c,f,s,m,g,b,y.length,p),l}var oW,eW={kernelName:Xa,backendName:"wasm",kernelFunc:Iat,setupFunc:Cat},rW=te(_s),nW=te(As);function vat(e){oW=e.wasm.cwrap(Ba,null,["number","number","number","number","number","number","array","number","number"])}function Sat(e){let{backend:t,inputs:n,attrs:a}=e,{indices:r,updates:s}=n,{shape:i}=a,o=t.makeOutput(i,s.dtype);if(0===y.sizeFromShape(i))return o;let{sliceRank:l,numUpdates:u,sliceSize:p,strides:h,outputSize:d}=uh.calculateShapes(s,r,i),c=t.dataIdMap.get(r.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(h).buffer),g=t.dataIdMap.get(o.dataId).id;return oW(c,f,qt[s.dtype],l,u,p,m,d,g),o}var iW,sW={kernelName:Ba,backendName:"wasm",setupFunc:vat,kernelFunc:Sat};function Nat(e){iW=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function Tat(e){let{inputs:t,backend:n}=e,{condition:a,t:r,e:s}=t,i=n.dataIdMap.get(a.dataId).id,o=n.dataIdMap.get(r.dataId).id,l=n.dataIdMap.get(s.dataId).id,u=n.makeOutput(r.shape,r.dtype),p=n.dataIdMap.get(u.dataId).id,h=a.shape.length,d=r.shape.length,c=0===h||h>1||1===d?1:y.sizeFromShape(r.shape.slice(1));return iW(i,o,l,c,p),u}var lW,aW={kernelName:yi,backendName:"wasm",kernelFunc:Tat,setupFunc:Nat};function kat(e){lW=e.wasm.cwrap(Ds,null,["number","number"])}function Eat(e){let{backend:t,inputs:{x:n}}=e,a=t.dataIdMap.get(n.dataId).id,r=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(r.dataId).id;return 0===y.sizeFromShape(r.shape)||lW(a,s),r}var pW,uW={kernelName:"Sigmoid",backendName:"wasm",setupFunc:kat,kernelFunc:Eat},cW=te($s);function _at(e){pW=e.wasm.cwrap(Os,null,["number","number","number","number"])}function Aat(e){let{backend:t,inputs:{logits:n},attrs:{dim:a}}=e,r=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[a],l=y.sizeFromShape(n.shape)/o;return 0===y.sizeFromShape(s.shape)||pW(r,i,o,l),s}var mW={kernelName:Os,backendName:"wasm",setupFunc:_at,kernelFunc:Aat};function $at(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,{blockShape:s,paddings:i}=a,o=y.sizeFromShape(s),l=[[0,0]];l.push(...i);for(let e=1+s.length;e<r.shape.length;++e)l.push([0,0]);let u=pI.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),p=S.getReshaped(u.shape,s,o,!1),h=S.getPermuted(p.length,s.length,!1),d=S.getReshapedPermuted(u.shape,s,o,!1),c=ur({inputs:{x:u},backend:n,attrs:{shape:p}}),f=uo({inputs:{x:c},backend:n,attrs:{perm:h}}),m=ur({inputs:{x:f},backend:n,attrs:{shape:d}});return n.disposeData(u.dataId),n.disposeData(c.dataId),n.disposeData(f.dataId),m}var dW,fW={kernelName:wi,backendName:"wasm",kernelFunc:$at};function Dat(e){dW=e.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function Rat(e){let t,{backend:n,inputs:a}=e,{indices:r,values:s,denseShape:i,defaultValue:o}=a,l=r.shape[0],u=r.shape[1],p=n.readSync(i.dataId)[0],h=[l+p,u],d=n.dataIdMap.get(r.dataId).id,c=n.dataIdMap.get(s.dataId).id,f=n.dataIdMap.get(o.dataId).id,m=n.makeOutput(h,r.dtype),g=n.dataIdMap.get(m.dataId).id,y=n.makeOutput(h.slice(0,1),s.dtype),b=n.dataIdMap.get(y.dataId).id,x=n.makeOutput([p],"bool"),v=n.dataIdMap.get(x.dataId).id,w=n.makeOutput([l],r.dtype),k=n.dataIdMap.get(w.dataId).id,I=n.makeOutput([4],"int32"),N=n.dataIdMap.get(I.dataId).id,T=dW(d,c,qt[s.dtype],l,p,u,f,g,b,v,k,N),C=n.readSync(I.dataId);switch(C[0]){case 1:t=S.getSparseFillEmptyRowsIndicesDenseShapeMismatch(C[1]);break;case 2:t=S.getSparseFillEmptyRowsNegativeIndexErrorMessage(C[1],C[2]);break;case 3:t=S.getSparseFillEmptyRowsOutOfRangeIndexErrorMessage(C[1],C[2],C[3]);break;default:t=""}if(n.disposeData(I.dataId),t)throw n.disposeData(m.dataId),n.disposeData(y.dataId),n.disposeData(x.dataId),n.disposeData(w.dataId),new Error(t);let E=m,_=y;return T!==h[0]&&(E=Mo({inputs:{x:m},attrs:{begin:0,size:[T,u]},backend:n}),_=Mo({inputs:{x:y},attrs:{begin:0,size:T},backend:n}),n.disposeData(m.dataId),n.disposeData(y.dataId)),[E,_,x,w]}var gW,hW={kernelName:zl,backendName:"wasm",setupFunc:Dat,kernelFunc:Rat};function Fat(e){gW=e.wasm.cwrap(Ha,null,["number","number","number","number","number","number","number"])}function Oat(e){let{backend:t,inputs:n}=e,{inputIndices:a,inputShape:r,newShape:s}=n;if(2!==a.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${a.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);let i=t.dataIdMap.get(a.dataId).id,o=t.dataIdMap.get(r.dataId).id,l=t.dataIdMap.get(s.dataId).id,u=a.shape[0],p=y.sizeFromShape(s.shape),h=t.makeOutput([u,p],a.dtype),d=t.dataIdMap.get(h.dataId).id,c=t.makeOutput([p],s.dtype),f=t.dataIdMap.get(c.dataId).id,m=t.makeOutput([3],"int32"),g=t.dataIdMap.get(m.dataId).id;gW(i,o,l,u,d,f,g);let b,x=t.readSync(m.dataId);switch(x[0]){case 0:b=S.getSparseReshapeMultipleNegativeOneOutputDimErrorMessage(x[1],x[2]);break;case 1:b=S.getSparseReshapeNegativeOutputDimErrorMessage(x[1],x[2]);break;case 2:b=S.getSparseReshapeEmptyTensorZeroOutputDimErrorMessage();break;case 3:{let e=Array.from(t.readSync(r.dataId)),n=Array.from(t.readSync(c.dataId));b=S.getSparseReshapeInputOutputMultipleErrorMessage(e,n);break}case 4:{let e=Array.from(t.readSync(r.dataId)),n=Array.from(t.readSync(c.dataId));b=S.getSparseReshapeInputOutputMismatchErrorMessage(e,n);break}default:b=""}if(t.disposeData(m.dataId),b)throw t.disposeData(h.dataId),t.disposeData(c.dataId),new Error(b);return[h,c]}var yW,xW={kernelName:Ha,backendName:"wasm",setupFunc:Fat,kernelFunc:Oat};function mI(e){yW=e.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function fI(e,t){let{backend:n,inputs:a}=e,{data:r,indices:s,segmentIds:i}=a,o=s.shape[0],l=n.readSync(i.dataId,o-1,o)[0],u=o>0?l+1:0;if(u<0)throw new Error(S.getSparseSegmentReductionNegativeSegmentIdsErrorMessage());let p=r.shape.slice();p[0]=u;let h=n.dataIdMap.get(r.dataId).id,d=n.dataIdMap.get(s.dataId).id,c=n.dataIdMap.get(i.dataId).id,f=n.makeOutput(p,r.dtype),m=n.dataIdMap.get(f.dataId).id,g=n.makeOutput([4],"int32"),y=n.dataIdMap.get(g.dataId).id;yW(h,qt[r.dtype],r.shape[0],d,c,m,y,t,0);let b,x=n.readSync(g.dataId);switch(x[0]){case 0:b=S.getSparseSegmentReductionNegativeSegmentIdsErrorMessage();break;case 1:b=S.getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage();break;case 2:b=S.getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage(x[1],x[2]);break;case 3:b=S.getSparseSegmentReductionIndicesOutOfRangeErrorMessage(x[1],x[2],x[3]);break;default:b=""}if(n.disposeData(g.dataId),b)throw n.disposeData(f.dataId),new Error(b);return f}function Pat(e){return fI(e,!0)}var bW={kernelName:Bl,backendName:"wasm",setupFunc:mI,kernelFunc:Pat};function Lat(e){return fI(e,!1)}var wW={kernelName:Vl,backendName:"wasm",setupFunc:mI,kernelFunc:Lat};function Mat(e){let{inputs:t,attrs:n,backend:a}=e,{x:r}=t,{numOrSizeSplits:s,axis:i}=n,o=y.parseAxisParam(i,r.shape)[0],l=S.prepareSplitSize(r,s,o),u=new Array(r.shape.length).fill(0),p=r.shape.slice();return l.map((e=>{let t=[...p];t[o]=e;let n=Mo({inputs:{x:r},attrs:{begin:u,size:t},backend:a});return u[o]+=e,n}))}var NW,CW={kernelName:Ci,backendName:"wasm",kernelFunc:Mat},IW=te(Rs),vW=te(Gl),zat=!0,SW=ue(Ps,zat);function Bat(e){NW=e.wasm.cwrap(fo,null,["number","number","number","number"])}function Vat(e){let{backend:t,inputs:n,attrs:a}=e,{alpha:r}=a,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),l=t.dataIdMap.get(o.dataId).id;return NW(i,r,qt[s.dtype],l),o}var kW,TW={kernelName:fo,backendName:"wasm",setupFunc:Bat,kernelFunc:Vat};function Gat(e){kW=e.wasm.cwrap(qa,null,["number","array","number","array","array","array","array","array","number","number"])}function Wat(e){let t,{backend:n,inputs:a,attrs:r}=e,{x:s}=a,{begin:i,end:o,strides:l,beginMask:u,endMask:p,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:c}=r,{finalShapeSparse:f,finalShape:m,isIdentity:g,sliceDim0:b,isSimpleSlice:x,begin:v,end:w,strides:k}=Me.sliceInfo(s.shape,i,o,l,u,p,h,d,c);if(g)t=ur({inputs:{x:s},backend:n,attrs:{shape:m}});else if(b||x){y.assert(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));let e=Me.computeOutShape(v,w,k),a=Mo({inputs:{x:s},backend:n,attrs:{begin:v,size:e}});t=ur({inputs:{x:a},backend:n,attrs:{shape:m}}),n.disposeData(a.dataId)}else{let e=n.makeOutput(f,"float32"),a=n.dataIdMap.get(s.dataId).id,r=new Uint8Array(new Int32Array(y.computeStrides(s.shape)).buffer),i=new Uint8Array(new Int32Array(v).buffer),o=new Uint8Array(new Int32Array(w).buffer),l=new Uint8Array(new Int32Array(k).buffer),u=new Uint8Array(new Int32Array(f).buffer),p=new Uint8Array(new Int32Array(y.computeStrides(f)).buffer),h=n.dataIdMap.get(e.dataId).id;kW(a,r,s.shape.length,i,o,l,u,p,f.length,h),t=ur({inputs:{x:e},backend:n,attrs:{shape:m}}),n.disposeData(e.dataId)}return t}var EW={kernelName:qa,backendName:"wasm",setupFunc:Gat,kernelFunc:Wat};function Uat(e){let{backend:t,inputs:n,attrs:a}=e,{data:r,dataSplits:s}=n,{separator:i,nGramWidths:o,leftPad:l,rightPad:u,padWidth:p,preserveShortSequences:h}=a,d=t.readSync(r.dataId),c=t.readSync(s.dataId),[f,m]=Fc(d,c,i,o,l,u,p,h),g=t.makeOutput([f.length],"string");t.dataIdMap.get(g.dataId).stringBytes=f;let y=t.makeOutput(s.shape,"int32");return t.typedArrayFromHeap(y).set(m),[g,y]}var _W={kernelName:Wl,backendName:"wasm",kernelFunc:Uat};function Hat(e){let{backend:t,inputs:n,attrs:a}=e,{input:r,delimiter:s}=n,{skipEmpty:i}=a,o=t.readSync(r.dataId),l=t.readSync(s.dataId),[u,p,h]=Oc(o,l[0],i),d=p.length,c=t.makeOutput([d,2],"int32");t.typedArrayFromHeap(c).set(u);let f=t.makeOutput([d],"string");t.dataIdMap.get(f.dataId).stringBytes=p;let m=t.makeOutput([2],"int32");return t.typedArrayFromHeap(m).set(h),[c,f,m]}var AW={kernelName:Ul,backendName:"wasm",kernelFunc:Hat};function qat(e){let{backend:t,inputs:n,attrs:a}=e,{input:r}=n,{numBuckets:s}=a,i=Pc(t.readSync(r.dataId),s),o=t.makeOutput(r.shape,"int32");return t.typedArrayFromHeap(o).set(i),o}var RW,$W={kernelName:Hl,backendName:"wasm",kernelFunc:qat},Kat=!0,DW=ue(Ls,Kat);function jat(e){RW=e.wasm.cwrap(Fs,null,["number","number","number","number"])}function Xat(e){let{backend:t,inputs:n,attrs:a}=e,{axis:r,keepDims:s}=a,{x:i}=n,o=t.dataIdMap.get(i.dataId).id,l=o,u=i,{transposed:p,axes:h,originalAxes:d,inputWasTransposed:c}=Cn(i,r,t),f=h;if(c){let e=t.dataIdMap.get(p.dataId).id;e!==o&&(u=p,l=e,f=S.getInnerMostAxes(f.length,u.shape.length))}S.assertAxesAreInnerMostDims("sum",f,u.shape.length);let[m,g]=S.computeOutAndReduceShapes(u.shape,f),b=y.sizeFromShape(g),x=t.makeOutput(m,u.dtype);if(0!==y.sizeFromShape(u.shape)){let e=t.dataIdMap.get(x.dataId).id;RW(l,b,qt[x.dtype],e)}if(c&&t.disposeData(p.dataId),s){let e=S.expandShapeToKeepDim(x.shape,d);x.shape=e}return x}var LW,FW={kernelName:Fs,backendName:"wasm",setupFunc:jat,kernelFunc:Xat},OW=te(Ms),PW=te(zs);function Yat(e){LW=e.wasm.cwrap(to,null,["number","array","number","array","number","number"])}function Zat(e){let{inputs:t,backend:n,attrs:a}=e,{x:r}=t,s=n.dataIdMap.get(r.dataId).id,{reps:i}=a,o=new Array(r.shape.length);for(let e=0;e<o.length;e++)o[e]=r.shape[e]*i[e];let l=new Uint8Array(new Int32Array(r.shape).buffer),u=new Uint8Array(new Int32Array(o).buffer),p=n.makeOutput(o,r.dtype),h=n.dataIdMap.get(p.dataId).id;return LW(s,l,r.shape.length,u,o.length,qt[p.dtype],h),p}var zW,MW={kernelName:to,backendName:"wasm",setupFunc:Yat,kernelFunc:Zat};function Jat(e){zW=e.wasm.cwrap(Ka,null,["number","array","number","number","number","bool","number","number"])}var VW,Qat=({inputs:e,backend:t,attrs:n})=>{let{x:a}=e,{k:r,sorted:s}=n,i=t.dataIdMap.get(a.dataId).id,o=new Uint8Array(new Int32Array(a.shape).buffer),l=a.shape.slice();l[l.length-1]=r;let u=t.makeOutput(l,a.dtype),p=t.dataIdMap.get(u.dataId).id,h=t.makeOutput(l,"int32"),d=t.dataIdMap.get(h.dataId).id;return zW(i,o,a.shape.length,qt[a.dtype],r,s,p,d),[u,h]},BW={kernelName:Ka,backendName:"wasm",setupFunc:Jat,kernelFunc:Qat};function tlt(e){VW=e.wasm.cwrap(ja,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])}function elt(e){let t,{backend:n,inputs:a,attrs:r}=e,{image:s,transforms:i}=a,{interpolation:o,fillMode:l,fillValue:u,outputShape:p}=r,[h,d,c,f]=s.shape,[m,g]=null!=p?p:[d,c],b=[h,m,g,f],x=new Uint8Array(new Int32Array(y.computeStrides(s.shape)).buffer),v=new Uint8Array(new Int32Array(y.computeStrides(b)).buffer),w=n.makeOutput(b,s.dtype),k=n.dataIdMap.get(w.dataId).id,I=n.dataIdMap.get(s.dataId).id,S=n.dataIdMap.get(i.dataId).id,N="nearest"===o?1:2;switch(l){case"constant":default:t=1;break;case"reflect":t=2;break;case"wrap":t=3;break;case"nearest":t=4}return VW(I,S,i.shape[0]>1,h,m,g,f,c,d,x,s.shape.length-1,v,b.length-1,N,t,u,k),w}var GW={kernelName:ja,backendName:"wasm",setupFunc:tlt,kernelFunc:elt};function rlt(e){let{inputs:t,backend:n,attrs:a}=e,{value:r}=t,{axis:s}=a;s<0&&(s+=r.shape.length);let i=r.shape[s],o=r.shape.length,l=new Array(o-1),u=0;for(let e=0;e<o;e++)e!==s&&(l[u++]=r.shape[e]);let p=new Array(i),h=new Array(o).fill(0),d=r.shape.slice();d[s]=1;for(let e=0;e<p.length;e++)h[s]=e,p[e]=Mo({inputs:{x:r},attrs:{begin:h,size:d},backend:n});return p.map((({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:l})))}var WW={kernelName:Ii,backendName:"wasm",kernelFunc:rlt};function nlt(e){let{inputs:{x:t},backend:n}=e,a=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(a).fill(0),a}var UW={kernelName:vi,backendName:"wasm",kernelFunc:nlt},olt=[KB,jB,XB,ZB,rV,oV,iV,lV,pV,fV,dV,hV,xV,yV,wV,IV,vV,SV,TV,EV,AV,DV,FV,OV,PV,LV,MV,zV,VV,GV,WV,HV,KV,XV,ZV,QV,tG,eG,JB,rG,oG,sG,iG,aG,lG,uG,cG,pG,fG,dG,gG,yG,wG,CG,vG,SG,NG,kG,_G,$G,DG,FG,OG,PG,pI,MG,BG,GG,WG,UG,HG,qG,KG,uV,XG,ZG,QG,eW,rW,nW,sW,aW,uW,cW,mV,mW,fW,hW,xW,bW,wW,CW,IW,vW,SW,TW,EW,_W,AW,$W,DW,FW,OW,PW,MW,BW,GW,tV,WW,UW];for(let e of olt)zu(e);var Pk=M();Pk.registerFlag("WASM_HAS_SIMD_SUPPORT",(async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch(e){return!1}})),Pk.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",(async()=>{if(Pk.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}}));var Gk=_l(jW()),tU=_l(YW()),Wk=_l(ZW()),JW=Gk.default||Gk,slt=Wk.default||Wk,pg=class extends Bo{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(rU),Vk=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new aa(this,Mn())}write(e,t,n){let a={id:this.dataIdNextNumber++};return this.move(a,e,t,n,1),a}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){let t=y.now();return e(),{kernelMs:y.now()-t}}move(e,t,n,a,r){let s=this.dataIdNextNumber++;if("string"===a){let i=t;return void this.dataIdMap.set(e,{id:s,stringBytes:i,shape:n,dtype:a,memoryOffset:null,refCount:r})}let i=y.sizeFromShape(n),o=i*y.bytesPerElement(a),l=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:l,shape:n,dtype:a,refCount:r}),this.wasm.tfjs.registerTensor(s,i,l),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),l)}async read(e){return this.readSync(e)}readSync(e,t,n){let{memoryOffset:a,dtype:r,shape:s,stringBytes:i}=this.dataIdMap.get(e);if("string"===r)return null!=t&&0!==t||!(null==n||n>=i.length)?i.slice(t,n):i;t=t||0,n=n||y.sizeFromShape(s);let o=y.bytesPerElement(r);return alt(this.wasm.HEAPU8.slice(a+t*o,a+n*o).buffer,r)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){let n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){let t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let a;if(null==n)a=this.write(null,e,t);else{let r=this.dataIdNextNumber++;a={id:r},this.dataIdMap.set(a,{id:r,memoryOffset:n,shape:e,dtype:t,refCount:1});let s=y.sizeFromShape(e);this.wasm.tfjs.registerTensor(r,s,n)}return{dataId:a,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){let a=this.wasm.HEAPU8.buffer,{memoryOffset:r}=this.dataIdMap.get(n),s=y.sizeFromShape(e);switch(t){case"float32":return new Float32Array(a,r,s);case"int32":return new Int32Array(a,r,s);case"bool":return new Uint8Array(a,r,s);default:throw new Error(`Unknown dtype ${t}`)}}};function ilt(e){return(t,n)=>(y.fetch(e,{credentials:"same-origin"}).then((a=>{a.ok||t.env.a(`failed to load wasm binary file at '${e}'`),a.arrayBuffer().then((e=>{WebAssembly.instantiate(e,t).then((e=>{n(e.instance,e.module)}))}))})),{})}function QW(e,t,n){if(null!=gI)return gI;let a="tfjs-backend-wasm.wasm";return e&&t?a="tfjs-backend-wasm-threaded-simd.wasm":e&&(a="tfjs-backend-wasm-simd.wasm"),null!=ug&&null!=ug[a]?ug[a]:n+a}async function eU(){let[e,t]=await Promise.all([M().getAsync("WASM_HAS_SIMD_SUPPORT"),M().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise(((n,a)=>{let r={locateFile:(n,a)=>{if(n.endsWith(".worker.js")){let e=tU.wasmWorkerContents.replace(/\n/g,"\\n"),t=new Blob([e],{type:"application/javascript"});return URL.createObjectURL(t)}return n.endsWith(".wasm")?QW(e,t,null!=lg?lg:a):a+n}};Uk&&(r.instantiateWasm=ilt(QW(e,t,null!=lg?lg:"")));let s,i=!1;r.onAbort=()=>{i||cg||(cg=!0,a({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==gI?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+JW.toString()],{type:"text/javascript"}),s=JW(r)):s=slt(r),s.then((e=>{i=!0,cg=!1,e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})})).catch(a)}))}function alt(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}var llt=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"],gI=null,lg=null,ug={},cg=!1,Uk=!1;function ult(e,t=!1){if(qS("setWasmPath has been deprecated in favor of setWasmPaths and will be removed in a future release."),cg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPath()` before you call `tf.setBackend()` or `tf.ready()`");gI=e,Uk=t}function clt(e,t=!1){if(cg)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)lg=e;else{ug=e;let t=llt.filter((e=>null==ug[e]));if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}Uk=t}var rU=-1,Vk=-1;function plt(e){rU=e}function mlt(){if(-1===Vk)throw new Error("WASM backend not initialized.");return Vk}var flt="4.1.0",dlt=2;Yp("wasm",(async()=>{let{wasm:e}=await eU();return new pg(e)}),dlt);var nU="4.1.0",hlt="4.1.0",glt="4.1.0",xlt="4.1.0",ylt="4.1.0",blt={tfjs:nU,"tfjs-core":nU,"tfjs-converter":hlt,"tfjs-backend-cpu":glt,"tfjs-backend-webgl":xlt,"tfjs-backend-wasm":ylt};export{ui as Abs,ua as Acos,ca as Acosh,mu as AdadeltaOptimizer,fu as AdagradOptimizer,du as AdamOptimizer,hu as AdamaxOptimizer,Qn as Add,Wo as AddN,pa as All,ma as Any,Uo as ArgMax,Al as ArgMin,fa as Asin,da as Asinh,ha as Atan,xa as Atan2,ga as Atanh,Ho as AvgPool,$l as AvgPool3D,up as AvgPool3DGrad,lp as AvgPoolGrad,pg as BackendWasm,qo as BatchMatMul,ci as BatchToSpaceND,cp as Bincount,pp as BroadcastArgs,d1 as BroadcastTo,Sb as Callback,Ly as CallbackList,co as Cast,Ko as Ceil,po as ClipByValue,mp as Complex,Dl as ComplexAbs,pi as Concat,jo as Conv2D,fp as Conv2DBackpropFilter,Xo as Conv2DBackpropInput,Rl as Conv3D,dp as Conv3DBackpropFilterV2,hp as Conv3DBackpropInputV2,Yo as Cos,Zo as Cosh,ba as CropAndResize,ya as Cumprod,Jo as Cumsum,zy as CustomCallback,aa as DataStorage,gp as DenseBincount,wa as DepthToSpace,Qo as DepthwiseConv2dNative,xp as DepthwiseConv2dNativeBackpropFilter,yp as DepthwiseConv2dNativeBackpropInput,bp as Diag,Fl as Dilation2D,Yd as Dilation2DBackpropFilter,Xd as Dilation2DBackpropInput,uS as ENV,Nb as EarlyStopping,wp as Einsum,es as Elu,Cp as EluGrad,Kd as Environment,Ia as Equal,Ca as Erf,rs as Exp,mi as ExpandDims,va as Expm1,Ip as FFT,Ol as Fill,Sa as FlipLeftRight,ns as Floor,os as FloorDiv,Zd as FromPixels,ss as FusedBatchNorm,Ni as FusedConv2D,Ti as FusedDepthwiseConv2D,Gc as GPGPUContext,Na as GatherNd,fi as GatherV2,Lh as GraphModel,Ta as Greater,is as GreaterEqual,My as History,vp as IFFT,mo as Identity,Sp as Imag,ye as InputSpec,ka as IsFinite,Ea as IsInf,as as IsNan,Bo as KernelBackend,Pl as LRN,Tp as LRNGrad,Ih as LayerVariable,Gn as LayersModel,ls as LeakyRelu,_a as Less,Aa as LessEqual,Np as LinSpace,us as Log,$a as Log1p,g1 as LogSoftmax,Da as LogicalAnd,Ra as LogicalNot,Fa as LogicalOr,h1 as LogicalXor,Nlt as LowerBound,$u as MathBackendWebGL,cs as Max,ms as MaxPool,Ll as MaxPool3D,Ep as MaxPool3DGrad,kp as MaxPoolGrad,_p as MaxPoolWithArgmax,ps as Maximum,fs as Mean,ds as Min,hs as Minimum,gs as MirrorPad,Oa as Mod,gu as MomentumOptimizer,Ap as Multinomial,xs as Multiply,di as Neg,La as NonMaxSuppressionV3,Ma as NonMaxSuppressionV4,za as NonMaxSuppressionV5,Pa as NotEqual,AS as OP_SCOPE_SUFFIX,ys as OneHot,hi as OnesLike,Hr as Optimizer,Hs as OptimizerConstructors,gi as Pack,bs as PadV2,Tlt as Pool,ws as Pow,Cs as Prelu,Is as Prod,xu as RMSPropOptimizer,En as RNN,$p as RaggedGather,Dp as RaggedRange,Rp as RaggedTensorToTensor,Ml as Range,wS as Rank,Fp as Real,ts as RealDiv,vs as Reciprocal,Ze as Reduction,Ss as Relu,ks as Relu6,xi as Reshape,Ts as ResizeBilinear,Pp as ResizeBilinearGrad,Ns as ResizeNearestNeighbor,Op as ResizeNearestNeighborGrad,Es as Reverse,Xa as RotateWithOffset,_s as Round,As as Rsqrt,Ui as SGDOptimizer,Ba as ScatterNd,Lp as SearchSorted,yi as Select,Va as Selu,Yi as Sequential,Ds as Sigmoid,Wa as Sign,$s as Sin,Ga as Sinh,bi as Slice,Os as Softmax,Ua as Softplus,wi as SpaceToBatchND,zl as SparseFillEmptyRows,Ha as SparseReshape,Bl as SparseSegmentMean,Vl as SparseSegmentSum,Mp as SparseToDense,Ci as SplitV,Rs as Sqrt,Gl as Square,Ps as SquaredDifference,fo as Step,qa as StridedSlice,Wl as StringNGrams,Ul as StringSplit,Hl as StringToHashBucketFast,Ls as Sub,Fs as Sum,tn as SymbolicTensor,Ms as Tan,zs as Tanh,Ft as Tensor,pe as TensorBuffer,to as Tile,Ka as TopK,ja as Transform,eo as Transpose,zp as Unique,Ii as Unpack,ql as UnsortedSegmentSum,klt as UpperBound,Ya as Variable,vi as ZerosLike,Si as _FusedMatMul,Ee as abs,lx as acos,ux as acosh,X as add,BE as addN,Jp as all,ju as any,Ri as argMax,cx as argMin,px as asin,mx as asinh,fx as atan,dx as atan2,hx as atanh,Ql as avgPool,xx as avgPool3d,bE as backend,S as backend_util,WE as basicLSTMCell,Oi as batchNorm,yx as batchNorm2d,bx as batchNorm3d,wx as batchNorm4d,tu as batchToSpaceND,Cx as bincount,l6 as booleanMaskAsync,HE as broadcastArgs,Pi as broadcastTo,Wr as broadcast_util,ox as browser,wt as buffer,jZ as callbacks,J as cast,Ix as ceil,vr as clipByValue,an as clone,In as complex,oe as concat,vx as concat1d,Sx as concat2d,Nx as concat3d,Tx as concat4d,Y$ as constraints,tm as conv1d,Sn as conv2d,rm as conv2dTranspose,kx as conv3d,_x as conv3dTranspose,Flt as copyRegisteredKernels,eu as cos,nm as cosh,gh as cosineWindow,Zu as cumprod,om as cumsum,cn as customGrad,RR as data,ph as denseBincount,qS as deprecationWarn,Ax as depthToSpace,Li as depthwiseConv2d,JZ as deregisterOp,Yl as device_util,qE as diag,$x as dilation2d,Spt as disableDeprecationWarnings,Nt as dispose,Npt as disposeVariables,pt as div,Dx as divNoNan,Rx as dot,p0 as dropout,KE as einsum,Mi as elu,vpt as enableDebugMode,Ipt as enableProdMode,m0 as enclosingPowerOfTwo,Mn as engine,M as env,Rr as equal,Fx as erf,Ox as euclideanNorm,or as exp,sr as expandDims,Px as expm1,Ju as eye,uu as fft,bo as fill,$pt as findBackend,Dpt as findBackendFactory,zi as floor,Zp as floorDiv,yM as forceHalfFloat,pu as fused,Bi as gather,x6 as gatherND,sx as gather_util,_pt as getBackend,mS as getGradient,Qd as getKernel,Bg as getKernelsForBackend,mlt as getThreadsCount,uk as gpgpu_util,SK as grad,NK as grads,Re as greater,un as greaterEqual,nl as ifft,Jl as imag,so as image,w6 as inTopKAsync,Z$ as initializers,z0 as input,$r as io,ym as irfft,Lx as isFinite,Mx as isInf,zx as isNaN,Ae as keep,qr as kernel_impls,AD as layers,ru as leakyRelu,sm as less,zn as lessEqual,d0 as linalg,YE as linspace,q7 as loadGraphModel,K7 as loadGraphModelSync,xD as loadLayersModel,Bx as localResponseNormalization,Nr as log,nu as log1p,Wx as logSigmoid,im as logSoftmax,am as logSumExp,Or as logicalAnd,ou as logicalNot,lm as logicalOr,Ux as logicalXor,wX as losses,ZE as lowerBound,Lt as matMul,CE as math,Sr as max,su as maxPool,qx as maxPool3d,JE as maxPoolWithArgmax,Nn as maximum,Se as mean,lh as memory,QE as meshgrid,$D as metrics,el as min,Vi as minimum,Kx as mirrorPad,jx as mod,Y8 as model,DD as models,Qu as moments,c6 as movingAverage,D as mul,t_ as multiRNNCell,e_ as multinomial,Ht as neg,xh as nextFrame,rl as norm,Ws as notEqual,$i as oneHot,pr as ones,wr as onesLike,T as op,r_ as outerProduct,pn as pad,n_ as pad1d,o_ as pad2d,s_ as pad3d,i_ as pad4d,Xx as pool,ln as pow,au as prelu,Qg as print,Yx as prod,Tpt as profile,a_ as raggedGather,l_ as raggedRange,u_ as raggedTensorToTensor,c_ as rand,k_ as randomGamma,rc as randomNormal,E_ as randomStandardNormal,Gi as randomUniform,Wi as range,Ept as ready,tl as real,ey as reciprocal,Yp as registerBackend,J8 as registerCallbackConstructor,y1 as registerGradient,zu as registerKernel,ZZ as registerOp,RD as regularizers,Pr as relu,um as relu6,Apt as removeBackend,R as reshape,mr as reverse,__ as reverse1d,A_ as reverse2d,$_ as reverse3d,D_ as reverse4d,cu as rfft,cm as round,pm as rsqrt,mt as scalar,m6 as scatterND,uh as scatter_util,fh as searchSorted,mm as selu,fm as separableConv2d,Z8 as sequential,Q as serialization,sH as setBackend,Rpt as setPlatform,plt as setThreadsCount,ult as setWasmPath,clt as setWasmPaths,vT as setWebGLContext,R_ as setdiff1dAsync,Jr as sigmoid,ry as sign,bX as signal,dm as sin,hm as sinh,Rt as slice,gm as slice1d,hh as slice2d,xm as slice3d,nc as slice4d,Me as slice_util,lu as softmax,Gs as softplus,iu as spaceToBatchND,CX as sparse,h6 as sparseToDense,yX as spectral,fr as split,ve as sqrt,Mt as square,bm as squaredDifference,Bn as squeeze,qe as stack,Co as step,ny as stridedSlice,IX as string,ct as sub,ft as sum,Hu as sumOutType,oy as tan,Fi as tanh,nr as tensor,Ke as tensor1d,Us as tensor2d,nx as tensor3d,F_ as tensor4d,O_ as tensor5d,P_ as tensor6d,yo as tensor_util,ME as test_util,B as tidy,Fr as tile,kpt as time,sy as topk,lc as train,Ot as transpose,wm as truncatedNormal,iy as unique,Rlt as unregisterGradient,Dlt as unregisterKernel,Cm as unsortedSegmentSum,dr as unstack,ar as upcastType,L_ as upperBound,y as util,TK as valueAndGrad,kK as valueAndGrads,ay as variable,Vx as variableGrads,blt as version,fR as version_converter,zE as version_core,Hm as version_layers,flt as version_wasm,xM as version_webgl,b1e as webgl,gd as webgl_util,_e as where,uy as whereAsync,Ne as zeros,It as zerosLike};